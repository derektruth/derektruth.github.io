{
  "api/BaseLib.ConfigSectionBase-1.html": {
    "href": "api/BaseLib.ConfigSectionBase-1.html",
    "title": "Class ConfigSectionBase<T> | CumulusRCM",
    "keywords": "Class ConfigSectionBase<T> Namespace BaseLib Assembly BaseLib.dll public abstract record ConfigSectionBase<T> : IEquatable<ConfigSectionBase<T>> Type Parameters T Inheritance object ConfigSectionBase<T> Implements IEquatable<ConfigSectionBase<T>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties SectionName public static string SectionName { get; } Property Value string"
  },
  "api/BaseLib.DateTimeExtensions.html": {
    "href": "api/BaseLib.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | CumulusRCM",
    "keywords": "Class DateTimeExtensions Namespace BaseLib Assembly BaseLib.dll public static class DateTimeExtensions Inheritance object DateTimeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DayOfWeekDifference(DateTime, DayOfWeek) public static int DayOfWeekDifference(this DateTime value, DayOfWeek day) Parameters value DateTime day DayOfWeek Returns int Midnight(DateTime) public static DateTime Midnight(this DateTime value) Parameters value DateTime Returns DateTime ToAge(DateTime) public static int ToAge(this DateTime date) Parameters date DateTime Returns int ToDateOnly(DateTime) public static DateOnly ToDateOnly(this DateTime dateTime) Parameters dateTime DateTime Returns DateOnly ToDateOnly(DateTime?) public static DateOnly? ToDateOnly(this DateTime? dateTime) Parameters dateTime DateTime? Returns DateOnly? ToDateTime(DateOnly) public static DateTime ToDateTime(this DateOnly dateOnly) Parameters dateOnly DateOnly Returns DateTime ToDateTime(DateOnly?) public static DateTime? ToDateTime(this DateOnly? dateOnly) Parameters dateOnly DateOnly? Returns DateTime? ToDateTime(string) public static DateTime? ToDateTime(this string dateString) Parameters dateString string Returns DateTime? ToLongDateShortTimeString(DateTime, bool) public static string ToLongDateShortTimeString(this DateTime value, bool newLineSeparator = false) Parameters value DateTime newLineSeparator bool Returns string ToLongDateShortTimeString(DateTime?, bool) public static string ToLongDateShortTimeString(this DateTime? value, bool newLineSeparator = false) Parameters value DateTime? newLineSeparator bool Returns string ToNextOrToday(DateTime, DayOfWeek) public static DateTime ToNextOrToday(this DateTime value, DayOfWeek day) Parameters value DateTime day DayOfWeek Returns DateTime ToNextSaturday(DateTime) public static DateTime ToNextSaturday(this DateTime value) Parameters value DateTime Returns DateTime ToShortDateString(DateTime) public static string ToShortDateString(this DateTime value) Parameters value DateTime Returns string ToShortDateString(DateTime?) public static string ToShortDateString(this DateTime? value) Parameters value DateTime? Returns string ToShortDateTimeString(DateTime, bool) public static string ToShortDateTimeString(this DateTime value, bool newLineSeparator = false) Parameters value DateTime newLineSeparator bool Returns string ToShortDateTimeString(DateTime?, bool) public static string ToShortDateTimeString(this DateTime? value, bool newLineSeparator = false) Parameters value DateTime? newLineSeparator bool Returns string TodayDateOnly() public static DateOnly TodayDateOnly() Returns DateOnly"
  },
  "api/BaseLib.DbConnectionManager.html": {
    "href": "api/BaseLib.DbConnectionManager.html",
    "title": "Class DbConnectionManager | CumulusRCM",
    "keywords": "Class DbConnectionManager Namespace BaseLib Assembly BaseLib.dll public sealed class DbConnectionManager : IDbConnectionManager Inheritance object DbConnectionManager Implements IDbConnectionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DbConnectionManager(IConfiguration) public DbConnectionManager(IConfiguration config) Parameters config IConfiguration DbConnectionManager(string) public DbConnectionManager(string connString) Parameters connString string Methods CloseAllConnections() public void CloseAllConnections() CreateConnection(string) public IDbConnection CreateConnection(string callerName = \"\") Parameters callerName string Returns IDbConnection"
  },
  "api/BaseLib.EnumerableExtensions.html": {
    "href": "api/BaseLib.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | CumulusRCM",
    "keywords": "Class EnumerableExtensions Namespace BaseLib Assembly BaseLib.dll public static class EnumerableExtensions Inheritance object EnumerableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ItemAsEnumerable<T>(T?) public static IEnumerable<T> ItemAsEnumerable<T>(this T? item) Parameters item T Returns IEnumerable<T> Type Parameters T ItemAsReadOnlyCollection<T>(T) public static IReadOnlyCollection<T> ItemAsReadOnlyCollection<T>(this T item) Parameters item T Returns IReadOnlyCollection<T> Type Parameters T"
  },
  "api/BaseLib.Enumeration.html": {
    "href": "api/BaseLib.Enumeration.html",
    "title": "Class Enumeration | CumulusRCM",
    "keywords": "Class Enumeration Namespace BaseLib Assembly BaseLib.dll public abstract record Enumeration : IEquatable<Enumeration> Inheritance object Enumeration Implements IEquatable<Enumeration> Derived AddressKind BillableServiceStatus Gender PhoneKind ProcessStatus State AndOr DataChangeKind Operator OrderDirection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Enumeration() protected Enumeration() Enumeration(Type, int, string) protected Enumeration(Type type, int value, string displayCode = \"\") Parameters type Type value int displayCode string Properties CharValue public char CharValue { get; } Property Value char Code public string Code { get; init; } Property Value string DisplayName public string DisplayName { get; protected init; } Property Value string Value public int Value { get; init; } Property Value int Methods CompareTo(object?) public int CompareTo(object? other) Parameters other object Returns int ContainsValue<T>(int) public static bool ContainsValue<T>(int value) where T : Enumeration, new() Parameters value int Returns bool Type Parameters T FromCode<T>(string?) public static T FromCode<T>(string? code) where T : Enumeration, new() Parameters code string Returns T Type Parameters T FromValue<T>(int) public static T FromValue<T>(int value) where T : Enumeration, new() Parameters value int Returns T Type Parameters T GetAll<T>() public static List<T> GetAll<T>() where T : Enumeration Returns List<T> Type Parameters T GetDefault<T>() public static T GetDefault<T>() where T : Enumeration Returns T Type Parameters T SetDefaultValue<T>(T) protected static void SetDefaultValue<T>(T defaultValue) where T : Enumeration Parameters defaultValue T Type Parameters T ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. TryFromValue<T>(int) public static T TryFromValue<T>(int value) where T : Enumeration, new() Parameters value int Returns T Type Parameters T Operators implicit operator int(Enumeration) public static implicit operator int(Enumeration e) Parameters e Enumeration Returns int"
  },
  "api/BaseLib.EnumerationInfo.html": {
    "href": "api/BaseLib.EnumerationInfo.html",
    "title": "Class EnumerationInfo | CumulusRCM",
    "keywords": "Class EnumerationInfo Namespace BaseLib Assembly BaseLib.dll public record EnumerationInfo : IEquatable<EnumerationInfo> Inheritance object EnumerationInfo Implements IEquatable<EnumerationInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties DefaultValue public Enumeration DefaultValue { get; set; } Property Value Enumeration Methods AddEnumValue(Enumeration, Type) public void AddEnumValue(Enumeration enumItem, Type type) Parameters enumItem Enumeration type Type Contains(Enumeration) public bool Contains(Enumeration enumItem) Parameters enumItem Enumeration Returns bool GetValues() public IEnumerable<Enumeration> GetValues() Returns IEnumerable<Enumeration>"
  },
  "api/BaseLib.EnumerationJsonConverter-1.html": {
    "href": "api/BaseLib.EnumerationJsonConverter-1.html",
    "title": "Class EnumerationJsonConverter<T> | CumulusRCM",
    "keywords": "Class EnumerationJsonConverter<T> Namespace BaseLib Assembly BaseLib.dll public class EnumerationJsonConverter<T> : JsonConverter<T> where T : Enumeration Type Parameters T Inheritance object JsonConverter JsonConverter<T> EnumerationJsonConverter<T> Inherited Members JsonConverter<T>.CanConvert(Type) JsonConverter<T>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<T>.WriteAsPropertyName(Utf8JsonWriter, T, JsonSerializerOptions) JsonConverter<T>.HandleNull JsonConverter<T>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type T. public override T? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns T The converted value. Write(Utf8JsonWriter, T, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, T enumeration, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. enumeration T options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/BaseLib.FormatHelpers.html": {
    "href": "api/BaseLib.FormatHelpers.html",
    "title": "Class FormatHelpers | CumulusRCM",
    "keywords": "Class FormatHelpers Namespace BaseLib Assembly BaseLib.dll public static class FormatHelpers Inheritance object FormatHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AsDateString(DateOnly, int) public static string AsDateString(this DateOnly d, int size = 8) Parameters d DateOnly size int Returns string AsDateString(DateTime, int, bool) public static string AsDateString(this DateTime dt, int size = 8, bool isIncludeTime = false) Parameters dt DateTime size int isIncludeTime bool Returns string AsDateString(TimeOnly) public static string AsDateString(this TimeOnly d) Parameters d TimeOnly Returns string AsTimeString(DateTime) public static string AsTimeString(this DateTime dt) Parameters dt DateTime Returns string CvtStrToDecimal(string?) public static decimal CvtStrToDecimal(string? s) Parameters s string Returns decimal DateFromString(string, string) public static DateOnly DateFromString(this string str, string format = \"yyyyMMdd\") Parameters str string format string Returns DateOnly ToDecimal(string?) public static decimal ToDecimal(this string? s) Parameters s string Returns decimal ToInt(string?) public static int ToInt(this string? s) Parameters s string Returns int ToLong(string?) public static long ToLong(this string? s) Parameters s string Returns long"
  },
  "api/BaseLib.Hash.html": {
    "href": "api/BaseLib.Hash.html",
    "title": "Class Hash | CumulusRCM",
    "keywords": "Class Hash Namespace BaseLib Assembly BaseLib.dll public static class Hash Inheritance object Hash Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetHash(string, HashAlgorithm) public static string GetHash(string input, HashAlgorithm hashingAlgorithm) Parameters input string hashingAlgorithm HashAlgorithm Returns string GetMd5Hash(string) public static string GetMd5Hash(string input) Parameters input string Returns string GetSha256Hash(string) public static string GetSha256Hash(string input) Parameters input string Returns string"
  },
  "api/BaseLib.IDbConnectionManager.html": {
    "href": "api/BaseLib.IDbConnectionManager.html",
    "title": "Interface IDbConnectionManager | CumulusRCM",
    "keywords": "Interface IDbConnectionManager Namespace BaseLib Assembly BaseLib.dll public interface IDbConnectionManager Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods CloseAllConnections() void CloseAllConnections() CreateConnection(string) IDbConnection CreateConnection(string callerName = \"\") Parameters callerName string Returns IDbConnection"
  },
  "api/BaseLib.StringExtensions.html": {
    "href": "api/BaseLib.StringExtensions.html",
    "title": "Class StringExtensions | CumulusRCM",
    "keywords": "Class StringExtensions Namespace BaseLib Assembly BaseLib.dll public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AsString(Stream, bool, Encoding?) public static string AsString(this Stream stream, bool shouldReadFromBeginning = true, Encoding? encoding = null) Parameters stream Stream shouldReadFromBeginning bool encoding Encoding Returns string EQ(string, string) public static bool EQ(this string item1, string item2) Parameters item1 string item2 string Returns bool IsNotNullOrEmpty(string) public static bool IsNotNullOrEmpty(this string value) Parameters value string Returns bool IsNullOrEmpty(string?) public static bool IsNullOrEmpty(this string? value) Parameters value string Returns bool Left(string, int) public static string Left(this string value, int length) Parameters value string length int Returns string LeftChar(string) public static char LeftChar(this string value) Parameters value string Returns char NE(string, string) public static bool NE(this string item1, string item2) Parameters item1 string item2 string Returns bool StreamToString(Stream, bool, Encoding?) public static string StreamToString(Stream stream, bool shouldReadFromBeginning = true, Encoding? encoding = null) Parameters stream Stream shouldReadFromBeginning bool encoding Encoding Returns string ToEnumeration<T>(string?) public static T ToEnumeration<T>(this string? value) where T : Enumeration, new() Parameters value string Returns T Type Parameters T ToStream(string) public static Stream ToStream(this string str) Parameters str string Returns Stream WhenNullOrEmpty(string, string?) public static string WhenNullOrEmpty(this string value, string? replacementValue = \"\") Parameters value string replacementValue string Returns string"
  },
  "api/BaseLib.TypeHelper.html": {
    "href": "api/BaseLib.TypeHelper.html",
    "title": "Class TypeHelper | CumulusRCM",
    "keywords": "Class TypeHelper Namespace BaseLib Assembly BaseLib.dll public static class TypeHelper Inheritance object TypeHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsDate(Type?) public static bool IsDate(this Type? myType) Parameters myType Type Returns bool IsNullOrZero<T>(T?) public static bool IsNullOrZero<T>(this T? instance) Parameters instance T Returns bool Type Parameters T IsNumeric(Type?) public static bool IsNumeric(this Type? myType) Parameters myType Type Returns bool"
  },
  "api/BaseLib.html": {
    "href": "api/BaseLib.html",
    "title": "Namespace BaseLib | CumulusRCM",
    "keywords": "Namespace BaseLib Classes ConfigSectionBase<T> DateTimeExtensions DbConnectionManager EnumerableExtensions Enumeration EnumerationInfo EnumerationJsonConverter<T> FormatHelpers Hash StringExtensions TypeHelper Interfaces IDbConnectionManager"
  },
  "api/Billing.BlazorComponents.BillableServiceEdit.html": {
    "href": "api/Billing.BlazorComponents.BillableServiceEdit.html",
    "title": "Class BillableServiceEdit | CumulusRCM",
    "keywords": "Class BillableServiceEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class BillableServiceEdit : ReactiveComponentBase<BillableServiceViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<BillableServiceViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<BillableServiceViewModel> BillableServiceEdit Implements IComponent IHandleEvent IHandleAfterRender IViewFor<BillableServiceViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<BillableServiceViewModel>.Dispose() ReactiveComponentBase<BillableServiceViewModel>.OnInitialized() ReactiveComponentBase<BillableServiceViewModel>.OnAfterRender(bool) ReactiveComponentBase<BillableServiceViewModel>.OnPropertyChanged(string) ReactiveComponentBase<BillableServiceViewModel>.Dispose(bool) ReactiveComponentBase<BillableServiceViewModel>.ViewModel ReactiveComponentBase<BillableServiceViewModel>.Activated ReactiveComponentBase<BillableServiceViewModel>.Deactivated ReactiveComponentBase<BillableServiceViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties BillableServiceViewModel [Parameter] [EditorRequired] public BillableServiceViewModel BillableServiceViewModel { get; set; } Property Value BillableServiceViewModel DiagnosesChooserViewModel public DiagnosesChooserViewModel? DiagnosesChooserViewModel { get; } Property Value DiagnosesChooserViewModel ProcedureChooserViewModel public CptCodeChooserViewModel? ProcedureChooserViewModel { get; } Property Value CptCodeChooserViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSetAsync() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override Task OnParametersSetAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Billing.BlazorComponents.BillableServicesByProvider.html": {
    "href": "api/Billing.BlazorComponents.BillableServicesByProvider.html",
    "title": "Class BillableServicesByProvider | CumulusRCM",
    "keywords": "Class BillableServicesByProvider Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class BillableServicesByProvider : CollectionViewBase<ProviderBillableServicesViewModel, ProviderBillableServices>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<ProviderBillableServicesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<ProviderBillableServicesViewModel> CollectionViewBase<ProviderBillableServicesViewModel, ProviderBillableServices> BillableServicesByProvider Implements IComponent IHandleEvent IHandleAfterRender IViewFor<ProviderBillableServicesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<ProviderBillableServicesViewModel, ProviderBillableServices>.ModalEditView CollectionViewBase<ProviderBillableServicesViewModel, ProviderBillableServices>.ModalEditViewTitle CollectionViewBase<ProviderBillableServicesViewModel, ProviderBillableServices>.OnInitialized() CollectionViewBase<ProviderBillableServicesViewModel, ProviderBillableServices>.edit(ProviderBillableServices) CollectionViewBase<ProviderBillableServicesViewModel, ProviderBillableServices>.add() ReactiveComponentBase<ProviderBillableServicesViewModel>.Dispose() ReactiveComponentBase<ProviderBillableServicesViewModel>.OnAfterRender(bool) ReactiveComponentBase<ProviderBillableServicesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<ProviderBillableServicesViewModel>.Dispose(bool) ReactiveComponentBase<ProviderBillableServicesViewModel>.ViewModel ReactiveComponentBase<ProviderBillableServicesViewModel>.Activated ReactiveComponentBase<ProviderBillableServicesViewModel>.Deactivated ReactiveComponentBase<ProviderBillableServicesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type? ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string ProviderBillableServicesViewModel public ProviderBillableServicesViewModel ProviderBillableServicesViewModel { get; set; } Property Value ProviderBillableServicesViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized() OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.BillableServicesEdit.html": {
    "href": "api/Billing.BlazorComponents.BillableServicesEdit.html",
    "title": "Class BillableServicesEdit | CumulusRCM",
    "keywords": "Class BillableServicesEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class BillableServicesEdit : ReactiveComponentBase<PatientBillableServicesViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PatientBillableServicesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PatientBillableServicesViewModel> BillableServicesEdit Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PatientBillableServicesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<PatientBillableServicesViewModel>.Dispose() ReactiveComponentBase<PatientBillableServicesViewModel>.OnAfterRender(bool) ReactiveComponentBase<PatientBillableServicesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PatientBillableServicesViewModel>.Dispose(bool) ReactiveComponentBase<PatientBillableServicesViewModel>.ViewModel ReactiveComponentBase<PatientBillableServicesViewModel>.Activated ReactiveComponentBase<PatientBillableServicesViewModel>.Deactivated ReactiveComponentBase<PatientBillableServicesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PatientBillableServicesViewModel [Parameter] [EditorRequired] public PatientBillableServicesViewModel PatientBillableServicesViewModel { get; set; } Property Value PatientBillableServicesViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized() OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.BillableServicesPage.html": {
    "href": "api/Billing.BlazorComponents.BillableServicesPage.html",
    "title": "Class BillableServicesPage | CumulusRCM",
    "keywords": "Class BillableServicesPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/BillableServicesPage\")] public class BillableServicesPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase BillableServicesPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.ClearinghouseEdit.html": {
    "href": "api/Billing.BlazorComponents.ClearinghouseEdit.html",
    "title": "Class ClearinghouseEdit | CumulusRCM",
    "keywords": "Class ClearinghouseEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class ClearinghouseEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ClearinghouseEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ClearinghouseViewModel [Parameter] [EditorRequired] public ClearinghouseViewModel ClearinghouseViewModel { get; set; } Property Value ClearinghouseViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Clearinghouses.html": {
    "href": "api/Billing.BlazorComponents.Clearinghouses.html",
    "title": "Class Clearinghouses | CumulusRCM",
    "keywords": "Class Clearinghouses Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class Clearinghouses : CollectionViewBase<ClearinghousesViewModel, ClearinghouseViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<ClearinghousesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<ClearinghousesViewModel> CollectionViewBase<ClearinghousesViewModel, ClearinghouseViewModel> Clearinghouses Implements IComponent IHandleEvent IHandleAfterRender IViewFor<ClearinghousesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<ClearinghousesViewModel, ClearinghouseViewModel>.ModalEditView CollectionViewBase<ClearinghousesViewModel, ClearinghouseViewModel>.ModalEditViewTitle CollectionViewBase<ClearinghousesViewModel, ClearinghouseViewModel>.OnInitialized() CollectionViewBase<ClearinghousesViewModel, ClearinghouseViewModel>.edit(ClearinghouseViewModel) CollectionViewBase<ClearinghousesViewModel, ClearinghouseViewModel>.add() ReactiveComponentBase<ClearinghousesViewModel>.Dispose() ReactiveComponentBase<ClearinghousesViewModel>.OnInitialized() ReactiveComponentBase<ClearinghousesViewModel>.OnAfterRender(bool) ReactiveComponentBase<ClearinghousesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<ClearinghousesViewModel>.Dispose(bool) ReactiveComponentBase<ClearinghousesViewModel>.ViewModel ReactiveComponentBase<ClearinghousesViewModel>.Activated ReactiveComponentBase<ClearinghousesViewModel>.Deactivated ReactiveComponentBase<ClearinghousesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.ClearinghousesPage.html": {
    "href": "api/Billing.BlazorComponents.ClearinghousesPage.html",
    "title": "Class ClearinghousesPage | CumulusRCM",
    "keywords": "Class ClearinghousesPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/ClearinghousesPage\")] public class ClearinghousesPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ClearinghousesPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.CollectionViewBase-2.html": {
    "href": "api/Billing.BlazorComponents.CollectionViewBase-2.html",
    "title": "Class CollectionViewBase<TCollectionVm, TItem> | CumulusRCM",
    "keywords": "Class CollectionViewBase<TCollectionVm, TItem> Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public abstract class CollectionViewBase<TCollectionVm, TItem> : ReactiveComponentBase<TCollectionVm>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<TCollectionVm>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable where TCollectionVm : class, ICollectionViewModel<TItem>, INotifyPropertyChanged where TItem : class Type Parameters TCollectionVm TItem Inheritance object ComponentBase ReactiveComponentBase<TCollectionVm> CollectionViewBase<TCollectionVm, TItem> Implements IComponent IHandleEvent IHandleAfterRender IViewFor<TCollectionVm> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Derived BillableServicesByProvider Clearinghouses CptCodes Diagnoses FacilityProviders InjectableCollectionViewBase<TCollectionVm, TItem> PatientAddresses PatientPhones PatientPolicies Patients Inherited Members ReactiveComponentBase<TCollectionVm>.Dispose() ReactiveComponentBase<TCollectionVm>.OnAfterRender(bool) ReactiveComponentBase<TCollectionVm>.OnPropertyChanged(string) ReactiveComponentBase<TCollectionVm>.Dispose(bool) ReactiveComponentBase<TCollectionVm>.ViewModel ReactiveComponentBase<TCollectionVm>.Activated ReactiveComponentBase<TCollectionVm>.Deactivated ReactiveComponentBase<TCollectionVm>.PropertyChanged ComponentBase.BuildRenderTree(RenderTreeBuilder) ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected abstract Type? ModalEditView { get; } Property Value Type ModalEditViewTitle protected abstract string ModalEditViewTitle { get; } Property Value string Methods OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized() add() protected void add() edit(TItem) protected void edit(TItem viewModel) Parameters viewModel TItem"
  },
  "api/Billing.BlazorComponents.Components.ChooserViewBase.html": {
    "href": "api/Billing.BlazorComponents.Components.ChooserViewBase.html",
    "title": "Class ChooserViewBase | CumulusRCM",
    "keywords": "Class ChooserViewBase Namespace Billing.BlazorComponents.Components Assembly Billing.BlazorComponents.dll public class ChooserViewBase : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ChooserViewBase Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Components.Popup_Dialog.html": {
    "href": "api/Billing.BlazorComponents.Components.Popup_Dialog.html",
    "title": "Class Popup_Dialog | CumulusRCM",
    "keywords": "Class Popup_Dialog Namespace Billing.BlazorComponents.Components Assembly Billing.BlazorComponents.dll public class Popup_Dialog : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Popup_Dialog Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ChildContent [Parameter] [EditorRequired] public RenderFragment ChildContent { get; set; } Property Value RenderFragment Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder cancel() protected void cancel() submit() protected void submit()"
  },
  "api/Billing.BlazorComponents.Components._Imports.html": {
    "href": "api/Billing.BlazorComponents.Components._Imports.html",
    "title": "Class _Imports | CumulusRCM",
    "keywords": "Class _Imports Namespace Billing.BlazorComponents.Components Assembly Billing.BlazorComponents.dll public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase _Imports Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Components.html": {
    "href": "api/Billing.BlazorComponents.Components.html",
    "title": "Namespace Billing.BlazorComponents.Components | CumulusRCM",
    "keywords": "Namespace Billing.BlazorComponents.Components Classes ChooserViewBase Popup_Dialog _Imports"
  },
  "api/Billing.BlazorComponents.CptChooser.html": {
    "href": "api/Billing.BlazorComponents.CptChooser.html",
    "title": "Class CptChooser | CumulusRCM",
    "keywords": "Class CptChooser Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class CptChooser : ReactiveComponentBase<CptCodeChooserViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<CptCodeChooserViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<CptCodeChooserViewModel> CptChooser Implements IComponent IHandleEvent IHandleAfterRender IViewFor<CptCodeChooserViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<CptCodeChooserViewModel>.Dispose() ReactiveComponentBase<CptCodeChooserViewModel>.OnInitialized() ReactiveComponentBase<CptCodeChooserViewModel>.OnAfterRender(bool) ReactiveComponentBase<CptCodeChooserViewModel>.OnPropertyChanged(string) ReactiveComponentBase<CptCodeChooserViewModel>.Dispose(bool) ReactiveComponentBase<CptCodeChooserViewModel>.ViewModel ReactiveComponentBase<CptCodeChooserViewModel>.Activated ReactiveComponentBase<CptCodeChooserViewModel>.Deactivated ReactiveComponentBase<CptCodeChooserViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties CptCodeChooserViewModel [Parameter] [EditorRequired] public CptCodeChooserViewModel CptCodeChooserViewModel { get; set; } Property Value CptCodeChooserViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.CptCodeEdit.html": {
    "href": "api/Billing.BlazorComponents.CptCodeEdit.html",
    "title": "Class CptCodeEdit | CumulusRCM",
    "keywords": "Class CptCodeEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class CptCodeEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase CptCodeEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties CptCodeViewModel [Parameter] [EditorRequired] public CptCodeViewModel CptCodeViewModel { get; set; } Property Value CptCodeViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.CptCodeSearch.html": {
    "href": "api/Billing.BlazorComponents.CptCodeSearch.html",
    "title": "Class CptCodeSearch | CumulusRCM",
    "keywords": "Class CptCodeSearch Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class CptCodeSearch : ReactiveComponentBase<CptCodeSearchViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<CptCodeSearchViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<CptCodeSearchViewModel> CptCodeSearch Implements IComponent IHandleEvent IHandleAfterRender IViewFor<CptCodeSearchViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<CptCodeSearchViewModel>.Dispose() ReactiveComponentBase<CptCodeSearchViewModel>.OnInitialized() ReactiveComponentBase<CptCodeSearchViewModel>.OnAfterRender(bool) ReactiveComponentBase<CptCodeSearchViewModel>.OnPropertyChanged(string) ReactiveComponentBase<CptCodeSearchViewModel>.Dispose(bool) ReactiveComponentBase<CptCodeSearchViewModel>.ViewModel ReactiveComponentBase<CptCodeSearchViewModel>.Activated ReactiveComponentBase<CptCodeSearchViewModel>.Deactivated ReactiveComponentBase<CptCodeSearchViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties CptCodeSearchViewModel [Parameter] [EditorRequired] public CptCodeSearchViewModel CptCodeSearchViewModel { get; set; } Property Value CptCodeSearchViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.CptCodes.html": {
    "href": "api/Billing.BlazorComponents.CptCodes.html",
    "title": "Class CptCodes | CumulusRCM",
    "keywords": "Class CptCodes Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class CptCodes : CollectionViewBase<CptCodesViewModel, CptCodeViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<CptCodesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<CptCodesViewModel> CollectionViewBase<CptCodesViewModel, CptCodeViewModel> CptCodes Implements IComponent IHandleEvent IHandleAfterRender IViewFor<CptCodesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<CptCodesViewModel, CptCodeViewModel>.ModalEditView CollectionViewBase<CptCodesViewModel, CptCodeViewModel>.ModalEditViewTitle CollectionViewBase<CptCodesViewModel, CptCodeViewModel>.OnInitialized() CollectionViewBase<CptCodesViewModel, CptCodeViewModel>.edit(CptCodeViewModel) CollectionViewBase<CptCodesViewModel, CptCodeViewModel>.add() ReactiveComponentBase<CptCodesViewModel>.Dispose() ReactiveComponentBase<CptCodesViewModel>.OnAfterRender(bool) ReactiveComponentBase<CptCodesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<CptCodesViewModel>.Dispose(bool) ReactiveComponentBase<CptCodesViewModel>.ViewModel ReactiveComponentBase<CptCodesViewModel>.Activated ReactiveComponentBase<CptCodesViewModel>.Deactivated ReactiveComponentBase<CptCodesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties CptCodesViewModel [Inject] protected CptCodesViewModel CptCodesViewModel { get; set; } Property Value CptCodesViewModel ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.CptCodesPage.html": {
    "href": "api/Billing.BlazorComponents.CptCodesPage.html",
    "title": "Class CptCodesPage | CumulusRCM",
    "keywords": "Class CptCodesPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/CptCodesPage\")] public class CptCodesPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase CptCodesPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Diagnoses.html": {
    "href": "api/Billing.BlazorComponents.Diagnoses.html",
    "title": "Class Diagnoses | CumulusRCM",
    "keywords": "Class Diagnoses Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class Diagnoses : CollectionViewBase<DiagnosesViewModel, DiagnosisViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<DiagnosesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<DiagnosesViewModel> CollectionViewBase<DiagnosesViewModel, DiagnosisViewModel> Diagnoses Implements IComponent IHandleEvent IHandleAfterRender IViewFor<DiagnosesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<DiagnosesViewModel, DiagnosisViewModel>.ModalEditView CollectionViewBase<DiagnosesViewModel, DiagnosisViewModel>.ModalEditViewTitle CollectionViewBase<DiagnosesViewModel, DiagnosisViewModel>.OnInitialized() CollectionViewBase<DiagnosesViewModel, DiagnosisViewModel>.edit(DiagnosisViewModel) CollectionViewBase<DiagnosesViewModel, DiagnosisViewModel>.add() ReactiveComponentBase<DiagnosesViewModel>.Dispose() ReactiveComponentBase<DiagnosesViewModel>.OnAfterRender(bool) ReactiveComponentBase<DiagnosesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<DiagnosesViewModel>.Dispose(bool) ReactiveComponentBase<DiagnosesViewModel>.ViewModel ReactiveComponentBase<DiagnosesViewModel>.Activated ReactiveComponentBase<DiagnosesViewModel>.Deactivated ReactiveComponentBase<DiagnosesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties DiagnosesViewModel [Inject] protected DiagnosesViewModel DiagnosesViewModel { get; set; } Property Value DiagnosesViewModel ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.DiagnosesChooser.html": {
    "href": "api/Billing.BlazorComponents.DiagnosesChooser.html",
    "title": "Class DiagnosesChooser | CumulusRCM",
    "keywords": "Class DiagnosesChooser Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class DiagnosesChooser : ReactiveComponentBase<DiagnosesChooserViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<DiagnosesChooserViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<DiagnosesChooserViewModel> DiagnosesChooser Implements IComponent IHandleEvent IHandleAfterRender IViewFor<DiagnosesChooserViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<DiagnosesChooserViewModel>.Dispose() ReactiveComponentBase<DiagnosesChooserViewModel>.OnInitialized() ReactiveComponentBase<DiagnosesChooserViewModel>.OnAfterRender(bool) ReactiveComponentBase<DiagnosesChooserViewModel>.OnPropertyChanged(string) ReactiveComponentBase<DiagnosesChooserViewModel>.Dispose(bool) ReactiveComponentBase<DiagnosesChooserViewModel>.ViewModel ReactiveComponentBase<DiagnosesChooserViewModel>.Activated ReactiveComponentBase<DiagnosesChooserViewModel>.Deactivated ReactiveComponentBase<DiagnosesChooserViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties DiagnosesChooserViewModel [Parameter] [EditorRequired] public DiagnosesChooserViewModel DiagnosesChooserViewModel { get; set; } Property Value DiagnosesChooserViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.DiagnosesPage.html": {
    "href": "api/Billing.BlazorComponents.DiagnosesPage.html",
    "title": "Class DiagnosesPage | CumulusRCM",
    "keywords": "Class DiagnosesPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/DiagnosesPage\")] public class DiagnosesPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase DiagnosesPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.DiagnosisEdit.html": {
    "href": "api/Billing.BlazorComponents.DiagnosisEdit.html",
    "title": "Class DiagnosisEdit | CumulusRCM",
    "keywords": "Class DiagnosisEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class DiagnosisEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase DiagnosisEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties DiagnosisViewModel [Parameter] [EditorRequired] public DiagnosisViewModel DiagnosisViewModel { get; set; } Property Value DiagnosisViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.DiagnosisSearch.html": {
    "href": "api/Billing.BlazorComponents.DiagnosisSearch.html",
    "title": "Class DiagnosisSearch | CumulusRCM",
    "keywords": "Class DiagnosisSearch Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class DiagnosisSearch : ReactiveComponentBase<DiagnosisSearchViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<DiagnosisSearchViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<DiagnosisSearchViewModel> DiagnosisSearch Implements IComponent IHandleEvent IHandleAfterRender IViewFor<DiagnosisSearchViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<DiagnosisSearchViewModel>.Dispose() ReactiveComponentBase<DiagnosisSearchViewModel>.OnInitialized() ReactiveComponentBase<DiagnosisSearchViewModel>.OnAfterRender(bool) ReactiveComponentBase<DiagnosisSearchViewModel>.OnPropertyChanged(string) ReactiveComponentBase<DiagnosisSearchViewModel>.Dispose(bool) ReactiveComponentBase<DiagnosisSearchViewModel>.ViewModel ReactiveComponentBase<DiagnosisSearchViewModel>.Activated ReactiveComponentBase<DiagnosisSearchViewModel>.Deactivated ReactiveComponentBase<DiagnosisSearchViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties DiagnosisSearchViewModel [Parameter] [EditorRequired] public DiagnosisSearchViewModel DiagnosisSearchViewModel { get; set; } Property Value DiagnosisSearchViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Facilities.html": {
    "href": "api/Billing.BlazorComponents.Facilities.html",
    "title": "Class Facilities | CumulusRCM",
    "keywords": "Class Facilities Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class Facilities : InjectableCollectionViewBase<FacilitiesViewModel, FacilityViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<FacilitiesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<FacilitiesViewModel> CollectionViewBase<FacilitiesViewModel, FacilityViewModel> InjectableCollectionViewBase<FacilitiesViewModel, FacilityViewModel> Facilities Implements IComponent IHandleEvent IHandleAfterRender IViewFor<FacilitiesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members InjectableCollectionViewBase<FacilitiesViewModel, FacilityViewModel>.InjectedViewModel InjectableCollectionViewBase<FacilitiesViewModel, FacilityViewModel>.OnInitialized() CollectionViewBase<FacilitiesViewModel, FacilityViewModel>.ModalEditView CollectionViewBase<FacilitiesViewModel, FacilityViewModel>.ModalEditViewTitle CollectionViewBase<FacilitiesViewModel, FacilityViewModel>.edit(FacilityViewModel) CollectionViewBase<FacilitiesViewModel, FacilityViewModel>.add() ReactiveComponentBase<FacilitiesViewModel>.Dispose() ReactiveComponentBase<FacilitiesViewModel>.OnInitialized() ReactiveComponentBase<FacilitiesViewModel>.OnAfterRender(bool) ReactiveComponentBase<FacilitiesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<FacilitiesViewModel>.Dispose(bool) ReactiveComponentBase<FacilitiesViewModel>.ViewModel ReactiveComponentBase<FacilitiesViewModel>.Activated ReactiveComponentBase<FacilitiesViewModel>.Deactivated ReactiveComponentBase<FacilitiesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.FacilitiesPage.html": {
    "href": "api/Billing.BlazorComponents.FacilitiesPage.html",
    "title": "Class FacilitiesPage | CumulusRCM",
    "keywords": "Class FacilitiesPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/FacilitiesPage\")] public class FacilitiesPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase FacilitiesPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.FacilityEdit.html": {
    "href": "api/Billing.BlazorComponents.FacilityEdit.html",
    "title": "Class FacilityEdit | CumulusRCM",
    "keywords": "Class FacilityEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class FacilityEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase FacilityEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties FacilityViewModel [Parameter] [EditorRequired] public FacilityViewModel FacilityViewModel { get; set; } Property Value FacilityViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.FacilityProviders.html": {
    "href": "api/Billing.BlazorComponents.FacilityProviders.html",
    "title": "Class FacilityProviders | CumulusRCM",
    "keywords": "Class FacilityProviders Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class FacilityProviders : CollectionViewBase<FacilityProvidersViewModel, FacilityProviderViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<FacilityProvidersViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<FacilityProvidersViewModel> CollectionViewBase<FacilityProvidersViewModel, FacilityProviderViewModel> FacilityProviders Implements IComponent IHandleEvent IHandleAfterRender IViewFor<FacilityProvidersViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<FacilityProvidersViewModel, FacilityProviderViewModel>.ModalEditView CollectionViewBase<FacilityProvidersViewModel, FacilityProviderViewModel>.ModalEditViewTitle CollectionViewBase<FacilityProvidersViewModel, FacilityProviderViewModel>.OnInitialized() CollectionViewBase<FacilityProvidersViewModel, FacilityProviderViewModel>.edit(FacilityProviderViewModel) CollectionViewBase<FacilityProvidersViewModel, FacilityProviderViewModel>.add() ReactiveComponentBase<FacilityProvidersViewModel>.Dispose() ReactiveComponentBase<FacilityProvidersViewModel>.OnInitialized() ReactiveComponentBase<FacilityProvidersViewModel>.OnAfterRender(bool) ReactiveComponentBase<FacilityProvidersViewModel>.OnPropertyChanged(string) ReactiveComponentBase<FacilityProvidersViewModel>.Dispose(bool) ReactiveComponentBase<FacilityProvidersViewModel>.ViewModel ReactiveComponentBase<FacilityProvidersViewModel>.Activated ReactiveComponentBase<FacilityProvidersViewModel>.Deactivated ReactiveComponentBase<FacilityProvidersViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties FacilityProvidersViewModel [Parameter] [EditorRequired] public FacilityProvidersViewModel FacilityProvidersViewModel { get; set; } Property Value FacilityProvidersViewModel ModalEditView protected override Type? ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.FilterExpression.html": {
    "href": "api/Billing.BlazorComponents.FilterExpression.html",
    "title": "Class FilterExpression | CumulusRCM",
    "keywords": "Class FilterExpression Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class FilterExpression : ReactiveComponentBase<ReactiveFilterExpression>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<ReactiveFilterExpression>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<ReactiveFilterExpression> FilterExpression Implements IComponent IHandleEvent IHandleAfterRender IViewFor<ReactiveFilterExpression> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<ReactiveFilterExpression>.Dispose() ReactiveComponentBase<ReactiveFilterExpression>.OnAfterRender(bool) ReactiveComponentBase<ReactiveFilterExpression>.OnPropertyChanged(string) ReactiveComponentBase<ReactiveFilterExpression>.Dispose(bool) ReactiveComponentBase<ReactiveFilterExpression>.ViewModel ReactiveComponentBase<ReactiveFilterExpression>.Activated ReactiveComponentBase<ReactiveFilterExpression>.Deactivated ReactiveComponentBase<ReactiveFilterExpression>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PatternMask [Parameter] public PatternMask? PatternMask { get; set; } Property Value PatternMask ReactiveFilterExpression [Parameter] [EditorRequired] public ReactiveFilterExpression ReactiveFilterExpression { get; set; } Property Value ReactiveFilterExpression Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.InjectableCollectionViewBase-2.html": {
    "href": "api/Billing.BlazorComponents.InjectableCollectionViewBase-2.html",
    "title": "Class InjectableCollectionViewBase<TCollectionVm, TItem> | CumulusRCM",
    "keywords": "Class InjectableCollectionViewBase<TCollectionVm, TItem> Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public abstract class InjectableCollectionViewBase<TCollectionVm, TItem> : CollectionViewBase<TCollectionVm, TItem>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<TCollectionVm>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable where TCollectionVm : class, ICollectionViewModel<TItem>, INotifyPropertyChanged where TItem : class, ITrackModelChanges Type Parameters TCollectionVm TItem Inheritance object ComponentBase ReactiveComponentBase<TCollectionVm> CollectionViewBase<TCollectionVm, TItem> InjectableCollectionViewBase<TCollectionVm, TItem> Implements IComponent IHandleEvent IHandleAfterRender IViewFor<TCollectionVm> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Derived Facilities InsuranceCompanies PracticeAddresses PracticePhones Practices Providers Inherited Members CollectionViewBase<TCollectionVm, TItem>.ModalEditView CollectionViewBase<TCollectionVm, TItem>.ModalEditViewTitle CollectionViewBase<TCollectionVm, TItem>.OnInitialized() CollectionViewBase<TCollectionVm, TItem>.edit(TItem) CollectionViewBase<TCollectionVm, TItem>.add() ReactiveComponentBase<TCollectionVm>.Dispose() ReactiveComponentBase<TCollectionVm>.OnAfterRender(bool) ReactiveComponentBase<TCollectionVm>.OnPropertyChanged(string) ReactiveComponentBase<TCollectionVm>.Dispose(bool) ReactiveComponentBase<TCollectionVm>.ViewModel ReactiveComponentBase<TCollectionVm>.Activated ReactiveComponentBase<TCollectionVm>.Deactivated ReactiveComponentBase<TCollectionVm>.PropertyChanged ComponentBase.BuildRenderTree(RenderTreeBuilder) ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties InjectedViewModel [Inject] protected ICollectionViewModel<TItem> InjectedViewModel { get; set; } Property Value ICollectionViewModel<TItem> Methods OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.InsuranceCompanies.html": {
    "href": "api/Billing.BlazorComponents.InsuranceCompanies.html",
    "title": "Class InsuranceCompanies | CumulusRCM",
    "keywords": "Class InsuranceCompanies Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class InsuranceCompanies : InjectableCollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<InsuranceCompaniesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<InsuranceCompaniesViewModel> CollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel> InjectableCollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel> InsuranceCompanies Implements IComponent IHandleEvent IHandleAfterRender IViewFor<InsuranceCompaniesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members InjectableCollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel>.InjectedViewModel InjectableCollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel>.OnInitialized() CollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel>.ModalEditView CollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel>.ModalEditViewTitle CollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel>.edit(InsuranceCompanyViewModel) CollectionViewBase<InsuranceCompaniesViewModel, InsuranceCompanyViewModel>.add() ReactiveComponentBase<InsuranceCompaniesViewModel>.Dispose() ReactiveComponentBase<InsuranceCompaniesViewModel>.OnInitialized() ReactiveComponentBase<InsuranceCompaniesViewModel>.OnAfterRender(bool) ReactiveComponentBase<InsuranceCompaniesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<InsuranceCompaniesViewModel>.Dispose(bool) ReactiveComponentBase<InsuranceCompaniesViewModel>.ViewModel ReactiveComponentBase<InsuranceCompaniesViewModel>.Activated ReactiveComponentBase<InsuranceCompaniesViewModel>.Deactivated ReactiveComponentBase<InsuranceCompaniesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.InsuranceCompanyEdit.html": {
    "href": "api/Billing.BlazorComponents.InsuranceCompanyEdit.html",
    "title": "Class InsuranceCompanyEdit | CumulusRCM",
    "keywords": "Class InsuranceCompanyEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class InsuranceCompanyEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase InsuranceCompanyEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties InsuranceViewModel [Parameter] [EditorRequired] public InsuranceCompanyViewModel InsuranceViewModel { get; set; } Property Value InsuranceCompanyViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.InsurancePage.html": {
    "href": "api/Billing.BlazorComponents.InsurancePage.html",
    "title": "Class InsurancePage | CumulusRCM",
    "keywords": "Class InsurancePage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/InsurancePage\")] public class InsurancePage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase InsurancePage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.LoginDisplay.html": {
    "href": "api/Billing.BlazorComponents.LoginDisplay.html",
    "title": "Class LoginDisplay | CumulusRCM",
    "keywords": "Class LoginDisplay Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class LoginDisplay : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase LoginDisplay Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.MainLayout.html": {
    "href": "api/Billing.BlazorComponents.MainLayout.html",
    "title": "Class MainLayout | CumulusRCM",
    "keywords": "Class MainLayout Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class MainLayout : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase MainLayout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Fields ThemeManagerOpen public bool ThemeManagerOpen Field Value bool Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.NavMenu.html": {
    "href": "api/Billing.BlazorComponents.NavMenu.html",
    "title": "Class NavMenu | CumulusRCM",
    "keywords": "Class NavMenu Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class NavMenu : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase NavMenu Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Pages.Index.html": {
    "href": "api/Billing.BlazorComponents.Pages.Index.html",
    "title": "Class Index | CumulusRCM",
    "keywords": "Class Index Namespace Billing.BlazorComponents.Pages Assembly Billing.BlazorComponents.dll [Route(\"/\")] public class Index : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Index Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Pages.ShowProfilePage.html": {
    "href": "api/Billing.BlazorComponents.Pages.ShowProfilePage.html",
    "title": "Class ShowProfilePage | CumulusRCM",
    "keywords": "Class ShowProfilePage Namespace Billing.BlazorComponents.Pages Assembly Billing.BlazorComponents.dll [Route(\"/showprofilepage\")] public class ShowProfilePage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ShowProfilePage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Pages.html": {
    "href": "api/Billing.BlazorComponents.Pages.html",
    "title": "Namespace Billing.BlazorComponents.Pages | CumulusRCM",
    "keywords": "Namespace Billing.BlazorComponents.Pages Classes Index ShowProfilePage"
  },
  "api/Billing.BlazorComponents.PatientAddressEdit.html": {
    "href": "api/Billing.BlazorComponents.PatientAddressEdit.html",
    "title": "Class PatientAddressEdit | CumulusRCM",
    "keywords": "Class PatientAddressEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientAddressEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PatientAddressEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PatientAddressViewModel [Parameter] [EditorRequired] public PatientAddressViewModel PatientAddressViewModel { get; set; } Property Value PatientAddressViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PatientAddresses.html": {
    "href": "api/Billing.BlazorComponents.PatientAddresses.html",
    "title": "Class PatientAddresses | CumulusRCM",
    "keywords": "Class PatientAddresses Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientAddresses : CollectionViewBase<PatientAddressesViewModel, PatientAddressViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PatientAddressesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PatientAddressesViewModel> CollectionViewBase<PatientAddressesViewModel, PatientAddressViewModel> PatientAddresses Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PatientAddressesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<PatientAddressesViewModel, PatientAddressViewModel>.ModalEditView CollectionViewBase<PatientAddressesViewModel, PatientAddressViewModel>.ModalEditViewTitle CollectionViewBase<PatientAddressesViewModel, PatientAddressViewModel>.OnInitialized() CollectionViewBase<PatientAddressesViewModel, PatientAddressViewModel>.edit(PatientAddressViewModel) CollectionViewBase<PatientAddressesViewModel, PatientAddressViewModel>.add() ReactiveComponentBase<PatientAddressesViewModel>.Dispose() ReactiveComponentBase<PatientAddressesViewModel>.OnInitialized() ReactiveComponentBase<PatientAddressesViewModel>.OnAfterRender(bool) ReactiveComponentBase<PatientAddressesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PatientAddressesViewModel>.Dispose(bool) ReactiveComponentBase<PatientAddressesViewModel>.ViewModel ReactiveComponentBase<PatientAddressesViewModel>.Activated ReactiveComponentBase<PatientAddressesViewModel>.Deactivated ReactiveComponentBase<PatientAddressesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string PatientAddressesViewModel [Parameter] [EditorRequired] public PatientAddressesViewModel PatientAddressesViewModel { get; set; } Property Value PatientAddressesViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.PatientEdit.html": {
    "href": "api/Billing.BlazorComponents.PatientEdit.html",
    "title": "Class PatientEdit | CumulusRCM",
    "keywords": "Class PatientEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PatientEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PatientViewModel [Parameter] [EditorRequired] public PatientViewModel PatientViewModel { get; set; } Property Value PatientViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PatientPhoneEdit.html": {
    "href": "api/Billing.BlazorComponents.PatientPhoneEdit.html",
    "title": "Class PatientPhoneEdit | CumulusRCM",
    "keywords": "Class PatientPhoneEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientPhoneEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PatientPhoneEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PatientPhoneViewModel [Parameter] [EditorRequired] public PatientPhoneViewModel PatientPhoneViewModel { get; set; } Property Value PatientPhoneViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PatientPhones.html": {
    "href": "api/Billing.BlazorComponents.PatientPhones.html",
    "title": "Class PatientPhones | CumulusRCM",
    "keywords": "Class PatientPhones Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientPhones : CollectionViewBase<PatientPhonesViewModel, PatientPhoneViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PatientPhonesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PatientPhonesViewModel> CollectionViewBase<PatientPhonesViewModel, PatientPhoneViewModel> PatientPhones Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PatientPhonesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<PatientPhonesViewModel, PatientPhoneViewModel>.ModalEditView CollectionViewBase<PatientPhonesViewModel, PatientPhoneViewModel>.ModalEditViewTitle CollectionViewBase<PatientPhonesViewModel, PatientPhoneViewModel>.OnInitialized() CollectionViewBase<PatientPhonesViewModel, PatientPhoneViewModel>.edit(PatientPhoneViewModel) CollectionViewBase<PatientPhonesViewModel, PatientPhoneViewModel>.add() ReactiveComponentBase<PatientPhonesViewModel>.Dispose() ReactiveComponentBase<PatientPhonesViewModel>.OnInitialized() ReactiveComponentBase<PatientPhonesViewModel>.OnAfterRender(bool) ReactiveComponentBase<PatientPhonesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PatientPhonesViewModel>.Dispose(bool) ReactiveComponentBase<PatientPhonesViewModel>.ViewModel ReactiveComponentBase<PatientPhonesViewModel>.Activated ReactiveComponentBase<PatientPhonesViewModel>.Deactivated ReactiveComponentBase<PatientPhonesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string PatientPhonesViewModel [Parameter] [EditorRequired] public PatientPhonesViewModel PatientPhonesViewModel { get; set; } Property Value PatientPhonesViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.PatientPolicies.html": {
    "href": "api/Billing.BlazorComponents.PatientPolicies.html",
    "title": "Class PatientPolicies | CumulusRCM",
    "keywords": "Class PatientPolicies Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientPolicies : CollectionViewBase<PatientPoliciesViewModel, PolicyViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PatientPoliciesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PatientPoliciesViewModel> CollectionViewBase<PatientPoliciesViewModel, PolicyViewModel> PatientPolicies Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PatientPoliciesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<PatientPoliciesViewModel, PolicyViewModel>.ModalEditView CollectionViewBase<PatientPoliciesViewModel, PolicyViewModel>.ModalEditViewTitle CollectionViewBase<PatientPoliciesViewModel, PolicyViewModel>.OnInitialized() CollectionViewBase<PatientPoliciesViewModel, PolicyViewModel>.edit(PolicyViewModel) CollectionViewBase<PatientPoliciesViewModel, PolicyViewModel>.add() ReactiveComponentBase<PatientPoliciesViewModel>.Dispose() ReactiveComponentBase<PatientPoliciesViewModel>.OnInitialized() ReactiveComponentBase<PatientPoliciesViewModel>.OnAfterRender(bool) ReactiveComponentBase<PatientPoliciesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PatientPoliciesViewModel>.Dispose(bool) ReactiveComponentBase<PatientPoliciesViewModel>.ViewModel ReactiveComponentBase<PatientPoliciesViewModel>.Activated ReactiveComponentBase<PatientPoliciesViewModel>.Deactivated ReactiveComponentBase<PatientPoliciesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string PatientPoliciesViewModel [Parameter] [EditorRequired] public PatientPoliciesViewModel PatientPoliciesViewModel { get; set; } Property Value PatientPoliciesViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSetAsync() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override Task OnParametersSetAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Billing.BlazorComponents.PatientPolicyEdit.html": {
    "href": "api/Billing.BlazorComponents.PatientPolicyEdit.html",
    "title": "Class PatientPolicyEdit | CumulusRCM",
    "keywords": "Class PatientPolicyEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientPolicyEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PatientPolicyEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PolicyViewModel [Parameter] [EditorRequired] public PolicyViewModel PolicyViewModel { get; set; } Property Value PolicyViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PatientSearch.html": {
    "href": "api/Billing.BlazorComponents.PatientSearch.html",
    "title": "Class PatientSearch | CumulusRCM",
    "keywords": "Class PatientSearch Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PatientSearch : ReactiveInjectableComponentBase<PatientSearchViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PatientSearchViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveInjectableComponentBase<PatientSearchViewModel> PatientSearch Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PatientSearchViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveInjectableComponentBase<PatientSearchViewModel>.Dispose() ReactiveInjectableComponentBase<PatientSearchViewModel>.OnInitialized() ReactiveInjectableComponentBase<PatientSearchViewModel>.OnAfterRender(bool) ReactiveInjectableComponentBase<PatientSearchViewModel>.OnPropertyChanged(string) ReactiveInjectableComponentBase<PatientSearchViewModel>.Dispose(bool) ReactiveInjectableComponentBase<PatientSearchViewModel>.ViewModel ReactiveInjectableComponentBase<PatientSearchViewModel>.Activated ReactiveInjectableComponentBase<PatientSearchViewModel>.Deactivated ReactiveInjectableComponentBase<PatientSearchViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PatientSearchViewModel [Parameter] public PatientSearchViewModel PatientSearchViewModel { get; set; } Property Value PatientSearchViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Patients.html": {
    "href": "api/Billing.BlazorComponents.Patients.html",
    "title": "Class Patients | CumulusRCM",
    "keywords": "Class Patients Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class Patients : CollectionViewBase<PatientsViewModel, PatientViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PatientsViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PatientsViewModel> CollectionViewBase<PatientsViewModel, PatientViewModel> Patients Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PatientsViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members CollectionViewBase<PatientsViewModel, PatientViewModel>.ModalEditView CollectionViewBase<PatientsViewModel, PatientViewModel>.ModalEditViewTitle CollectionViewBase<PatientsViewModel, PatientViewModel>.OnInitialized() CollectionViewBase<PatientsViewModel, PatientViewModel>.edit(PatientViewModel) CollectionViewBase<PatientsViewModel, PatientViewModel>.add() ReactiveComponentBase<PatientsViewModel>.Dispose() ReactiveComponentBase<PatientsViewModel>.OnAfterRender(bool) ReactiveComponentBase<PatientsViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PatientsViewModel>.Dispose(bool) ReactiveComponentBase<PatientsViewModel>.ViewModel ReactiveComponentBase<PatientsViewModel>.Activated ReactiveComponentBase<PatientsViewModel>.Deactivated ReactiveComponentBase<PatientsViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string PatientsViewModel [Inject] public PatientsViewModel PatientsViewModel { get; set; } Property Value PatientsViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.PatientsPage.html": {
    "href": "api/Billing.BlazorComponents.PatientsPage.html",
    "title": "Class PatientsPage | CumulusRCM",
    "keywords": "Class PatientsPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/PatientsPage\")] public class PatientsPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PatientsPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PopupHelper.html": {
    "href": "api/Billing.BlazorComponents.PopupHelper.html",
    "title": "Class PopupHelper | CumulusRCM",
    "keywords": "Class PopupHelper Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public static class PopupHelper Inheritance object PopupHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ShowModalAsync<TViewModel>(IDialogService, Type, TViewModel, string, DialogOptions?) public static Task<bool> ShowModalAsync<TViewModel>(IDialogService dialogService, Type viewType, TViewModel viewModel, string title = \"\", DialogOptions? dialogOptions = null) Parameters dialogService IDialogService viewType Type viewModel TViewModel title string dialogOptions DialogOptions Returns Task<bool> Type Parameters TViewModel"
  },
  "api/Billing.BlazorComponents.PracticeAddressEdit.html": {
    "href": "api/Billing.BlazorComponents.PracticeAddressEdit.html",
    "title": "Class PracticeAddressEdit | CumulusRCM",
    "keywords": "Class PracticeAddressEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PracticeAddressEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PracticeAddressEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PracticeAddressViewModel [Parameter] [EditorRequired] public PracticeAddressViewModel PracticeAddressViewModel { get; set; } Property Value PracticeAddressViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PracticeAddresses.html": {
    "href": "api/Billing.BlazorComponents.PracticeAddresses.html",
    "title": "Class PracticeAddresses | CumulusRCM",
    "keywords": "Class PracticeAddresses Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PracticeAddresses : InjectableCollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PracticeAddressesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PracticeAddressesViewModel> CollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel> InjectableCollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel> PracticeAddresses Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PracticeAddressesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members InjectableCollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel>.InjectedViewModel InjectableCollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel>.OnInitialized() CollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel>.ModalEditView CollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel>.ModalEditViewTitle CollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel>.edit(PracticeAddressViewModel) CollectionViewBase<PracticeAddressesViewModel, PracticeAddressViewModel>.add() ReactiveComponentBase<PracticeAddressesViewModel>.Dispose() ReactiveComponentBase<PracticeAddressesViewModel>.OnAfterRender(bool) ReactiveComponentBase<PracticeAddressesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PracticeAddressesViewModel>.Dispose(bool) ReactiveComponentBase<PracticeAddressesViewModel>.ViewModel ReactiveComponentBase<PracticeAddressesViewModel>.Activated ReactiveComponentBase<PracticeAddressesViewModel>.Deactivated ReactiveComponentBase<PracticeAddressesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string PracticeId [Parameter] [EditorRequired] public long PracticeId { get; set; } Property Value long Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.PracticeEdit.html": {
    "href": "api/Billing.BlazorComponents.PracticeEdit.html",
    "title": "Class PracticeEdit | CumulusRCM",
    "keywords": "Class PracticeEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PracticeEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PracticeEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PracticeViewModel [Parameter] [EditorRequired] public PracticeViewModel PracticeViewModel { get; set; } Property Value PracticeViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PracticePhoneEdit.html": {
    "href": "api/Billing.BlazorComponents.PracticePhoneEdit.html",
    "title": "Class PracticePhoneEdit | CumulusRCM",
    "keywords": "Class PracticePhoneEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PracticePhoneEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PracticePhoneEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PracticePhoneViewModel [Parameter] [EditorRequired] public PracticePhoneViewModel PracticePhoneViewModel { get; set; } Property Value PracticePhoneViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PracticePhones.html": {
    "href": "api/Billing.BlazorComponents.PracticePhones.html",
    "title": "Class PracticePhones | CumulusRCM",
    "keywords": "Class PracticePhones Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class PracticePhones : InjectableCollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PracticePhonesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PracticePhonesViewModel> CollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel> InjectableCollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel> PracticePhones Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PracticePhonesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members InjectableCollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel>.InjectedViewModel InjectableCollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel>.OnInitialized() CollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel>.ModalEditView CollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel>.ModalEditViewTitle CollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel>.edit(PracticePhoneViewModel) CollectionViewBase<PracticePhonesViewModel, PracticePhoneViewModel>.add() ReactiveComponentBase<PracticePhonesViewModel>.Dispose() ReactiveComponentBase<PracticePhonesViewModel>.OnAfterRender(bool) ReactiveComponentBase<PracticePhonesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PracticePhonesViewModel>.Dispose(bool) ReactiveComponentBase<PracticePhonesViewModel>.ViewModel ReactiveComponentBase<PracticePhonesViewModel>.Activated ReactiveComponentBase<PracticePhonesViewModel>.Deactivated ReactiveComponentBase<PracticePhonesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string PracticeId [Parameter] [EditorRequired] public long PracticeId { get; set; } Property Value long Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Billing.BlazorComponents.Practices.html": {
    "href": "api/Billing.BlazorComponents.Practices.html",
    "title": "Class Practices | CumulusRCM",
    "keywords": "Class Practices Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class Practices : InjectableCollectionViewBase<PracticesViewModel, PracticeViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<PracticesViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<PracticesViewModel> CollectionViewBase<PracticesViewModel, PracticeViewModel> InjectableCollectionViewBase<PracticesViewModel, PracticeViewModel> Practices Implements IComponent IHandleEvent IHandleAfterRender IViewFor<PracticesViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members InjectableCollectionViewBase<PracticesViewModel, PracticeViewModel>.InjectedViewModel InjectableCollectionViewBase<PracticesViewModel, PracticeViewModel>.OnInitialized() CollectionViewBase<PracticesViewModel, PracticeViewModel>.ModalEditView CollectionViewBase<PracticesViewModel, PracticeViewModel>.ModalEditViewTitle CollectionViewBase<PracticesViewModel, PracticeViewModel>.edit(PracticeViewModel) CollectionViewBase<PracticesViewModel, PracticeViewModel>.add() ReactiveComponentBase<PracticesViewModel>.Dispose() ReactiveComponentBase<PracticesViewModel>.OnInitialized() ReactiveComponentBase<PracticesViewModel>.OnAfterRender(bool) ReactiveComponentBase<PracticesViewModel>.OnPropertyChanged(string) ReactiveComponentBase<PracticesViewModel>.Dispose(bool) ReactiveComponentBase<PracticesViewModel>.ViewModel ReactiveComponentBase<PracticesViewModel>.Activated ReactiveComponentBase<PracticesViewModel>.Deactivated ReactiveComponentBase<PracticesViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.PracticesPage.html": {
    "href": "api/Billing.BlazorComponents.PracticesPage.html",
    "title": "Class PracticesPage | CumulusRCM",
    "keywords": "Class PracticesPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/PracticesPage\")] public class PracticesPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PracticesPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.ProviderEdit.html": {
    "href": "api/Billing.BlazorComponents.ProviderEdit.html",
    "title": "Class ProviderEdit | CumulusRCM",
    "keywords": "Class ProviderEdit Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class ProviderEdit : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ProviderEdit Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ProviderViewModel [Parameter] [EditorRequired] public ProviderViewModel ProviderViewModel { get; set; } Property Value ProviderViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.Providers.html": {
    "href": "api/Billing.BlazorComponents.Providers.html",
    "title": "Class Providers | CumulusRCM",
    "keywords": "Class Providers Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class Providers : InjectableCollectionViewBase<ProvidersViewModel, ProviderViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<ProvidersViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<ProvidersViewModel> CollectionViewBase<ProvidersViewModel, ProviderViewModel> InjectableCollectionViewBase<ProvidersViewModel, ProviderViewModel> Providers Implements IComponent IHandleEvent IHandleAfterRender IViewFor<ProvidersViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members InjectableCollectionViewBase<ProvidersViewModel, ProviderViewModel>.InjectedViewModel InjectableCollectionViewBase<ProvidersViewModel, ProviderViewModel>.OnInitialized() CollectionViewBase<ProvidersViewModel, ProviderViewModel>.ModalEditView CollectionViewBase<ProvidersViewModel, ProviderViewModel>.ModalEditViewTitle CollectionViewBase<ProvidersViewModel, ProviderViewModel>.edit(ProviderViewModel) CollectionViewBase<ProvidersViewModel, ProviderViewModel>.add() ReactiveComponentBase<ProvidersViewModel>.Dispose() ReactiveComponentBase<ProvidersViewModel>.OnInitialized() ReactiveComponentBase<ProvidersViewModel>.OnAfterRender(bool) ReactiveComponentBase<ProvidersViewModel>.OnPropertyChanged(string) ReactiveComponentBase<ProvidersViewModel>.Dispose(bool) ReactiveComponentBase<ProvidersViewModel>.ViewModel ReactiveComponentBase<ProvidersViewModel>.Activated ReactiveComponentBase<ProvidersViewModel>.Deactivated ReactiveComponentBase<ProvidersViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ModalEditView protected override Type ModalEditView { get; } Property Value Type ModalEditViewTitle protected override string ModalEditViewTitle { get; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.ProvidersPage.html": {
    "href": "api/Billing.BlazorComponents.ProvidersPage.html",
    "title": "Class ProvidersPage | CumulusRCM",
    "keywords": "Class ProvidersPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/ProvidersPage\")] public class ProvidersPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ProvidersPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.ReportParameter.html": {
    "href": "api/Billing.BlazorComponents.ReportParameter.html",
    "title": "Class ReportParameter | CumulusRCM",
    "keywords": "Class ReportParameter Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class ReportParameter : ReactiveComponentBase<ReportParameterViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<ReportParameterViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<ReportParameterViewModel> ReportParameter Implements IComponent IHandleEvent IHandleAfterRender IViewFor<ReportParameterViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<ReportParameterViewModel>.Dispose() ReactiveComponentBase<ReportParameterViewModel>.OnInitialized() ReactiveComponentBase<ReportParameterViewModel>.OnAfterRender(bool) ReactiveComponentBase<ReportParameterViewModel>.OnPropertyChanged(string) ReactiveComponentBase<ReportParameterViewModel>.Dispose(bool) ReactiveComponentBase<ReportParameterViewModel>.ViewModel ReactiveComponentBase<ReportParameterViewModel>.Activated ReactiveComponentBase<ReportParameterViewModel>.Deactivated ReactiveComponentBase<ReportParameterViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ReportParameterViewModel [Parameter] [EditorRequired] public ReportParameterViewModel ReportParameterViewModel { get; set; } Property Value ReportParameterViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.ReportViewer.html": {
    "href": "api/Billing.BlazorComponents.ReportViewer.html",
    "title": "Class ReportViewer | CumulusRCM",
    "keywords": "Class ReportViewer Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class ReportViewer : ReactiveComponentBase<ReportViewerViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<ReportViewerViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<ReportViewerViewModel> ReportViewer Implements IComponent IHandleEvent IHandleAfterRender IViewFor<ReportViewerViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<ReportViewerViewModel>.Dispose() ReactiveComponentBase<ReportViewerViewModel>.OnInitialized() ReactiveComponentBase<ReportViewerViewModel>.OnAfterRender(bool) ReactiveComponentBase<ReportViewerViewModel>.OnPropertyChanged(string) ReactiveComponentBase<ReportViewerViewModel>.Dispose(bool) ReactiveComponentBase<ReportViewerViewModel>.ViewModel ReactiveComponentBase<ReportViewerViewModel>.Activated ReactiveComponentBase<ReportViewerViewModel>.Deactivated ReactiveComponentBase<ReportViewerViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ReportViewerViewModel [Parameter] [EditorRequired] public ReportViewerViewModel ReportViewerViewModel { get; set; } Property Value ReportViewerViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSetAsync() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override Task OnParametersSetAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Billing.BlazorComponents.Reports.html": {
    "href": "api/Billing.BlazorComponents.Reports.html",
    "title": "Class Reports | CumulusRCM",
    "keywords": "Class Reports Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class Reports : ReactiveComponentBase<ReportsViewModel>, IComponent, IHandleEvent, IHandleAfterRender, IViewFor<ReportsViewModel>, IViewFor, IActivatableView, INotifyPropertyChanged, ICanActivate, IDisposable Inheritance object ComponentBase ReactiveComponentBase<ReportsViewModel> Reports Implements IComponent IHandleEvent IHandleAfterRender IViewFor<ReportsViewModel> IViewFor IActivatableView INotifyPropertyChanged ICanActivate IDisposable Inherited Members ReactiveComponentBase<ReportsViewModel>.Dispose() ReactiveComponentBase<ReportsViewModel>.OnInitialized() ReactiveComponentBase<ReportsViewModel>.OnAfterRender(bool) ReactiveComponentBase<ReportsViewModel>.OnPropertyChanged(string) ReactiveComponentBase<ReportsViewModel>.Dispose(bool) ReactiveComponentBase<ReportsViewModel>.ViewModel ReactiveComponentBase<ReportsViewModel>.Activated ReactiveComponentBase<ReportsViewModel>.Deactivated ReactiveComponentBase<ReportsViewModel>.PropertyChanged ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties DialogService [Inject] public IDialogService DialogService { get; set; } Property Value IDialogService ReportService [Inject] public IReportService ReportService { get; set; } Property Value IReportService ReportsViewModel [Inject] protected ReportsViewModel ReportsViewModel { get; set; } Property Value ReportsViewModel Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnParametersSetAsync() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override Task OnParametersSetAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Billing.BlazorComponents.ReportsPage.html": {
    "href": "api/Billing.BlazorComponents.ReportsPage.html",
    "title": "Class ReportsPage | CumulusRCM",
    "keywords": "Class ReportsPage Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll [Route(\"/ReportsPage\")] public class ReportsPage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ReportsPage Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.SearchOperatorChooser.html": {
    "href": "api/Billing.BlazorComponents.SearchOperatorChooser.html",
    "title": "Class SearchOperatorChooser | CumulusRCM",
    "keywords": "Class SearchOperatorChooser Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class SearchOperatorChooser : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase SearchOperatorChooser Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ViewModel [Parameter] [EditorRequired] public ReactiveFilterExpression ViewModel { get; set; } Property Value ReactiveFilterExpression Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.SearchPropertyChooser.html": {
    "href": "api/Billing.BlazorComponents.SearchPropertyChooser.html",
    "title": "Class SearchPropertyChooser | CumulusRCM",
    "keywords": "Class SearchPropertyChooser Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class SearchPropertyChooser : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase SearchPropertyChooser Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties IncludePropertyNames [Parameter] public string[]? IncludePropertyNames { get; set; } Property Value string[] ViewModel [Parameter] [EditorRequired] public ReactiveFilterExpression ViewModel { get; set; } Property Value ReactiveFilterExpression Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized() OnParametersSet() Method invoked when the component has received parameters from its parent in the render tree, and the incoming values have been assigned to properties. protected override void OnParametersSet()"
  },
  "api/Billing.BlazorComponents.ServiceLocationChooser.html": {
    "href": "api/Billing.BlazorComponents.ServiceLocationChooser.html",
    "title": "Class ServiceLocationChooser | CumulusRCM",
    "keywords": "Class ServiceLocationChooser Namespace Billing.BlazorComponents Assembly Billing.BlazorComponents.dll public class ServiceLocationChooser : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ServiceLocationChooser Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ServiceLocations [Parameter] [EditorRequired] public SelectedCache<ServiceLocation, long> ServiceLocations { get; set; } Property Value SelectedCache<ServiceLocation, long> Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorComponents.html": {
    "href": "api/Billing.BlazorComponents.html",
    "title": "Namespace Billing.BlazorComponents | CumulusRCM",
    "keywords": "Namespace Billing.BlazorComponents Classes BillableServiceEdit BillableServicesByProvider BillableServicesEdit BillableServicesPage ClearinghouseEdit Clearinghouses ClearinghousesPage CollectionViewBase<TCollectionVm, TItem> CptChooser CptCodeEdit CptCodeSearch CptCodes CptCodesPage Diagnoses DiagnosesChooser DiagnosesPage DiagnosisEdit DiagnosisSearch Facilities FacilitiesPage FacilityEdit FacilityProviders FilterExpression InjectableCollectionViewBase<TCollectionVm, TItem> InsuranceCompanies InsuranceCompanyEdit InsurancePage LoginDisplay MainLayout NavMenu PatientAddressEdit PatientAddresses PatientEdit PatientPhoneEdit PatientPhones PatientPolicies PatientPolicyEdit PatientSearch Patients PatientsPage PopupHelper PracticeAddressEdit PracticeAddresses PracticeEdit PracticePhoneEdit PracticePhones Practices PracticesPage ProviderEdit Providers ProvidersPage ReportParameter ReportViewer Reports ReportsPage SearchOperatorChooser SearchPropertyChooser ServiceLocationChooser"
  },
  "api/Billing.BlazorServer.App.html": {
    "href": "api/Billing.BlazorServer.App.html",
    "title": "Class App | CumulusRCM",
    "keywords": "Class App Namespace Billing.BlazorServer Assembly Billing.BlazorServer.dll public class App : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase App Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorServer.MockAuthenticationHandler.html": {
    "href": "api/Billing.BlazorServer.MockAuthenticationHandler.html",
    "title": "Class MockAuthenticationHandler | CumulusRCM",
    "keywords": "Class MockAuthenticationHandler Namespace Billing.BlazorServer Assembly Billing.BlazorServer.dll public class MockAuthenticationHandler : AuthenticationHandler<AuthenticationSchemeOptions>, IAuthenticationHandler Inheritance object AuthenticationHandler<AuthenticationSchemeOptions> MockAuthenticationHandler Implements IAuthenticationHandler Inherited Members AuthenticationHandler<AuthenticationSchemeOptions>.InitializeAsync(AuthenticationScheme, HttpContext) AuthenticationHandler<AuthenticationSchemeOptions>.InitializeEventsAsync() AuthenticationHandler<AuthenticationSchemeOptions>.CreateEventsAsync() AuthenticationHandler<AuthenticationSchemeOptions>.InitializeHandlerAsync() AuthenticationHandler<AuthenticationSchemeOptions>.BuildRedirectUri(string) AuthenticationHandler<AuthenticationSchemeOptions>.ResolveTarget(string) AuthenticationHandler<AuthenticationSchemeOptions>.AuthenticateAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleAuthenticateOnceAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleAuthenticateOnceSafeAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleForbiddenAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.HandleChallengeAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.ChallengeAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.ForbidAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.Scheme AuthenticationHandler<AuthenticationSchemeOptions>.Options AuthenticationHandler<AuthenticationSchemeOptions>.Context AuthenticationHandler<AuthenticationSchemeOptions>.Request AuthenticationHandler<AuthenticationSchemeOptions>.Response AuthenticationHandler<AuthenticationSchemeOptions>.OriginalPath AuthenticationHandler<AuthenticationSchemeOptions>.OriginalPathBase AuthenticationHandler<AuthenticationSchemeOptions>.Logger AuthenticationHandler<AuthenticationSchemeOptions>.UrlEncoder AuthenticationHandler<AuthenticationSchemeOptions>.Clock AuthenticationHandler<AuthenticationSchemeOptions>.TimeProvider AuthenticationHandler<AuthenticationSchemeOptions>.OptionsMonitor AuthenticationHandler<AuthenticationSchemeOptions>.Events AuthenticationHandler<AuthenticationSchemeOptions>.ClaimsIssuer AuthenticationHandler<AuthenticationSchemeOptions>.CurrentUri object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors MockAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions>, ILoggerFactory, UrlEncoder, ISystemClock) public MockAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock) Parameters options IOptionsMonitor<AuthenticationSchemeOptions> logger ILoggerFactory encoder UrlEncoder clock ISystemClock Properties CurrentUser public static MockAuthenticationUser? CurrentUser { get; set; } Property Value MockAuthenticationUser Methods HandleAuthenticateAsync() Allows derived types to handle authentication. protected override Task<AuthenticateResult> HandleAuthenticateAsync() Returns Task<AuthenticateResult> The AuthenticateResult."
  },
  "api/Billing.BlazorServer.MockAuthenticationUser.html": {
    "href": "api/Billing.BlazorServer.MockAuthenticationUser.html",
    "title": "Class MockAuthenticationUser | CumulusRCM",
    "keywords": "Class MockAuthenticationUser Namespace Billing.BlazorServer Assembly Billing.BlazorServer.dll public class MockAuthenticationUser Inheritance object MockAuthenticationUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors MockAuthenticationUser(AppUser, string?) public MockAuthenticationUser(AppUser appUser, string? userRole = null) Parameters appUser AppUser userRole string MockAuthenticationUser(string, string, string?) public MockAuthenticationUser(string userId, string userName, string? userRole) Parameters userId string userName string userRole string Properties UserId public string UserId { get; } Property Value string UserName public string UserName { get; } Property Value string UserRole public string? UserRole { get; } Property Value string"
  },
  "api/Billing.BlazorServer.Pages.ErrorModel.html": {
    "href": "api/Billing.BlazorServer.Pages.ErrorModel.html",
    "title": "Class ErrorModel | CumulusRCM",
    "keywords": "Class ErrorModel Namespace Billing.BlazorServer.Pages Assembly Billing.BlazorServer.dll [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public class ErrorModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Inheritance object PageModel ErrorModel Implements IAsyncPageFilter IPageFilter IFilterMetadata Inherited Members PageModel.TryUpdateModelAsync<TModel>(TModel) PageModel.TryUpdateModelAsync<TModel>(TModel, string) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) PageModel.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) PageModel.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.TryUpdateModelAsync(object, Type, string) PageModel.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) PageModel.BadRequest() PageModel.BadRequest(object) PageModel.BadRequest(ModelStateDictionary) PageModel.Challenge() PageModel.Challenge(params string[]) PageModel.Challenge(AuthenticationProperties) PageModel.Challenge(AuthenticationProperties, params string[]) PageModel.Content(string) PageModel.Content(string, string) PageModel.Content(string, string, Encoding) PageModel.Content(string, MediaTypeHeaderValue) PageModel.Forbid() PageModel.Forbid(params string[]) PageModel.Forbid(AuthenticationProperties) PageModel.Forbid(AuthenticationProperties, params string[]) PageModel.File(byte[], string) PageModel.File(byte[], string, string) PageModel.File(Stream, string) PageModel.File(Stream, string, string) PageModel.File(string, string) PageModel.File(string, string, string) PageModel.LocalRedirect(string) PageModel.LocalRedirectPermanent(string) PageModel.LocalRedirectPreserveMethod(string) PageModel.LocalRedirectPermanentPreserveMethod(string) PageModel.NotFound() PageModel.NotFound(object) PageModel.Page() PageModel.PhysicalFile(string, string) PageModel.PhysicalFile(string, string, string) PageModel.Redirect(string) PageModel.RedirectPermanent(string) PageModel.RedirectPreserveMethod(string) PageModel.RedirectPermanentPreserveMethod(string) PageModel.RedirectToAction(string) PageModel.RedirectToAction(string, object) PageModel.RedirectToAction(string, string) PageModel.RedirectToAction(string, string, object) PageModel.RedirectToAction(string, string, string) PageModel.RedirectToAction(string, string, object, string) PageModel.RedirectToActionPreserveMethod(string, string, object, string) PageModel.RedirectToActionPermanent(string) PageModel.RedirectToActionPermanent(string, object) PageModel.RedirectToActionPermanent(string, string) PageModel.RedirectToActionPermanent(string, string, string) PageModel.RedirectToActionPermanent(string, string, object) PageModel.RedirectToActionPermanent(string, string, object, string) PageModel.RedirectToActionPermanentPreserveMethod(string, string, object, string) PageModel.RedirectToRoute(string) PageModel.RedirectToRoute(object) PageModel.RedirectToRoute(string, object) PageModel.RedirectToRoute(string, string) PageModel.RedirectToRoute(string, object, string) PageModel.RedirectToRoutePreserveMethod(string, object, string) PageModel.RedirectToRoutePermanent(string) PageModel.RedirectToRoutePermanent(object) PageModel.RedirectToRoutePermanent(string, object) PageModel.RedirectToRoutePermanent(string, string) PageModel.RedirectToRoutePermanent(string, object, string) PageModel.RedirectToRoutePermanentPreserveMethod(string, object, string) PageModel.RedirectToPage() PageModel.RedirectToPage(object) PageModel.RedirectToPage(string) PageModel.RedirectToPage(string, string) PageModel.RedirectToPage(string, string, object) PageModel.RedirectToPage(string, object) PageModel.RedirectToPage(string, string, string) PageModel.RedirectToPage(string, string, object, string) PageModel.RedirectToPagePermanent(string) PageModel.RedirectToPagePermanent(string, object) PageModel.RedirectToPagePermanent(string, string) PageModel.RedirectToPagePermanent(string, string, object) PageModel.RedirectToPagePermanent(string, string, string) PageModel.RedirectToPagePermanent(string, object, string) PageModel.RedirectToPagePermanent(string, string, object, string) PageModel.RedirectToPagePreserveMethod(string, string, object, string) PageModel.RedirectToPagePermanentPreserveMethod(string, string, object, string) PageModel.SignIn(ClaimsPrincipal, string) PageModel.SignIn(ClaimsPrincipal, AuthenticationProperties, string) PageModel.SignOut(params string[]) PageModel.SignOut(AuthenticationProperties, params string[]) PageModel.StatusCode(int) PageModel.StatusCode(int, object) PageModel.Unauthorized() PageModel.Partial(string) PageModel.Partial(string, object) PageModel.ViewComponent(string) PageModel.ViewComponent(Type) PageModel.ViewComponent(string, object) PageModel.ViewComponent(Type, object) PageModel.TryValidateModel(object) PageModel.TryValidateModel(object, string) PageModel.OnPageHandlerSelected(PageHandlerSelectedContext) PageModel.OnPageHandlerExecuting(PageHandlerExecutingContext) PageModel.OnPageHandlerExecuted(PageHandlerExecutedContext) PageModel.OnPageHandlerSelectionAsync(PageHandlerSelectedContext) PageModel.OnPageHandlerExecutionAsync(PageHandlerExecutingContext, PageHandlerExecutionDelegate) PageModel.PageContext PageModel.HttpContext PageModel.Request PageModel.Response PageModel.RouteData PageModel.ModelState PageModel.User PageModel.TempData PageModel.Url PageModel.MetadataProvider PageModel.ViewData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ErrorModel(ILogger<ErrorModel>) public ErrorModel(ILogger<ErrorModel> logger) Parameters logger ILogger<ErrorModel> Properties RequestId public string? RequestId { get; set; } Property Value string ShowRequestId public bool ShowRequestId { get; } Property Value bool Methods OnGet() public void OnGet()"
  },
  "api/Billing.BlazorServer.Pages.html": {
    "href": "api/Billing.BlazorServer.Pages.html",
    "title": "Namespace Billing.BlazorServer.Pages | CumulusRCM",
    "keywords": "Namespace Billing.BlazorServer.Pages Classes ErrorModel"
  },
  "api/Billing.BlazorServer.Program.html": {
    "href": "api/Billing.BlazorServer.Program.html",
    "title": "Class Program | CumulusRCM",
    "keywords": "Class Program Namespace Billing.BlazorServer Assembly Billing.BlazorServer.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Main(string[]) public static Task Main(string[] args) Parameters args string[] Returns Task"
  },
  "api/Billing.BlazorServer._Imports.html": {
    "href": "api/Billing.BlazorServer._Imports.html",
    "title": "Class _Imports | CumulusRCM",
    "keywords": "Class _Imports Namespace Billing.BlazorServer Assembly Billing.BlazorServer.dll public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase _Imports Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Billing.BlazorServer.html": {
    "href": "api/Billing.BlazorServer.html",
    "title": "Namespace Billing.BlazorServer | CumulusRCM",
    "keywords": "Namespace Billing.BlazorServer Classes App MockAuthenticationHandler MockAuthenticationUser Program _Imports"
  },
  "api/Billing.Data.Enums.AddressKind.html": {
    "href": "api/Billing.Data.Enums.AddressKind.html",
    "title": "Class AddressKind | CumulusRCM",
    "keywords": "Class AddressKind Namespace Billing.Data.Enums Assembly Billing.Data.dll public record AddressKind : Enumeration, IEquatable<Enumeration>, IEquatable<AddressKind> Inheritance object Enumeration AddressKind Implements IEquatable<Enumeration> IEquatable<AddressKind> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.SetDefaultValue<T>(T) Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors AddressKind() public AddressKind() AddressKind(char, string) public AddressKind(char charValue, string name) Parameters charValue char name string Fields Home public static readonly AddressKind Home Field Value AddressKind Mailing public static readonly AddressKind Mailing Field Value AddressKind Work public static readonly AddressKind Work Field Value AddressKind"
  },
  "api/Billing.Data.Enums.BillableServiceStatus.html": {
    "href": "api/Billing.Data.Enums.BillableServiceStatus.html",
    "title": "Class BillableServiceStatus | CumulusRCM",
    "keywords": "Class BillableServiceStatus Namespace Billing.Data.Enums Assembly Billing.Data.dll public record BillableServiceStatus : Enumeration, IEquatable<Enumeration>, IEquatable<BillableServiceStatus> Inheritance object Enumeration BillableServiceStatus Implements IEquatable<Enumeration> IEquatable<BillableServiceStatus> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.SetDefaultValue<T>(T) Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillableServiceStatus() public BillableServiceStatus() BillableServiceStatus(char, string) public BillableServiceStatus(char charValue, string name) Parameters charValue char name string Fields Billed public static readonly BillableServiceStatus Billed Field Value BillableServiceStatus ChargeCreated public static readonly BillableServiceStatus ChargeCreated Field Value BillableServiceStatus Created public static readonly BillableServiceStatus Created Field Value BillableServiceStatus"
  },
  "api/Billing.Data.Enums.Gender.html": {
    "href": "api/Billing.Data.Enums.Gender.html",
    "title": "Class Gender | CumulusRCM",
    "keywords": "Class Gender Namespace Billing.Data.Enums Assembly Billing.Data.dll public record Gender : Enumeration, IEquatable<Enumeration>, IEquatable<Gender> Inheritance object Enumeration Gender Implements IEquatable<Enumeration> IEquatable<Gender> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.SetDefaultValue<T>(T) Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Gender() public Gender() Gender(char, string) public Gender(char value, string name) Parameters value char name string Fields Female public static readonly Gender Female Field Value Gender Male public static readonly Gender Male Field Value Gender Unknown public static readonly Gender Unknown Field Value Gender"
  },
  "api/Billing.Data.Enums.PhoneKind.html": {
    "href": "api/Billing.Data.Enums.PhoneKind.html",
    "title": "Class PhoneKind | CumulusRCM",
    "keywords": "Class PhoneKind Namespace Billing.Data.Enums Assembly Billing.Data.dll public sealed record PhoneKind : Enumeration, IEquatable<Enumeration>, IEquatable<PhoneKind> Inheritance object Enumeration PhoneKind Implements IEquatable<Enumeration> IEquatable<PhoneKind> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PhoneKind() public PhoneKind() PhoneKind(char, string) public PhoneKind(char value, string name) Parameters value char name string Fields Home public static readonly PhoneKind Home Field Value PhoneKind Mobile public static readonly PhoneKind Mobile Field Value PhoneKind Work public static readonly PhoneKind Work Field Value PhoneKind"
  },
  "api/Billing.Data.Enums.ProcessStatus.html": {
    "href": "api/Billing.Data.Enums.ProcessStatus.html",
    "title": "Class ProcessStatus | CumulusRCM",
    "keywords": "Class ProcessStatus Namespace Billing.Data.Enums Assembly Billing.Data.dll public sealed record ProcessStatus : Enumeration, IEquatable<Enumeration>, IEquatable<ProcessStatus> Inheritance object Enumeration ProcessStatus Implements IEquatable<Enumeration> IEquatable<ProcessStatus> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProcessStatus() public ProcessStatus() ProcessStatus(int, string) public ProcessStatus(int value, string name) Parameters value int name string Fields ChargeClaimNotFound public static readonly ProcessStatus ChargeClaimNotFound Field Value ProcessStatus ChargeSubmissionNotFound public static readonly ProcessStatus ChargeSubmissionNotFound Field Value ProcessStatus Created public static readonly ProcessStatus Created Field Value ProcessStatus Error public static readonly ProcessStatus Error Field Value ProcessStatus InvalidChargeId public static readonly ProcessStatus InvalidChargeId Field Value ProcessStatus MissingChargeId public static readonly ProcessStatus MissingChargeId Field Value ProcessStatus MissingPayer public static readonly ProcessStatus MissingPayer Field Value ProcessStatus Processed public static readonly ProcessStatus Processed Field Value ProcessStatus Saved public static readonly ProcessStatus Saved Field Value ProcessStatus"
  },
  "api/Billing.Data.Enums.State.html": {
    "href": "api/Billing.Data.Enums.State.html",
    "title": "Class State | CumulusRCM",
    "keywords": "Class State Namespace Billing.Data.Enums Assembly Billing.Data.dll public record State : Enumeration, IEquatable<Enumeration>, IEquatable<State> Inheritance object Enumeration State Implements IEquatable<Enumeration> IEquatable<State> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.SetDefaultValue<T>(T) Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors State() public State() State(int, string, string) public State(int value, string name, string abbreviation) Parameters value int name string abbreviation string Fields Alabama public static readonly State Alabama Field Value State Alaska public static readonly State Alaska Field Value State Arizona public static readonly State Arizona Field Value State Arkansas public static readonly State Arkansas Field Value State California public static readonly State California Field Value State Colorado public static readonly State Colorado Field Value State Connecticut public static readonly State Connecticut Field Value State Delaware public static readonly State Delaware Field Value State Florida public static readonly State Florida Field Value State Georgia public static readonly State Georgia Field Value State Hawaii public static readonly State Hawaii Field Value State Idaho public static readonly State Idaho Field Value State Illinois public static readonly State Illinois Field Value State Indiana public static readonly State Indiana Field Value State Iowa public static readonly State Iowa Field Value State Kansas public static readonly State Kansas Field Value State Kentucky public static readonly State Kentucky Field Value State Louisiana public static readonly State Louisiana Field Value State Maine public static readonly State Maine Field Value State Maryland public static readonly State Maryland Field Value State Massachusetts public static readonly State Massachusetts Field Value State Michigan public static readonly State Michigan Field Value State Minnesota public static readonly State Minnesota Field Value State Mississippi public static readonly State Mississippi Field Value State Missouri public static readonly State Missouri Field Value State Montana public static readonly State Montana Field Value State Nebraska public static readonly State Nebraska Field Value State Nevada public static readonly State Nevada Field Value State NewHampshire public static readonly State NewHampshire Field Value State NewJersey public static readonly State NewJersey Field Value State NewMexico public static readonly State NewMexico Field Value State NewYork public static readonly State NewYork Field Value State NorthCarolina public static readonly State NorthCarolina Field Value State NorthDakota public static readonly State NorthDakota Field Value State Ohio public static readonly State Ohio Field Value State Oklahoma public static readonly State Oklahoma Field Value State Oregon public static readonly State Oregon Field Value State Pennsylvania public static readonly State Pennsylvania Field Value State RhodeIsland public static readonly State RhodeIsland Field Value State SouthCarolina public static readonly State SouthCarolina Field Value State SouthDakota public static readonly State SouthDakota Field Value State Tennessee public static readonly State Tennessee Field Value State Texas public static readonly State Texas Field Value State Utah public static readonly State Utah Field Value State Vermont public static readonly State Vermont Field Value State Virginia public static readonly State Virginia Field Value State Washington public static readonly State Washington Field Value State WestVirginia public static readonly State WestVirginia Field Value State Wisconsin public static readonly State Wisconsin Field Value State Wyoming public static readonly State Wyoming Field Value State Properties Abbreviation public string Abbreviation { get; } Property Value string Methods FromAbbreviation(string) public static State FromAbbreviation(string abbreviation) Parameters abbreviation string Returns State"
  },
  "api/Billing.Data.Enums.html": {
    "href": "api/Billing.Data.Enums.html",
    "title": "Namespace Billing.Data.Enums | CumulusRCM",
    "keywords": "Namespace Billing.Data.Enums Classes AddressKind BillableServiceStatus Gender PhoneKind ProcessStatus State"
  },
  "api/Billing.Data.Interfaces.Address.html": {
    "href": "api/Billing.Data.Interfaces.Address.html",
    "title": "Class Address | CumulusRCM",
    "keywords": "Class Address Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public class Address : IAddress Inheritance object Address Implements IAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Address(IAddress) public Address(IAddress address) Parameters address IAddress Address(string, string, string, string, string) public Address(string street1, string street2, string city, string state, string zipCode) Parameters street1 string street2 string city string state string zipCode string Properties City public string City { get; set; } Property Value string State public string State { get; set; } Property Value string Street1 public string Street1 { get; set; } Property Value string Street2 public string Street2 { get; set; } Property Value string ZipCode public string ZipCode { get; set; } Property Value string"
  },
  "api/Billing.Data.Interfaces.Api.IBillableServiceQueries.html": {
    "href": "api/Billing.Data.Interfaces.Api.IBillableServiceQueries.html",
    "title": "Interface IBillableServiceQueries | CumulusRCM",
    "keywords": "Interface IBillableServiceQueries Namespace Billing.Data.Interfaces.Api Assembly Billing.Data.dll public interface IBillableServiceQueries : IQueries<BillableService> Inherited Members IQueries<BillableService>.GetAllAsync(string, int, int, string) IQueries<BillableService>.GetAll(Filter, int, int, OrderBy) IQueries<BillableService>.GetCountAsync(string) IQueries<BillableService>.GetCountAsync(Filter) IQueries<BillableService>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) IQueries<BillableService>.GetAllDynamic(IReadOnlyCollection<string>, string, int, int, string) IQueries<BillableService>.GetAllAsync(Filter, int, int, OrderBy) IQueries<BillableService>.GetByPkAsync(string) IQueries<BillableService>.GetByPkAsync<TKey>(TKey) IQueries<BillableService>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) IQueries<BillableService>.GetByPkDynamicAsync<TKey>(TKey, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetBillableServicesWithLookupsAsync(string) [Get(\"/Expanded/\")] Task<Response<BillableServiceWithLookups>> GetBillableServicesWithLookupsAsync(string filterJson) Parameters filterJson string Returns Task<Response<BillableServiceWithLookups>>"
  },
  "api/Billing.Data.Interfaces.Api.IFacilityQueries.html": {
    "href": "api/Billing.Data.Interfaces.Api.IFacilityQueries.html",
    "title": "Interface IFacilityQueries | CumulusRCM",
    "keywords": "Interface IFacilityQueries Namespace Billing.Data.Interfaces.Api Assembly Billing.Data.dll public interface IFacilityQueries : IQueries<Facility> Inherited Members IQueries<Facility>.GetAllAsync(string, int, int, string) IQueries<Facility>.GetAll(Filter, int, int, OrderBy) IQueries<Facility>.GetCountAsync(string) IQueries<Facility>.GetCountAsync(Filter) IQueries<Facility>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) IQueries<Facility>.GetAllDynamic(IReadOnlyCollection<string>, string, int, int, string) IQueries<Facility>.GetAllAsync(Filter, int, int, OrderBy) IQueries<Facility>.GetByPkAsync(string) IQueries<Facility>.GetByPkAsync<TKey>(TKey) IQueries<Facility>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) IQueries<Facility>.GetByPkDynamicAsync<TKey>(TKey, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetFacilityProvidersAsync(long) [Get(\"/Providers/{id}\")] Task<Response<Provider>> GetFacilityProvidersAsync(long facilityId) Parameters facilityId long Returns Task<Response<Provider>>"
  },
  "api/Billing.Data.Interfaces.Api.IPatientQueries.html": {
    "href": "api/Billing.Data.Interfaces.Api.IPatientQueries.html",
    "title": "Interface IPatientQueries | CumulusRCM",
    "keywords": "Interface IPatientQueries Namespace Billing.Data.Interfaces.Api Assembly Billing.Data.dll public interface IPatientQueries : IQueries<Patient> Inherited Members IQueries<Patient>.GetAllAsync(string, int, int, string) IQueries<Patient>.GetAll(Filter, int, int, OrderBy) IQueries<Patient>.GetCountAsync(string) IQueries<Patient>.GetCountAsync(Filter) IQueries<Patient>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) IQueries<Patient>.GetAllDynamic(IReadOnlyCollection<string>, string, int, int, string) IQueries<Patient>.GetAllAsync(Filter, int, int, OrderBy) IQueries<Patient>.GetByPkAsync(string) IQueries<Patient>.GetByPkAsync<TKey>(TKey) IQueries<Patient>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) IQueries<Patient>.GetByPkDynamicAsync<TKey>(TKey, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetPatientPolicyAsync(long, long, string) [Get(\"/InsurancePolicy/{patientId:int}\")] Task<Response<Policy>> GetPatientPolicyAsync(long patientId, long insuranceCompanyId, string policyNumber) Parameters patientId long insuranceCompanyId long policyNumber string Returns Task<Response<Policy>> GetPatientServiceLocationsAsync(long) [Get(\"/ServiceLocations/{patientId:int}\")] Task<Response<ServiceLocation>> GetPatientServiceLocationsAsync(long patientId) Parameters patientId long Returns Task<Response<ServiceLocation>>"
  },
  "api/Billing.Data.Interfaces.Api.IProviderQueries.html": {
    "href": "api/Billing.Data.Interfaces.Api.IProviderQueries.html",
    "title": "Interface IProviderQueries | CumulusRCM",
    "keywords": "Interface IProviderQueries Namespace Billing.Data.Interfaces.Api Assembly Billing.Data.dll public interface IProviderQueries : IQueries<Provider> Inherited Members IQueries<Provider>.GetAllAsync(string, int, int, string) IQueries<Provider>.GetAll(Filter, int, int, OrderBy) IQueries<Provider>.GetCountAsync(string) IQueries<Provider>.GetCountAsync(Filter) IQueries<Provider>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) IQueries<Provider>.GetAllDynamic(IReadOnlyCollection<string>, string, int, int, string) IQueries<Provider>.GetAllAsync(Filter, int, int, OrderBy) IQueries<Provider>.GetByPkAsync(string) IQueries<Provider>.GetByPkAsync<TKey>(TKey) IQueries<Provider>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) IQueries<Provider>.GetByPkDynamicAsync<TKey>(TKey, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetProviderFacilitiesAsync(int) [Get(\"/ProviderFacilities/{id}\")] Task<Response<Facility>> GetProviderFacilitiesAsync(int providerId) Parameters providerId int Returns Task<Response<Facility>>"
  },
  "api/Billing.Data.Interfaces.Api.html": {
    "href": "api/Billing.Data.Interfaces.Api.html",
    "title": "Namespace Billing.Data.Interfaces.Api | CumulusRCM",
    "keywords": "Namespace Billing.Data.Interfaces.Api Interfaces IBillableServiceQueries IFacilityQueries IPatientQueries IProviderQueries"
  },
  "api/Billing.Data.Interfaces.IAddress.html": {
    "href": "api/Billing.Data.Interfaces.IAddress.html",
    "title": "Interface IAddress | CumulusRCM",
    "keywords": "Interface IAddress Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public interface IAddress Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties City string City { get; } Property Value string State string State { get; } Property Value string Street1 string Street1 { get; } Property Value string Street2 string Street2 { get; } Property Value string ZipCode string ZipCode { get; } Property Value string Methods ToAddressString(bool) string ToAddressString(bool useHtml = false) Parameters useHtml bool Returns string"
  },
  "api/Billing.Data.Interfaces.IBillingDataService.html": {
    "href": "api/Billing.Data.Interfaces.IBillingDataService.html",
    "title": "Interface IBillingDataService | CumulusRCM",
    "keywords": "Interface IBillingDataService Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public interface IBillingDataService : IDataService, IUnitOfWork Inherited Members IDataService.GetQueries<T>() IUnitOfWork.QueuedItemsCount IUnitOfWork.Reset() IUnitOfWork.Add<T>(DataChangeKind, T) IUnitOfWork.AddCollection<T>(DataChangeKind, ICollection<T>) IUnitOfWork.SaveAsync() IUnitOfWork.AddForUpdate<T>(T) IUnitOfWork.AddForUpdate<T>(ICollection<T>) IUnitOfWork.AddForDelete<T>(T) IUnitOfWork.AddForDelete<T>(ICollection<T>) IUnitOfWork.AddForInsert<T>(T) IUnitOfWork.AddCollectionForInsert<T>(ICollection<T>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetAllAsync<T>(Filter?, int, int, OrderBy?) Task<Response<T>> GetAllAsync<T>(Filter? filter, int pageSize = 0, int pageNumber = 1, OrderBy? orderBy = null) where T : class Parameters filter Filter pageSize int pageNumber int orderBy OrderBy Returns Task<Response<T>> Type Parameters T GetAllAsync<T>(string?, int, int, string?) Task<Response<T>> GetAllAsync<T>(string? filterJson = null, int pageSize = 0, int pageNumber = 1, string? orderByJson = null) where T : class Parameters filterJson string pageSize int pageNumber int orderByJson string Returns Task<Response<T>> Type Parameters T GetAllDynamicAsync<T>(IReadOnlyCollection<string>, string?, int, int, string?) Task<Response<dynamic>> GetAllDynamicAsync<T>(IReadOnlyCollection<string> columnNames, string? filterJson = null, int pageSize = 0, int pageNumber = 1, string? orderByJson = null) where T : class Parameters columnNames IReadOnlyCollection<string> filterJson string pageSize int pageNumber int orderByJson string Returns Task<Response<dynamic>> Type Parameters T GetAppUserIdAsync(ClaimsPrincipal) Task<long> GetAppUserIdAsync(ClaimsPrincipal claimsPrincipal) Parameters claimsPrincipal ClaimsPrincipal Returns Task<long> GetAppUserIdAsync(string) Task<long> GetAppUserIdAsync(string userName) Parameters userName string Returns Task<long> GetByIdAsync<T>(long) Task<Response<T>> GetByIdAsync<T>(long id) where T : class, IIdPk Parameters id long Returns Task<Response<T>> Type Parameters T GetByIdDynamicAsync<T>(long, IReadOnlyCollection<string>) Task<Response<dynamic>> GetByIdDynamicAsync<T>(long id, IReadOnlyCollection<string> columnNames) where T : class, IIdPk Parameters id long columnNames IReadOnlyCollection<string> Returns Task<Response<dynamic>> Type Parameters T GetByPkAsync<T, TKey>(TKey) Task<Response<T>> GetByPkAsync<T, TKey>(TKey key) where T : class where TKey : notnull Parameters key TKey Returns Task<Response<T>> Type Parameters T TKey GetCountAsync<T>(Filter?) Task<int> GetCountAsync<T>(Filter? filter = null) where T : class Parameters filter Filter Returns Task<int> Type Parameters T"
  },
  "api/Billing.Data.Interfaces.IIdPk.html": {
    "href": "api/Billing.Data.Interfaces.IIdPk.html",
    "title": "Interface IIdPk | CumulusRCM",
    "keywords": "Interface IIdPk Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public interface IIdPk Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Id long Id { get; set; } Property Value long"
  },
  "api/Billing.Data.Interfaces.IPerson.html": {
    "href": "api/Billing.Data.Interfaces.IPerson.html",
    "title": "Interface IPerson | CumulusRCM",
    "keywords": "Interface IPerson Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public interface IPerson Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties FirstName string FirstName { get; } Property Value string LastName string LastName { get; } Property Value string MiddleName string MiddleName { get; } Property Value string Methods Name(NameOrder, bool) string Name(NameOrder nameOrder, bool includeMiddle = false) Parameters nameOrder NameOrder includeMiddle bool Returns string"
  },
  "api/Billing.Data.Interfaces.IPlaceOfService.html": {
    "href": "api/Billing.Data.Interfaces.IPlaceOfService.html",
    "title": "Interface IPlaceOfService | CumulusRCM",
    "keywords": "Interface IPlaceOfService Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public interface IPlaceOfService Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties PlaceOfServiceCode string PlaceOfServiceCode { get; } Property Value string"
  },
  "api/Billing.Data.Interfaces.IUserService.html": {
    "href": "api/Billing.Data.Interfaces.IUserService.html",
    "title": "Interface IUserService | CumulusRCM",
    "keywords": "Interface IUserService Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public interface IUserService Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetUserAsync() Task<ClaimsPrincipal?> GetUserAsync() Returns Task<ClaimsPrincipal>"
  },
  "api/Billing.Data.Interfaces.NameOrder.html": {
    "href": "api/Billing.Data.Interfaces.NameOrder.html",
    "title": "Enum NameOrder | CumulusRCM",
    "keywords": "Enum NameOrder Namespace Billing.Data.Interfaces Assembly Billing.Data.dll public enum NameOrder Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Fields FirstFirst = 0 LastFirst = 1"
  },
  "api/Billing.Data.Interfaces.html": {
    "href": "api/Billing.Data.Interfaces.html",
    "title": "Namespace Billing.Data.Interfaces | CumulusRCM",
    "keywords": "Namespace Billing.Data.Interfaces Classes Address Interfaces IAddress IBillingDataService IIdPk IPerson IPlaceOfService IUserService Enums NameOrder"
  },
  "api/Billing.Data.Models.Adjudication.html": {
    "href": "api/Billing.Data.Models.Adjudication.html",
    "title": "Class Adjudication | CumulusRCM",
    "keywords": "Class Adjudication Namespace Billing.Data.Models Assembly Billing.Data.dll public record Adjudication : IEquatable<Adjudication> Inheritance object Adjudication Implements IEquatable<Adjudication> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Adjudication(string[], decimal, decimal) public Adjudication(string[] Codes, decimal PayableAmount, decimal ReimbursementRate) Parameters Codes string[] PayableAmount decimal ReimbursementRate decimal Properties CodeCount public int CodeCount { get; } Property Value int Codes public string[] Codes { get; init; } Property Value string[] PayableAmount public decimal PayableAmount { get; init; } Property Value decimal ReimbursementRate public decimal ReimbursementRate { get; init; } Property Value decimal"
  },
  "api/Billing.Data.Models.AppUser.html": {
    "href": "api/Billing.Data.Models.AppUser.html",
    "title": "Class AppUser | CumulusRCM",
    "keywords": "Class AppUser Namespace Billing.Data.Models Assembly Billing.Data.dll public class AppUser : IIdPk Inheritance object AppUser Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Id public long Id { get; set; } Property Value long UserName public string UserName { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.BillableService.html": {
    "href": "api/Billing.Data.Models.BillableService.html",
    "title": "Class BillableService | CumulusRCM",
    "keywords": "Class BillableService Namespace Billing.Data.Models Assembly Billing.Data.dll public class BillableService : IIdPk Inheritance object BillableService Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillableService() public BillableService() Properties BillableServiceStatus public char BillableServiceStatus { get; set; } Property Value char ChargeClaim_Id public long? ChargeClaim_Id { get; set; } Property Value long? Cpt_Code public string Cpt_Code { get; set; } Property Value string Fee public decimal Fee { get; set; } Property Value decimal IcdCodes public string IcdCodes { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsCreatedByPaymentProcess public bool IsCreatedByPaymentProcess { get; set; } Property Value bool IsDeleted public bool IsDeleted { get; set; } Property Value bool Patient_Id public long Patient_Id { get; set; } Property Value long Provider_Id public long Provider_Id { get; set; } Property Value long ServiceDate public DateTime ServiceDate { get; set; } Property Value DateTime ServiceLocation [ColumnInfo(null, true, false, false, null)] public ServiceLocation? ServiceLocation { get; set; } Property Value ServiceLocation Service_Facility_Id public long? Service_Facility_Id { get; set; } Property Value long? Service_PatientAddress_Id public long? Service_PatientAddress_Id { get; set; } Property Value long? Units public short Units { get; set; } Property Value short Methods Clone() public BillableService Clone() Returns BillableService"
  },
  "api/Billing.Data.Models.BillableServiceWithLookups.html": {
    "href": "api/Billing.Data.Models.BillableServiceWithLookups.html",
    "title": "Class BillableServiceWithLookups | CumulusRCM",
    "keywords": "Class BillableServiceWithLookups Namespace Billing.Data.Models Assembly Billing.Data.dll public class BillableServiceWithLookups : IIdPk Inheritance object BillableServiceWithLookups Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties BillableService public required BillableService BillableService { get; set; } Property Value BillableService CptCode public required CptCode CptCode { get; set; } Property Value CptCode Diagnoses public required ICollection<Diagnosis> Diagnoses { get; set; } Property Value ICollection<Diagnosis> Id [JsonIgnore] public long Id { get; set; } Property Value long Patient public required Patient Patient { get; set; } Property Value Patient Provider public required Provider Provider { get; set; } Property Value Provider ServiceLocation public ServiceLocation? ServiceLocation { get; set; } Property Value ServiceLocation"
  },
  "api/Billing.Data.Models.ChargeClaim.html": {
    "href": "api/Billing.Data.Models.ChargeClaim.html",
    "title": "Class ChargeClaim | CumulusRCM",
    "keywords": "Class ChargeClaim Namespace Billing.Data.Models Assembly Billing.Data.dll public class ChargeClaim : IIdPk Inheritance object ChargeClaim Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties BillingStatus public string BillingStatus { get; set; } Property Value string ClaimDiagnoses public string ClaimDiagnoses { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsAssignmentAccepted public bool IsAssignmentAccepted { get; set; } Property Value bool IsDeleted public bool IsDeleted { get; set; } Property Value bool Patient_Id public long Patient_Id { get; set; } Property Value long PaymentProcessReference public string? PaymentProcessReference { get; set; } Property Value string Provider_Id public long Provider_Id { get; set; } Property Value long"
  },
  "api/Billing.Data.Models.ChargeClaimPlanItem.html": {
    "href": "api/Billing.Data.Models.ChargeClaimPlanItem.html",
    "title": "Class ChargeClaimPlanItem | CumulusRCM",
    "keywords": "Class ChargeClaimPlanItem Namespace Billing.Data.Models Assembly Billing.Data.dll public class ChargeClaimPlanItem : IIdPk Inheritance object ChargeClaimPlanItem Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties AddedToPlanDate public DateTime AddedToPlanDate { get; set; } Property Value DateTime BillOrder public int BillOrder { get; set; } Property Value int ChargeClaim_Id public long ChargeClaim_Id { get; set; } Property Value long Id public long Id { get; set; } Property Value long InsuranceCompany_Id public long? InsuranceCompany_Id { get; set; } Property Value long? IsBillPatient public bool IsBillPatient { get; set; } Property Value bool IsCreatedByPaymentProcess public bool? IsCreatedByPaymentProcess { get; set; } Property Value bool? IsDeleted public bool IsDeleted { get; set; } Property Value bool Status public char Status { get; set; } Property Value char"
  },
  "api/Billing.Data.Models.ChargeClaimPlanItemStatus.html": {
    "href": "api/Billing.Data.Models.ChargeClaimPlanItemStatus.html",
    "title": "Class ChargeClaimPlanItemStatus | CumulusRCM",
    "keywords": "Class ChargeClaimPlanItemStatus Namespace Billing.Data.Models Assembly Billing.Data.dll public class ChargeClaimPlanItemStatus : IIdPk Inheritance object ChargeClaimPlanItemStatus Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ChangeDate public DateTime ChangeDate { get; set; } Property Value DateTime ChargeClaimPlanItem_Id public long ChargeClaimPlanItem_Id { get; set; } Property Value long Id public long Id { get; set; } Property Value long SourceChargeClaimSubmission_Id public long? SourceChargeClaimSubmission_Id { get; set; } Property Value long? SourcePaymentClaim_Id public long? SourcePaymentClaim_Id { get; set; } Property Value long? Status public string Status { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.ChargeClaimSubmission.html": {
    "href": "api/Billing.Data.Models.ChargeClaimSubmission.html",
    "title": "Class ChargeClaimSubmission | CumulusRCM",
    "keywords": "Class ChargeClaimSubmission Namespace Billing.Data.Models Assembly Billing.Data.dll public class ChargeClaimSubmission : IIdPk Inheritance object ChargeClaimSubmission Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ChargeAmount public decimal ChargeAmount { get; set; } Property Value decimal ChargeClaimPlanItem_Id public long ChargeClaimPlanItem_Id { get; set; } Property Value long ChargeClaim_Id public long ChargeClaim_Id { get; set; } Property Value long ChargeTransaction_Id public long? ChargeTransaction_Id { get; set; } Property Value long? ClaimDiagnoses public string ClaimDiagnoses { get; set; } Property Value string Id public long Id { get; set; } Property Value long InsuranceCompany_Id public long InsuranceCompany_Id { get; set; } Property Value long IsAssignmentAccepted public bool IsAssignmentAccepted { get; set; } Property Value bool IsCreatedByPaymentProcess public bool? IsCreatedByPaymentProcess { get; set; } Property Value bool? IsDeleted public bool IsDeleted { get; set; } Property Value bool Policy_Id public long Policy_Id { get; set; } Property Value long PreviousPaymentIdJson public string PreviousPaymentIdJson { get; set; } Property Value string SubmittedDate public DateTime? SubmittedDate { get; } Property Value DateTime?"
  },
  "api/Billing.Data.Models.ChargeClaimSubmissionServiceLine.html": {
    "href": "api/Billing.Data.Models.ChargeClaimSubmissionServiceLine.html",
    "title": "Class ChargeClaimSubmissionServiceLine | CumulusRCM",
    "keywords": "Class ChargeClaimSubmissionServiceLine Namespace Billing.Data.Models Assembly Billing.Data.dll public record ChargeClaimSubmissionServiceLine : IIdPk, IEquatable<ChargeClaimSubmissionServiceLine> Inheritance object ChargeClaimSubmissionServiceLine Implements IIdPk IEquatable<ChargeClaimSubmissionServiceLine> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Amount public decimal Amount { get; init; } Property Value decimal BillableService_Id public long BillableService_Id { get; init; } Property Value long ChargeClaimSubmission_Id public long ChargeClaimSubmission_Id { get; init; } Property Value long ClaimDiagnosesPointers public string ClaimDiagnosesPointers { get; init; } Property Value string Id public long Id { get; set; } Property Value long LineNumber public int LineNumber { get; init; } Property Value int Modifier1 public string Modifier1 { get; init; } Property Value string Modifier2 public string Modifier2 { get; init; } Property Value string"
  },
  "api/Billing.Data.Models.ChargeTransaction.html": {
    "href": "api/Billing.Data.Models.ChargeTransaction.html",
    "title": "Class ChargeTransaction | CumulusRCM",
    "keywords": "Class ChargeTransaction Namespace Billing.Data.Models Assembly Billing.Data.dll public class ChargeTransaction : IIdPk Inheritance object ChargeTransaction Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Edi837 public string? Edi837 { get; set; } Property Value string Id public long Id { get; set; } Property Value long SubmitStatus public char SubmitStatus { get; set; } Property Value char SubmittedDate public DateTime? SubmittedDate { get; set; } Property Value DateTime?"
  },
  "api/Billing.Data.Models.ClaimDiagnosis.html": {
    "href": "api/Billing.Data.Models.ClaimDiagnosis.html",
    "title": "Class ClaimDiagnosis | CumulusRCM",
    "keywords": "Class ClaimDiagnosis Namespace Billing.Data.Models Assembly Billing.Data.dll public class ClaimDiagnosis : IIdPk Inheritance object ClaimDiagnosis Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Claim_Id public long Claim_Id { get; set; } Property Value long DiagnosisCode public string DiagnosisCode { get; set; } Property Value string IcdVersion public short IcdVersion { get; set; } Property Value short Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool Number public short Number { get; set; } Property Value short"
  },
  "api/Billing.Data.Models.ClaimPaymentView.html": {
    "href": "api/Billing.Data.Models.ClaimPaymentView.html",
    "title": "Class ClaimPaymentView | CumulusRCM",
    "keywords": "Class ClaimPaymentView Namespace Billing.Data.Models Assembly Billing.Data.dll public class ClaimPaymentView : PaymentClaim, IIdPk Inheritance object PaymentClaim ClaimPaymentView Implements IIdPk Inherited Members PaymentClaim.Id PaymentClaim.PaymentTransaction_Id PaymentClaim.Patient_Id PaymentClaim.PaidAmount PaymentClaim.ClaimDate PaymentClaim.ChargeClaim_Id PaymentClaim.ChargeClaimSubmission_Id PaymentClaim.EdiPaymentClaimJson PaymentClaim.ProcessStatus PaymentClaim.PayerControlNumber PaymentClaim.TotalClaimCharge PaymentClaim.PatientResponsibility PaymentClaim.ClaimId PaymentClaim.IsDeleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties InsuranceCompany_Id public long InsuranceCompany_Id { get; init; } Property Value long PaymentDate public DateOnly PaymentDate { get; init; } Property Value DateOnly"
  },
  "api/Billing.Data.Models.Clearinghouse.html": {
    "href": "api/Billing.Data.Models.Clearinghouse.html",
    "title": "Class Clearinghouse | CumulusRCM",
    "keywords": "Class Clearinghouse Namespace Billing.Data.Models Assembly Billing.Data.dll public class Clearinghouse : IIdPk Inheritance object Clearinghouse Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool Name public string Name { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.CptCode.html": {
    "href": "api/Billing.Data.Models.CptCode.html",
    "title": "Class CptCode | CumulusRCM",
    "keywords": "Class CptCode Namespace Billing.Data.Models Assembly Billing.Data.dll public record CptCode : IIdPk, IEquatable<CptCode> Inheritance object CptCode Implements IIdPk IEquatable<CptCode> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Code public string Code { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id public long Id { get; set; } Property Value long RequiredWith public string RequiredWith { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.Diagnosis.html": {
    "href": "api/Billing.Data.Models.Diagnosis.html",
    "title": "Class Diagnosis | CumulusRCM",
    "keywords": "Class Diagnosis Namespace Billing.Data.Models Assembly Billing.Data.dll public record Diagnosis : IIdPk, IEquatable<Diagnosis> Inheritance object Diagnosis Implements IIdPk IEquatable<Diagnosis> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Description public string Description { get; set; } Property Value string IcdCode public string IcdCode { get; set; } Property Value string Id public long Id { get; set; } Property Value long Version public int Version { get; set; } Property Value int"
  },
  "api/Billing.Data.Models.EligibilityResult.html": {
    "href": "api/Billing.Data.Models.EligibilityResult.html",
    "title": "Class EligibilityResult | CumulusRCM",
    "keywords": "Class EligibilityResult Namespace Billing.Data.Models Assembly Billing.Data.dll public class EligibilityResult : IIdPk Inheritance object EligibilityResult Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Edi public string Edi { get; set; } Property Value string Id public long Id { get; set; } Property Value long Patient_Id public long Patient_Id { get; set; } Property Value long PrimaryInsuranceCompany_Id public long? PrimaryInsuranceCompany_Id { get; set; } Property Value long? RequestDate public DateTime RequestDate { get; set; } Property Value DateTime StartDate public DateTime StartDate { get; set; } Property Value DateTime"
  },
  "api/Billing.Data.Models.Facility.html": {
    "href": "api/Billing.Data.Models.Facility.html",
    "title": "Class Facility | CumulusRCM",
    "keywords": "Class Facility Namespace Billing.Data.Models Assembly Billing.Data.dll public class Facility : IIdPk, IAddress, IPlaceOfService Inheritance object Facility Implements IIdPk IAddress IPlaceOfService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties City public string City { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool Npi public string Npi { get; set; } Property Value string PlaceOfServiceCode public string PlaceOfServiceCode { get; set; } Property Value string State public string State { get; set; } Property Value string Street1 public string Street1 { get; set; } Property Value string Street2 public string Street2 { get; set; } Property Value string ZipCode public string ZipCode { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.InsuranceCompany.html": {
    "href": "api/Billing.Data.Models.InsuranceCompany.html",
    "title": "Class InsuranceCompany | CumulusRCM",
    "keywords": "Class InsuranceCompany Namespace Billing.Data.Models Assembly Billing.Data.dll public class InsuranceCompany : IIdPk Inheritance object InsuranceCompany Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ClaimFilingIndicatorCodeDefault public string ClaimFilingIndicatorCodeDefault { get; set; } Property Value string CompanyName public string CompanyName { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsAssignmentAcceptedDefault public bool IsAssignmentAcceptedDefault { get; set; } Property Value bool IsDeleted public bool IsDeleted { get; set; } Property Value bool PayorIds public string PayorIds { get; set; } Property Value string RequiresPreAuth public bool RequiresPreAuth { get; set; } Property Value bool"
  },
  "api/Billing.Data.Models.Patient.html": {
    "href": "api/Billing.Data.Models.Patient.html",
    "title": "Class Patient | CumulusRCM",
    "keywords": "Class Patient Namespace Billing.Data.Models Assembly Billing.Data.dll public class Patient : IIdPk, IPerson Inheritance object Patient Implements IIdPk IPerson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Birthdate public DateOnly Birthdate { get; set; } Property Value DateOnly DeathDate public DateOnly? DeathDate { get; set; } Property Value DateOnly? DefaultServiceAddress_Id public long? DefaultServiceAddress_Id { get; set; } Property Value long? Facility_Id public long? Facility_Id { get; set; } Property Value long? FirstName public string FirstName { get; set; } Property Value string Gender public string Gender { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool LastName public string LastName { get; set; } Property Value string MedicareId public string MedicareId { get; set; } Property Value string MiddleName public string MiddleName { get; set; } Property Value string Methods Name(NameOrder) public string Name(NameOrder nameOrder) Parameters nameOrder NameOrder Returns string"
  },
  "api/Billing.Data.Models.PatientAddress.html": {
    "href": "api/Billing.Data.Models.PatientAddress.html",
    "title": "Class PatientAddress | CumulusRCM",
    "keywords": "Class PatientAddress Namespace Billing.Data.Models Assembly Billing.Data.dll public class PatientAddress : IIdPk, IAddress Inheritance object PatientAddress Implements IIdPk IAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties AddressKind public char AddressKind { get; set; } Property Value char City public string City { get; set; } Property Value string Id public long Id { get; set; } Property Value long Inactivated public DateTime? Inactivated { get; set; } Property Value DateTime? IsDefaultServiceLocation public bool IsDefaultServiceLocation { get; set; } Property Value bool IsDeleted public bool IsDeleted { get; set; } Property Value bool Patient_Id public long Patient_Id { get; set; } Property Value long Priority public short Priority { get; set; } Property Value short State public string State { get; set; } Property Value string Street1 public string Street1 { get; set; } Property Value string Street2 public string Street2 { get; set; } Property Value string ZipCode public string ZipCode { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.PatientPhone.html": {
    "href": "api/Billing.Data.Models.PatientPhone.html",
    "title": "Class PatientPhone | CumulusRCM",
    "keywords": "Class PatientPhone Namespace Billing.Data.Models Assembly Billing.Data.dll public class PatientPhone : IIdPk Inheritance object PatientPhone Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Id public long Id { get; set; } Property Value long Inactivated public DateTime? Inactivated { get; set; } Property Value DateTime? IsDeleted public bool IsDeleted { get; set; } Property Value bool Patient_Id public long Patient_Id { get; set; } Property Value long PhoneKind public char PhoneKind { get; set; } Property Value char PhoneNumber public string PhoneNumber { get; set; } Property Value string Priority public short Priority { get; set; } Property Value short"
  },
  "api/Billing.Data.Models.Payer.html": {
    "href": "api/Billing.Data.Models.Payer.html",
    "title": "Class Payer | CumulusRCM",
    "keywords": "Class Payer Namespace Billing.Data.Models Assembly Billing.Data.dll public class Payer Inheritance object Payer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties City public string City { get; set; } Property Value string Id public long Id { get; set; } Property Value long InsuranceCompany_Id public long? InsuranceCompany_Id { get; set; } Property Value long? PayerIdsJson public string PayerIdsJson { get; set; } Property Value string PayerName public string PayerName { get; set; } Property Value string PayorIds [ColumnInfo(null, true, false, false, null)] public PayerIdentifier[] PayorIds { get; } Property Value PayerIdentifier[] State public string State { get; set; } Property Value string Street1 public string Street1 { get; set; } Property Value string Street2 public string Street2 { get; set; } Property Value string ZipCode public string ZipCode { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.PayerIdentifier.html": {
    "href": "api/Billing.Data.Models.PayerIdentifier.html",
    "title": "Class PayerIdentifier | CumulusRCM",
    "keywords": "Class PayerIdentifier Namespace Billing.Data.Models Assembly Billing.Data.dll public record PayerIdentifier : IEquatable<PayerIdentifier> Inheritance object PayerIdentifier Implements IEquatable<PayerIdentifier> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Identifier public string Identifier { get; set; } Property Value string Qualifier public string Qualifier { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.Payment835Edi.html": {
    "href": "api/Billing.Data.Models.Payment835Edi.html",
    "title": "Class Payment835Edi | CumulusRCM",
    "keywords": "Class Payment835Edi Namespace Billing.Data.Models Assembly Billing.Data.dll public class Payment835Edi : IIdPk Inheritance object Payment835Edi Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties EdiData public string EdiData { get; set; } Property Value string Filename public string Filename { get; set; } Property Value string HashCode public string HashCode { get; set; } Property Value string Id public long Id { get; set; } Property Value long ProcessStatus public int ProcessStatus { get; set; } Property Value int"
  },
  "api/Billing.Data.Models.PaymentClaim.html": {
    "href": "api/Billing.Data.Models.PaymentClaim.html",
    "title": "Class PaymentClaim | CumulusRCM",
    "keywords": "Class PaymentClaim Namespace Billing.Data.Models Assembly Billing.Data.dll public class PaymentClaim : IIdPk Inheritance object PaymentClaim Implements IIdPk Derived ClaimPaymentView Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ChargeClaimSubmission_Id public long? ChargeClaimSubmission_Id { get; set; } Property Value long? ChargeClaim_Id public long? ChargeClaim_Id { get; set; } Property Value long? ClaimDate public DateOnly ClaimDate { get; set; } Property Value DateOnly ClaimId public string ClaimId { get; set; } Property Value string EdiPaymentClaimJson public string EdiPaymentClaimJson { get; init; } Property Value string Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool PaidAmount public decimal PaidAmount { get; set; } Property Value decimal PatientResponsibility public decimal PatientResponsibility { get; set; } Property Value decimal Patient_Id public long? Patient_Id { get; set; } Property Value long? PayerControlNumber public string PayerControlNumber { get; set; } Property Value string PaymentTransaction_Id public long PaymentTransaction_Id { get; set; } Property Value long ProcessStatus public int ProcessStatus { get; set; } Property Value int TotalClaimCharge public decimal TotalClaimCharge { get; set; } Property Value decimal"
  },
  "api/Billing.Data.Models.PaymentClaimAdjustment.html": {
    "href": "api/Billing.Data.Models.PaymentClaimAdjustment.html",
    "title": "Class PaymentClaimAdjustment | CumulusRCM",
    "keywords": "Class PaymentClaimAdjustment Namespace Billing.Data.Models Assembly Billing.Data.dll public class PaymentClaimAdjustment : IIdPk Inheritance object PaymentClaimAdjustment Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Amount public decimal Amount { get; set; } Property Value decimal Id public long Id { get; set; } Property Value long PaymentClaim_Id public long PaymentClaim_Id { get; set; } Property Value long ReasonGroup_Code public string ReasonGroup_Code { get; set; } Property Value string Reason_Code public string Reason_Code { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.PaymentClaimLineItem.html": {
    "href": "api/Billing.Data.Models.PaymentClaimLineItem.html",
    "title": "Class PaymentClaimLineItem | CumulusRCM",
    "keywords": "Class PaymentClaimLineItem Namespace Billing.Data.Models Assembly Billing.Data.dll public class PaymentClaimLineItem : IIdPk Inheritance object PaymentClaimLineItem Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties BillableService_Id public long? BillableService_Id { get; set; } Property Value long? ChargeClaimSubmissionServiceLine_Id public long? ChargeClaimSubmissionServiceLine_Id { get; set; } Property Value long? CptCode public string CptCode { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool PaidAmount public decimal PaidAmount { get; set; } Property Value decimal PaymentClaim_Id public long PaymentClaim_Id { get; set; } Property Value long ServiceDate public DateOnly ServiceDate { get; set; } Property Value DateOnly"
  },
  "api/Billing.Data.Models.PaymentClaimLineItemAdjustment.html": {
    "href": "api/Billing.Data.Models.PaymentClaimLineItemAdjustment.html",
    "title": "Class PaymentClaimLineItemAdjustment | CumulusRCM",
    "keywords": "Class PaymentClaimLineItemAdjustment Namespace Billing.Data.Models Assembly Billing.Data.dll public class PaymentClaimLineItemAdjustment : IIdPk Inheritance object PaymentClaimLineItemAdjustment Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Amount public decimal Amount { get; set; } Property Value decimal Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool PaymentClaimLineItem_Id public long PaymentClaimLineItem_Id { get; set; } Property Value long ReasonGroup_Code public string ReasonGroup_Code { get; set; } Property Value string Reason_Code public string Reason_Code { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.PaymentClaimQueue.html": {
    "href": "api/Billing.Data.Models.PaymentClaimQueue.html",
    "title": "Class PaymentClaimQueue | CumulusRCM",
    "keywords": "Class PaymentClaimQueue Namespace Billing.Data.Models Assembly Billing.Data.dll public class PaymentClaimQueue : IIdPk Inheritance object PaymentClaimQueue Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Edi public string Edi { get; set; } Property Value string Id public long Id { get; set; } Property Value long QueueInsertTime public DateTime QueueInsertTime { get; set; } Property Value DateTime"
  },
  "api/Billing.Data.Models.PaymentClaimQueueError.html": {
    "href": "api/Billing.Data.Models.PaymentClaimQueueError.html",
    "title": "Class PaymentClaimQueueError | CumulusRCM",
    "keywords": "Class PaymentClaimQueueError Namespace Billing.Data.Models Assembly Billing.Data.dll public class PaymentClaimQueueError : IIdPk Inheritance object PaymentClaimQueueError Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Edi public string Edi { get; set; } Property Value string Id public long Id { get; set; } Property Value long PaymentClaimQueue_Id public long PaymentClaimQueue_Id { get; set; } Property Value long"
  },
  "api/Billing.Data.Models.PaymentTransaction.html": {
    "href": "api/Billing.Data.Models.PaymentTransaction.html",
    "title": "Class PaymentTransaction | CumulusRCM",
    "keywords": "Class PaymentTransaction Namespace Billing.Data.Models Assembly Billing.Data.dll public class PaymentTransaction : IIdPk Inheritance object PaymentTransaction Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Id public long Id { get; set; } Property Value long PaidAmount public decimal PaidAmount { get; set; } Property Value decimal ParsedEdi [ColumnInfo(null, true, true, false, null)] public string ParsedEdi { get; set; } Property Value string ParsedEdiHashCode public string ParsedEdiHashCode { get; set; } Property Value string PayeeName public string PayeeName { get; set; } Property Value string Payer_Id public long? Payer_Id { get; set; } Property Value long? Payment835Edi_Id public long? Payment835Edi_Id { get; set; } Property Value long? PaymentDate public DateOnly PaymentDate { get; set; } Property Value DateOnly ProcessStatus public int ProcessStatus { get; set; } Property Value int ReferenceId public string ReferenceId { get; set; } Property Value string TaxId public string TaxId { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.Policy.html": {
    "href": "api/Billing.Data.Models.Policy.html",
    "title": "Class Policy | CumulusRCM",
    "keywords": "Class Policy Namespace Billing.Data.Models Assembly Billing.Data.dll public class Policy : IIdPk Inheritance object Policy Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ActiveDate public DateOnly ActiveDate { get; set; } Property Value DateOnly ClaimFilingIndicatorCode public string ClaimFilingIndicatorCode { get; set; } Property Value string GroupNumber public string GroupNumber { get; set; } Property Value string Id public long Id { get; set; } Property Value long InactiveDate public DateOnly? InactiveDate { get; set; } Property Value DateOnly? InsuranceCompany_Id public long? InsuranceCompany_Id { get; set; } Property Value long? IsAssignmentAccepted public bool IsAssignmentAccepted { get; set; } Property Value bool IsDeleted public bool IsDeleted { get; set; } Property Value bool Patient_Id public long Patient_Id { get; set; } Property Value long Payer_Id public long? Payer_Id { get; set; } Property Value long? PolicyNumber public string PolicyNumber { get; set; } Property Value string Priority public int Priority { get; set; } Property Value int RelationshipCode public string RelationshipCode { get; set; } Property Value string Subscriber_Id public long? Subscriber_Id { get; set; } Property Value long?"
  },
  "api/Billing.Data.Models.Practice.html": {
    "href": "api/Billing.Data.Models.Practice.html",
    "title": "Class Practice | CumulusRCM",
    "keywords": "Class Practice Namespace Billing.Data.Models Assembly Billing.Data.dll public class Practice : IIdPk Inheritance object Practice Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties CompanyName public string CompanyName { get; set; } Property Value string DateOfEstablishment public DateOnly DateOfEstablishment { get; set; } Property Value DateOnly EIN public string EIN { get; set; } Property Value string Email public string Email { get; set; } Property Value string HIPAAContactEmail public string HIPAAContactEmail { get; set; } Property Value string HIPAAContactPhone public string HIPAAContactPhone { get; set; } Property Value string HIPAAPrivacyOfficer public string HIPAAPrivacyOfficer { get; set; } Property Value string HIPAASecurityOfficer public string HIPAASecurityOfficer { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool OwnershipType public string OwnershipType { get; set; } Property Value string Specialty public string Specialty { get; set; } Property Value string TaxId public string TaxId { get; set; } Property Value string Website public string Website { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.PracticeAddress.html": {
    "href": "api/Billing.Data.Models.PracticeAddress.html",
    "title": "Class PracticeAddress | CumulusRCM",
    "keywords": "Class PracticeAddress Namespace Billing.Data.Models Assembly Billing.Data.dll public class PracticeAddress : IIdPk Inheritance object PracticeAddress Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties City public string City { get; set; } Property Value string Id public long Id { get; set; } Property Value long Inactivated public DateTime? Inactivated { get; set; } Property Value DateTime? Practice_Id public long Practice_Id { get; set; } Property Value long Priority public short Priority { get; set; } Property Value short State public string State { get; set; } Property Value string Street1 public string Street1 { get; set; } Property Value string Street2 public string Street2 { get; set; } Property Value string ZipCode public string ZipCode { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.PracticePatient.html": {
    "href": "api/Billing.Data.Models.PracticePatient.html",
    "title": "Class PracticePatient | CumulusRCM",
    "keywords": "Class PracticePatient Namespace Billing.Data.Models Assembly Billing.Data.dll public class PracticePatient : IIdPk Inheritance object PracticePatient Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ActiveStatus public string ActiveStatus { get; set; } Property Value string ActiveStatusHistory public string ActiveStatusHistory { get; set; } Property Value string DefaultProvider_Id public long? DefaultProvider_Id { get; set; } Property Value long? Id public long Id { get; set; } Property Value long LatestActiveStatus public DateTime LatestActiveStatus { get; set; } Property Value DateTime Patient_Id public long Patient_Id { get; set; } Property Value long Practice_Id public long Practice_Id { get; set; } Property Value long"
  },
  "api/Billing.Data.Models.PracticePhone.html": {
    "href": "api/Billing.Data.Models.PracticePhone.html",
    "title": "Class PracticePhone | CumulusRCM",
    "keywords": "Class PracticePhone Namespace Billing.Data.Models Assembly Billing.Data.dll public class PracticePhone : IIdPk Inheritance object PracticePhone Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Id public long Id { get; set; } Property Value long Inactivated public DateTime? Inactivated { get; set; } Property Value DateTime? PhoneKind public char PhoneKind { get; set; } Property Value char PhoneNumber public string PhoneNumber { get; set; } Property Value string Practice_Id public long Practice_Id { get; set; } Property Value long Priority public short Priority { get; set; } Property Value short"
  },
  "api/Billing.Data.Models.PracticeProvider.html": {
    "href": "api/Billing.Data.Models.PracticeProvider.html",
    "title": "Class PracticeProvider | CumulusRCM",
    "keywords": "Class PracticeProvider Namespace Billing.Data.Models Assembly Billing.Data.dll public class PracticeProvider : IIdPk Inheritance object PracticeProvider Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ActiveStatus public string ActiveStatus { get; set; } Property Value string ActiveStatusHistory public string ActiveStatusHistory { get; set; } Property Value string Id public long Id { get; set; } Property Value long LastActiveStatus public DateTime LastActiveStatus { get; set; } Property Value DateTime Practice_Id public long Practice_Id { get; set; } Property Value long Provider_Id public long Provider_Id { get; set; } Property Value long"
  },
  "api/Billing.Data.Models.PreAuthorization.html": {
    "href": "api/Billing.Data.Models.PreAuthorization.html",
    "title": "Class PreAuthorization | CumulusRCM",
    "keywords": "Class PreAuthorization Namespace Billing.Data.Models Assembly Billing.Data.dll public class PreAuthorization : IIdPk Inheritance object PreAuthorization Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties AuthorizedUnits public int AuthorizedUnits { get; set; } Property Value int Cpt_Code public string Cpt_Code { get; set; } Property Value string EndDate public DateTime? EndDate { get; set; } Property Value DateTime? FromDate public DateTime FromDate { get; set; } Property Value DateTime Id public long Id { get; set; } Property Value long Note public string Note { get; set; } Property Value string Patient_Id public long Patient_Id { get; set; } Property Value long Policy_Id public long Policy_Id { get; set; } Property Value long PreAuthCode public string PreAuthCode { get; set; } Property Value string PreAuthObtainedDate public DateTime? PreAuthObtainedDate { get; set; } Property Value DateTime?"
  },
  "api/Billing.Data.Models.Provider.html": {
    "href": "api/Billing.Data.Models.Provider.html",
    "title": "Class Provider | CumulusRCM",
    "keywords": "Class Provider Namespace Billing.Data.Models Assembly Billing.Data.dll public class Provider : IIdPk, IPerson Inheritance object Provider Implements IIdPk IPerson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) ProviderHelpers.GetProviderCptCodesFavoritesAsync(Provider, IBillingDataService) ProviderHelpers.GetProviderDiagnosisFavoritesAsync(Provider, IBillingDataService) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties CptFavorites public string CptFavorites { get; set; } Property Value string DiagnosisFavorites public string DiagnosisFavorites { get; set; } Property Value string FirstName public string FirstName { get; set; } Property Value string Id public long Id { get; set; } Property Value long IsDeleted public bool IsDeleted { get; set; } Property Value bool IsIndividual public bool IsIndividual { get; set; } Property Value bool LastName public string LastName { get; set; } Property Value string MiddleName public string MiddleName { get; set; } Property Value string Npi public string Npi { get; set; } Property Value string"
  },
  "api/Billing.Data.Models.ProviderFacility.html": {
    "href": "api/Billing.Data.Models.ProviderFacility.html",
    "title": "Class ProviderFacility | CumulusRCM",
    "keywords": "Class ProviderFacility Namespace Billing.Data.Models Assembly Billing.Data.dll public class ProviderFacility : IIdPk Inheritance object ProviderFacility Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Facility_Id public long Facility_Id { get; set; } Property Value long Id public long Id { get; set; } Property Value long Provider_Id public long Provider_Id { get; set; } Property Value long"
  },
  "api/Billing.Data.Models.ProviderWithFacilities.html": {
    "href": "api/Billing.Data.Models.ProviderWithFacilities.html",
    "title": "Class ProviderWithFacilities | CumulusRCM",
    "keywords": "Class ProviderWithFacilities Namespace Billing.Data.Models Assembly Billing.Data.dll public record ProviderWithFacilities : IIdPk, IEquatable<ProviderWithFacilities> Inheritance object ProviderWithFacilities Implements IIdPk IEquatable<ProviderWithFacilities> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProviderWithFacilities(Provider, IEnumerable<Facility>) public ProviderWithFacilities(Provider Provider, IEnumerable<Facility> Facilities) Parameters Provider Provider Facilities IEnumerable<Facility> Properties Facilities public IEnumerable<Facility> Facilities { get; init; } Property Value IEnumerable<Facility> Id public long Id { get; set; } Property Value long Provider public Provider Provider { get; init; } Property Value Provider"
  },
  "api/Billing.Data.Models.ServiceDiagnosis.html": {
    "href": "api/Billing.Data.Models.ServiceDiagnosis.html",
    "title": "Class ServiceDiagnosis | CumulusRCM",
    "keywords": "Class ServiceDiagnosis Namespace Billing.Data.Models Assembly Billing.Data.dll public class ServiceDiagnosis : IIdPk Inheritance object ServiceDiagnosis Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties BillableService_Id public long BillableService_Id { get; set; } Property Value long Diagnosis_Id public long Diagnosis_Id { get; set; } Property Value long Id public long Id { get; set; } Property Value long Priority public short Priority { get; set; } Property Value short"
  },
  "api/Billing.Data.Models.ServiceLocation.html": {
    "href": "api/Billing.Data.Models.ServiceLocation.html",
    "title": "Class ServiceLocation | CumulusRCM",
    "keywords": "Class ServiceLocation Namespace Billing.Data.Models Assembly Billing.Data.dll public record ServiceLocation : IEquatable<ServiceLocation> Inheritance object ServiceLocation Implements IEquatable<ServiceLocation> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ServiceLocation() public ServiceLocation() ServiceLocation(Facility) public ServiceLocation(Facility f) Parameters f Facility ServiceLocation(PatientAddress) public ServiceLocation(PatientAddress pa) Parameters pa PatientAddress Properties Address public IAddress Address { get; init; } Property Value IAddress Description public string Description { get; init; } Property Value string Id public long Id { get; init; } Property Value long IsDefaultServiceLocation public bool IsDefaultServiceLocation { get; init; } Property Value bool IsFacility public bool IsFacility { get; init; } Property Value bool Priority public int Priority { get; init; } Property Value int Methods Create(PatientAddress?, Facility?) public static ServiceLocation Create(PatientAddress? pa, Facility? f) Parameters pa PatientAddress f Facility Returns ServiceLocation"
  },
  "api/Billing.Data.Models.SubmittedDiagnoses.html": {
    "href": "api/Billing.Data.Models.SubmittedDiagnoses.html",
    "title": "Class SubmittedDiagnoses | CumulusRCM",
    "keywords": "Class SubmittedDiagnoses Namespace Billing.Data.Models Assembly Billing.Data.dll public class SubmittedDiagnoses : IIdPk Inheritance object SubmittedDiagnoses Implements IIdPk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ChargeClaimSubmission_Id public long ChargeClaimSubmission_Id { get; set; } Property Value long Id public long Id { get; set; } Property Value long Position public short Position { get; set; } Property Value short ServiceDiagnosis_Id public long ServiceDiagnosis_Id { get; set; } Property Value long"
  },
  "api/Billing.Data.Models.html": {
    "href": "api/Billing.Data.Models.html",
    "title": "Namespace Billing.Data.Models | CumulusRCM",
    "keywords": "Namespace Billing.Data.Models Classes Adjudication AppUser BillableService BillableServiceWithLookups ChargeClaim ChargeClaimPlanItem ChargeClaimPlanItemStatus ChargeClaimSubmission ChargeClaimSubmissionServiceLine ChargeTransaction ClaimDiagnosis ClaimPaymentView Clearinghouse CptCode Diagnosis EligibilityResult Facility InsuranceCompany Patient PatientAddress PatientPhone Payer PayerIdentifier Payment835Edi PaymentClaim PaymentClaimAdjustment PaymentClaimLineItem PaymentClaimLineItemAdjustment PaymentClaimQueue PaymentClaimQueueError PaymentTransaction Policy Practice PracticeAddress PracticePatient PracticePhone PracticeProvider PreAuthorization Provider ProviderFacility ProviderWithFacilities ServiceDiagnosis ServiceLocation SubmittedDiagnoses"
  },
  "api/Billing.DataAccess.BillableServiceQueries.html": {
    "href": "api/Billing.DataAccess.BillableServiceQueries.html",
    "title": "Class BillableServiceQueries | CumulusRCM",
    "keywords": "Class BillableServiceQueries Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public sealed class BillableServiceQueries : Queries<BillableService>, IBillableServiceQueries, IQueries<BillableService>, ICustomQueries Inheritance object Queries<BillableService> BillableServiceQueries Implements IBillableServiceQueries IQueries<BillableService> ICustomQueries Inherited Members Queries<BillableService>.GetAllAsync(string, int, int, string) Queries<BillableService>.GetCountAsync(string) Queries<BillableService>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) Queries<BillableService>.GetByModelAsync(BillableService) Queries<BillableService>.GetByPkAsync(string) Queries<BillableService>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillableServiceQueries(IBillableServiceReader) public BillableServiceQueries(IBillableServiceReader serviceReader) Parameters serviceReader IBillableServiceReader Methods GetBillableServicesWithLookupsAsync(string) public Task<Response<BillableServiceWithLookups>> GetBillableServicesWithLookupsAsync(string filterJson) Parameters filterJson string Returns Task<Response<BillableServiceWithLookups>> GetEndPoints() public IEnumerable<(string endPoint, Delegate handler, string name)> GetEndPoints() Returns IEnumerable<(string endPoint, Delegate handler, string name)>"
  },
  "api/Billing.DataAccess.BillableServiceReader.html": {
    "href": "api/Billing.DataAccess.BillableServiceReader.html",
    "title": "Class BillableServiceReader | CumulusRCM",
    "keywords": "Class BillableServiceReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public class BillableServiceReader : Reader<BillableService>, IBillableServiceReader, IReader<BillableService>, ICustomReader Inheritance object Reader Reader<BillableService> BillableServiceReader Implements IBillableServiceReader IReader<BillableService> ICustomReader Inherited Members Reader<BillableService>.dbConnectionService Reader<BillableService>.TableSqlBuilder Reader<BillableService>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) Reader<BillableService>.GetCountAsync(Filter) Reader<BillableService>.GetAllAsync(Filter, int, int, OrderBy) Reader<BillableService>.GetByPkAsync(string) Reader<BillableService>.GetAllByPkAsync(IEnumerable<string>) Reader<BillableService>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) Reader.getCountAsync(string, Filter) Reader.paramsToString(DynamicParameters) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillableServiceReader(IDbConnectionManager, IDatabaseMapper) public BillableServiceReader(IDbConnectionManager dbConnectionService, IDatabaseMapper databaseMapper) Parameters dbConnectionService IDbConnectionManager databaseMapper IDatabaseMapper Methods GetBillableServicesWithLookupsAsync(Filter) public Task<IEnumerable<BillableServiceWithLookups>> GetBillableServicesWithLookupsAsync(Filter filter) Parameters filter Filter Returns Task<IEnumerable<BillableServiceWithLookups>>"
  },
  "api/Billing.DataAccess.BillingDataReaderFactory.html": {
    "href": "api/Billing.DataAccess.BillingDataReaderFactory.html",
    "title": "Class BillingDataReaderFactory | CumulusRCM",
    "keywords": "Class BillingDataReaderFactory Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public class BillingDataReaderFactory : IReaderFactory Inheritance object BillingDataReaderFactory Implements IReaderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillingDataReaderFactory(IDbConnectionManager, IDatabaseMapper) public BillingDataReaderFactory(IDbConnectionManager connectionManager, IDatabaseMapper databaseMapper) Parameters connectionManager IDbConnectionManager databaseMapper IDatabaseMapper Methods GetReader<T>() public IReader<T> GetReader<T>() where T : class Returns IReader<T> Type Parameters T"
  },
  "api/Billing.DataAccess.BillingDataService.html": {
    "href": "api/Billing.DataAccess.BillingDataService.html",
    "title": "Class BillingDataService | CumulusRCM",
    "keywords": "Class BillingDataService Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public sealed record BillingDataService : DataServiceBase, IEquatable<DataServiceUnitOfWork>, IEquatable<DataServiceBase>, IBillingDataService, IDataService, IUnitOfWork, IEquatable<BillingDataService> Inheritance object DataServiceUnitOfWork DataServiceBase BillingDataService Implements IEquatable<DataServiceUnitOfWork> IEquatable<DataServiceBase> IBillingDataService IDataService IUnitOfWork IEquatable<BillingDataService> Inherited Members DataServiceBase.ReaderFactory DataServiceUnitOfWork.QueuedItemsCount DataServiceUnitOfWork.SaveStrategy DataServiceUnitOfWork.DatabaseMapper DataServiceUnitOfWork.Reset() DataServiceUnitOfWork.Add<T>(DataChangeKind, T) DataServiceUnitOfWork.AddCollection<T>(DataChangeKind, ICollection<T>) DataServiceUnitOfWork.SaveAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillingDataService(IReaderFactory, ISaveStrategy, IDatabaseMapper) public BillingDataService(IReaderFactory readerFactory, ISaveStrategy saveStrategy, IDatabaseMapper databaseMapper) Parameters readerFactory IReaderFactory saveStrategy ISaveStrategy databaseMapper IDatabaseMapper Methods GetQueries<T>() public override IQueries<T> GetQueries<T>() where T : class Returns IQueries<T> Type Parameters T"
  },
  "api/Billing.DataAccess.BillingDbMap.html": {
    "href": "api/Billing.DataAccess.BillingDbMap.html",
    "title": "Class BillingDbMap | CumulusRCM",
    "keywords": "Class BillingDbMap Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public class BillingDbMap : DatabaseMap, IDatabaseMap Inheritance object DatabaseMap BillingDbMap Implements IDatabaseMap Inherited Members DatabaseMap.Map object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillingDbMap() public BillingDbMap()"
  },
  "api/Billing.DataAccess.FacilityQueries.html": {
    "href": "api/Billing.DataAccess.FacilityQueries.html",
    "title": "Class FacilityQueries | CumulusRCM",
    "keywords": "Class FacilityQueries Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public sealed class FacilityQueries : Queries<Facility>, IFacilityQueries, IQueries<Facility>, ICustomQueries Inheritance object Queries<Facility> FacilityQueries Implements IFacilityQueries IQueries<Facility> ICustomQueries Inherited Members Queries<Facility>.GetAllAsync(string, int, int, string) Queries<Facility>.GetCountAsync(string) Queries<Facility>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) Queries<Facility>.GetByModelAsync(Facility) Queries<Facility>.GetByPkAsync(string) Queries<Facility>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilityQueries(IFacilityReader) public FacilityQueries(IFacilityReader facilityReader) Parameters facilityReader IFacilityReader Methods GetEndPoints() public IEnumerable<(string endPoint, Delegate handler, string name)> GetEndPoints() Returns IEnumerable<(string endPoint, Delegate handler, string name)> GetFacilityProvidersAsync(long) public Task<Response<Provider>> GetFacilityProvidersAsync(long facilityId) Parameters facilityId long Returns Task<Response<Provider>>"
  },
  "api/Billing.DataAccess.FacilityReader.html": {
    "href": "api/Billing.DataAccess.FacilityReader.html",
    "title": "Class FacilityReader | CumulusRCM",
    "keywords": "Class FacilityReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public sealed class FacilityReader : Reader<Facility>, IFacilityReader, IReader<Facility>, ICustomReader Inheritance object Reader Reader<Facility> FacilityReader Implements IFacilityReader IReader<Facility> ICustomReader Inherited Members Reader<Facility>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) Reader<Facility>.GetCountAsync(Filter) Reader<Facility>.GetAllAsync(Filter, int, int, OrderBy) Reader<Facility>.GetByPkAsync(string) Reader<Facility>.GetAllByPkAsync(IEnumerable<string>) Reader<Facility>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilityReader(IDbConnectionManager, IDatabaseMapper) public FacilityReader(IDbConnectionManager dbConnectionService, IDatabaseMapper databaseMapper) Parameters dbConnectionService IDbConnectionManager databaseMapper IDatabaseMapper Methods GetFacilityProvidersAsync(long) public Task<IEnumerable<Provider>> GetFacilityProvidersAsync(long facilityId) Parameters facilityId long Returns Task<IEnumerable<Provider>>"
  },
  "api/Billing.DataAccess.IBillableServiceReader.html": {
    "href": "api/Billing.DataAccess.IBillableServiceReader.html",
    "title": "Interface IBillableServiceReader | CumulusRCM",
    "keywords": "Interface IBillableServiceReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public interface IBillableServiceReader : IReader<BillableService>, ICustomReader Inherited Members IReader<BillableService>.GetByPkAsync(string) IReader<BillableService>.GetCountAsync(Filter) IReader<BillableService>.GetAllAsync(Filter, int, int, OrderBy) IReader<BillableService>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) IReader<BillableService>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetBillableServicesWithLookupsAsync(Filter) Task<IEnumerable<BillableServiceWithLookups>> GetBillableServicesWithLookupsAsync(Filter filter) Parameters filter Filter Returns Task<IEnumerable<BillableServiceWithLookups>>"
  },
  "api/Billing.DataAccess.IFacilityReader.html": {
    "href": "api/Billing.DataAccess.IFacilityReader.html",
    "title": "Interface IFacilityReader | CumulusRCM",
    "keywords": "Interface IFacilityReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public interface IFacilityReader : IReader<Facility>, ICustomReader Inherited Members IReader<Facility>.GetByPkAsync(string) IReader<Facility>.GetCountAsync(Filter) IReader<Facility>.GetAllAsync(Filter, int, int, OrderBy) IReader<Facility>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) IReader<Facility>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetFacilityProvidersAsync(long) Task<IEnumerable<Provider>> GetFacilityProvidersAsync(long facilityId) Parameters facilityId long Returns Task<IEnumerable<Provider>>"
  },
  "api/Billing.DataAccess.IPatientReader.html": {
    "href": "api/Billing.DataAccess.IPatientReader.html",
    "title": "Interface IPatientReader | CumulusRCM",
    "keywords": "Interface IPatientReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public interface IPatientReader : IReader<Patient>, ICustomReader Inherited Members IReader<Patient>.GetByPkAsync(string) IReader<Patient>.GetCountAsync(Filter) IReader<Patient>.GetAllAsync(Filter, int, int, OrderBy) IReader<Patient>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) IReader<Patient>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetPatientPolicyAsync(long, long, string) Task<IEnumerable<Policy>> GetPatientPolicyAsync(long patientId, long insuranceCompanyId, string policyNumber) Parameters patientId long insuranceCompanyId long policyNumber string Returns Task<IEnumerable<Policy>> GetPatientServiceLocationsAsync(long) Task<IEnumerable<ServiceLocation>> GetPatientServiceLocationsAsync(long patientId) Parameters patientId long Returns Task<IEnumerable<ServiceLocation>>"
  },
  "api/Billing.DataAccess.IProviderReader.html": {
    "href": "api/Billing.DataAccess.IProviderReader.html",
    "title": "Interface IProviderReader | CumulusRCM",
    "keywords": "Interface IProviderReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public interface IProviderReader : IReader<Provider>, ICustomReader Inherited Members IReader<Provider>.GetByPkAsync(string) IReader<Provider>.GetCountAsync(Filter) IReader<Provider>.GetAllAsync(Filter, int, int, OrderBy) IReader<Provider>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) IReader<Provider>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetProviderFacilitiesAsync(long) Task<IEnumerable<Facility>> GetProviderFacilitiesAsync(long providerId) Parameters providerId long Returns Task<IEnumerable<Facility>> GetWithFacilitiesAsync(long) Task<ProviderWithFacilities?> GetWithFacilitiesAsync(long providerId) Parameters providerId long Returns Task<ProviderWithFacilities>"
  },
  "api/Billing.DataAccess.PatientQueries.html": {
    "href": "api/Billing.DataAccess.PatientQueries.html",
    "title": "Class PatientQueries | CumulusRCM",
    "keywords": "Class PatientQueries Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public class PatientQueries : Queries<Patient>, IPatientQueries, IQueries<Patient>, ICustomQueries Inheritance object Queries<Patient> PatientQueries Implements IPatientQueries IQueries<Patient> ICustomQueries Inherited Members Queries<Patient>.GetAllAsync(string, int, int, string) Queries<Patient>.GetCountAsync(string) Queries<Patient>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) Queries<Patient>.GetByModelAsync(Patient) Queries<Patient>.GetByPkAsync(string) Queries<Patient>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientQueries(IPatientReader) public PatientQueries(IPatientReader patientReader) Parameters patientReader IPatientReader Methods GetEndPoints() public IEnumerable<(string endPoint, Delegate handler, string name)> GetEndPoints() Returns IEnumerable<(string endPoint, Delegate handler, string name)> GetPatientPolicyAsync(long, long, string) public Task<Response<Policy>> GetPatientPolicyAsync(long patientId, long insuranceCompanyId, string policyNumber) Parameters patientId long insuranceCompanyId long policyNumber string Returns Task<Response<Policy>> GetPatientServiceLocationsAsync(long) public Task<Response<ServiceLocation>> GetPatientServiceLocationsAsync(long patientId) Parameters patientId long Returns Task<Response<ServiceLocation>>"
  },
  "api/Billing.DataAccess.PatientReader.html": {
    "href": "api/Billing.DataAccess.PatientReader.html",
    "title": "Class PatientReader | CumulusRCM",
    "keywords": "Class PatientReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public class PatientReader : Reader<Patient>, IPatientReader, IReader<Patient>, ICustomReader Inheritance object Reader Reader<Patient> PatientReader Implements IPatientReader IReader<Patient> ICustomReader Inherited Members Reader<Patient>.dbConnectionService Reader<Patient>.TableSqlBuilder Reader<Patient>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) Reader<Patient>.GetCountAsync(Filter) Reader<Patient>.GetAllAsync(Filter, int, int, OrderBy) Reader<Patient>.GetByPkAsync(string) Reader<Patient>.GetAllByPkAsync(IEnumerable<string>) Reader<Patient>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) Reader.getCountAsync(string, Filter) Reader.paramsToString(DynamicParameters) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientReader(IDbConnectionManager, IDatabaseMapper) public PatientReader(IDbConnectionManager dbConnectionService, IDatabaseMapper databaseMapper) Parameters dbConnectionService IDbConnectionManager databaseMapper IDatabaseMapper Methods GetPatientPolicyAsync(long, long, string) public Task<IEnumerable<Policy>> GetPatientPolicyAsync(long patientId, long insuranceCompanyId, string policyNumber) Parameters patientId long insuranceCompanyId long policyNumber string Returns Task<IEnumerable<Policy>> GetPatientServiceLocationsAsync(long) public Task<IEnumerable<ServiceLocation>> GetPatientServiceLocationsAsync(long patientId) Parameters patientId long Returns Task<IEnumerable<ServiceLocation>>"
  },
  "api/Billing.DataAccess.ProviderQueries.html": {
    "href": "api/Billing.DataAccess.ProviderQueries.html",
    "title": "Class ProviderQueries | CumulusRCM",
    "keywords": "Class ProviderQueries Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public sealed class ProviderQueries : Queries<Provider>, IProviderQueries, IQueries<Provider>, ICustomQueries Inheritance object Queries<Provider> ProviderQueries Implements IProviderQueries IQueries<Provider> ICustomQueries Inherited Members Queries<Provider>.GetAllAsync(string, int, int, string) Queries<Provider>.GetCountAsync(string) Queries<Provider>.GetAllDynamicAsync(IReadOnlyCollection<string>, string, int, int, string) Queries<Provider>.GetByModelAsync(Provider) Queries<Provider>.GetByPkAsync(string) Queries<Provider>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProviderQueries(IProviderReader) public ProviderQueries(IProviderReader providerReader) Parameters providerReader IProviderReader Methods GetEndPoints() public IEnumerable<(string endPoint, Delegate handler, string name)> GetEndPoints() Returns IEnumerable<(string endPoint, Delegate handler, string name)> GetProviderFacilitiesAsync(int) public Task<Response<Facility>> GetProviderFacilitiesAsync(int providerId) Parameters providerId int Returns Task<Response<Facility>>"
  },
  "api/Billing.DataAccess.ProviderReader.html": {
    "href": "api/Billing.DataAccess.ProviderReader.html",
    "title": "Class ProviderReader | CumulusRCM",
    "keywords": "Class ProviderReader Namespace Billing.DataAccess Assembly Billing.DataAccess.dll public sealed class ProviderReader : Reader<Provider>, IProviderReader, IReader<Provider>, ICustomReader Inheritance object Reader Reader<Provider> ProviderReader Implements IProviderReader IReader<Provider> ICustomReader Inherited Members Reader<Provider>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) Reader<Provider>.GetCountAsync(Filter) Reader<Provider>.GetAllAsync(Filter, int, int, OrderBy) Reader<Provider>.GetByPkAsync(string) Reader<Provider>.GetAllByPkAsync(IEnumerable<string>) Reader<Provider>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProviderReader(IDbConnectionManager, IDatabaseMapper) public ProviderReader(IDbConnectionManager dbConnectionService, IDatabaseMapper databaseMapper) Parameters dbConnectionService IDbConnectionManager databaseMapper IDatabaseMapper Methods GetProviderFacilitiesAsync(long) public Task<IEnumerable<Facility>> GetProviderFacilitiesAsync(long providerId) Parameters providerId long Returns Task<IEnumerable<Facility>> GetWithFacilitiesAsync(long) public Task<ProviderWithFacilities?> GetWithFacilitiesAsync(long providerId) Parameters providerId long Returns Task<ProviderWithFacilities>"
  },
  "api/Billing.DataAccess.html": {
    "href": "api/Billing.DataAccess.html",
    "title": "Namespace Billing.DataAccess | CumulusRCM",
    "keywords": "Namespace Billing.DataAccess Classes BillableServiceQueries BillableServiceReader BillingDataReaderFactory BillingDataService BillingDbMap FacilityQueries FacilityReader PatientQueries PatientReader ProviderQueries ProviderReader Interfaces IBillableServiceReader IFacilityReader IPatientReader IProviderReader"
  },
  "api/Billing.DataClient.BillingClientDataService.html": {
    "href": "api/Billing.DataClient.BillingClientDataService.html",
    "title": "Class BillingClientDataService | CumulusRCM",
    "keywords": "Class BillingClientDataService Namespace Billing.DataClient Assembly Billing.DataClient.dll public class BillingClientDataService : IBillingDataService, IDataService, IUnitOfWork Inheritance object BillingClientDataService Implements IBillingDataService IDataService IUnitOfWork Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillingClientDataService(ClientSaveStrategy, IDatabaseMapper) public BillingClientDataService(ClientSaveStrategy clientSaveStrategy, IDatabaseMapper databaseMapper) Parameters clientSaveStrategy ClientSaveStrategy databaseMapper IDatabaseMapper Properties QueuedItemsCount public int QueuedItemsCount { get; } Property Value int Methods AddCollection<T>(DataChangeKind, ICollection<T>) public void AddCollection<T>(DataChangeKind dataChangeKind, ICollection<T> entities) where T : class Parameters dataChangeKind DataChangeKind entities ICollection<T> Type Parameters T Add<T>(DataChangeKind, T) public void Add<T>(DataChangeKind dataChangeKind, T entity) where T : class Parameters dataChangeKind DataChangeKind entity T Type Parameters T GetQueries<T>() public virtual IQueries<T> GetQueries<T>() where T : class Returns IQueries<T> Type Parameters T Reset() public void Reset() SaveAsync() public Task<SaveResponse> SaveAsync() Returns Task<SaveResponse>"
  },
  "api/Billing.DataClient.ClientSaveStrategy.html": {
    "href": "api/Billing.DataClient.ClientSaveStrategy.html",
    "title": "Class ClientSaveStrategy | CumulusRCM",
    "keywords": "Class ClientSaveStrategy Namespace Billing.DataClient Assembly Billing.DataClient.dll public class ClientSaveStrategy : ISaveStrategy Inheritance object ClientSaveStrategy Implements ISaveStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ClientSaveStrategy(string, RefitSettings?) public ClientSaveStrategy(string apiAddress, RefitSettings? refitSettings = null) Parameters apiAddress string refitSettings RefitSettings Properties BaseAddress public string BaseAddress { get; } Property Value string RefitSettings public RefitSettings? RefitSettings { get; } Property Value RefitSettings Methods SaveAsync(IEnumerable<IDataChange>) public Task<SaveResponse> SaveAsync(IEnumerable<IDataChange> dataChanges) Parameters dataChanges IEnumerable<IDataChange> Returns Task<SaveResponse>"
  },
  "api/Billing.DataClient.html": {
    "href": "api/Billing.DataClient.html",
    "title": "Namespace Billing.DataClient | CumulusRCM",
    "keywords": "Namespace Billing.DataClient Classes BillingClientDataService ClientSaveStrategy"
  },
  "api/Billing.EndPoints.BillingEndpoints.html": {
    "href": "api/Billing.EndPoints.BillingEndpoints.html",
    "title": "Class BillingEndpoints | CumulusRCM",
    "keywords": "Class BillingEndpoints Namespace Billing.EndPoints Assembly Billing.EndPoints.dll public class BillingEndpoints : EndpointMapperBase Inheritance object EndpointMapperBase BillingEndpoints Inherited Members EndpointMapperBase.MapCrudEndpoint<T>(IEndpointRouteBuilder, IDataService, IQueries<T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods MapEndpoints(IEndpointRouteBuilder, IBillingDataService) public void MapEndpoints(IEndpointRouteBuilder routeBuilder, IBillingDataService billingDataService) Parameters routeBuilder IEndpointRouteBuilder billingDataService IBillingDataService"
  },
  "api/Billing.EndPoints.EndpointMapper.html": {
    "href": "api/Billing.EndPoints.EndpointMapper.html",
    "title": "Class EndpointMapper | CumulusRCM",
    "keywords": "Class EndpointMapper Namespace Billing.EndPoints Assembly Billing.EndPoints.dll public static class EndpointMapper Inheritance object EndpointMapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MapEndpoints(IEndpointRouteBuilder) public static void MapEndpoints(this IEndpointRouteBuilder endpoints) Parameters endpoints IEndpointRouteBuilder"
  },
  "api/Billing.EndPoints.MockDatabaseMigrator.html": {
    "href": "api/Billing.EndPoints.MockDatabaseMigrator.html",
    "title": "Class MockDatabaseMigrator | CumulusRCM",
    "keywords": "Class MockDatabaseMigrator Namespace Billing.EndPoints Assembly Billing.EndPoints.dll public class MockDatabaseMigrator : IMigrator Inheritance object MockDatabaseMigrator Implements IMigrator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods UpgradeDatabaseAsync() public Task<bool> UpgradeDatabaseAsync() Returns Task<bool>"
  },
  "api/Billing.EndPoints.Program.html": {
    "href": "api/Billing.EndPoints.Program.html",
    "title": "Class Program | CumulusRCM",
    "keywords": "Class Program Namespace Billing.EndPoints Assembly Billing.EndPoints.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods InitializeAsync(IEndpointRouteBuilder) public static Task InitializeAsync(IEndpointRouteBuilder routeBuilder) Parameters routeBuilder IEndpointRouteBuilder Returns Task Main(string[]) public static Task Main(string[] args) Parameters args string[] Returns Task"
  },
  "api/Billing.EndPoints.html": {
    "href": "api/Billing.EndPoints.html",
    "title": "Namespace Billing.EndPoints | CumulusRCM",
    "keywords": "Namespace Billing.EndPoints Classes BillingEndpoints EndpointMapper MockDatabaseMigrator Program"
  },
  "api/Billing.Fake.DataAccess.FakeBillableServiceReader.html": {
    "href": "api/Billing.Fake.DataAccess.FakeBillableServiceReader.html",
    "title": "Class FakeBillableServiceReader | CumulusRCM",
    "keywords": "Class FakeBillableServiceReader Namespace Billing.Fake.DataAccess Assembly Billing.Fake.DataAccess.dll public sealed class FakeBillableServiceReader : FakeBillingReader<BillableService>, IBillableServiceReader, IReader<BillableService>, ICustomReader Inheritance object FakeBillingReader<BillableService> FakeBillableServiceReader Implements IBillableServiceReader IReader<BillableService> ICustomReader Inherited Members FakeBillingReader<BillableService>.GetAllAsync(Filter, int, int, OrderBy) FakeBillingReader<BillableService>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) FakeBillingReader<BillableService>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) FakeBillingReader<BillableService>.GetByPkAsync(string) FakeBillingReader<BillableService>.GetCountAsync(Filter) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakeBillableServiceReader(FakeBillingDataFactory) public FakeBillableServiceReader(FakeBillingDataFactory billingDataFactory) Parameters billingDataFactory FakeBillingDataFactory Methods GetBillableServicesWithLookupsAsync(Filter) public Task<IEnumerable<BillableServiceWithLookups>> GetBillableServicesWithLookupsAsync(Filter filter) Parameters filter Filter Returns Task<IEnumerable<BillableServiceWithLookups>>"
  },
  "api/Billing.Fake.DataAccess.FakeBillingDataFactory.html": {
    "href": "api/Billing.Fake.DataAccess.FakeBillingDataFactory.html",
    "title": "Class FakeBillingDataFactory | CumulusRCM",
    "keywords": "Class FakeBillingDataFactory Namespace Billing.Fake.DataAccess Assembly Billing.Fake.DataAccess.dll public class FakeBillingDataFactory Inheritance object FakeBillingDataFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakeBillingDataFactory(int) public FakeBillingDataFactory(int collectionSize = 10) Parameters collectionSize int Methods GetItems<T>() public List<T> GetItems<T>() where T : class Returns List<T> Type Parameters T GetMockAppUsers() public List<AppUser> GetMockAppUsers() Returns List<AppUser>"
  },
  "api/Billing.Fake.DataAccess.FakeBillingReader-1.html": {
    "href": "api/Billing.Fake.DataAccess.FakeBillingReader-1.html",
    "title": "Class FakeBillingReader<T> | CumulusRCM",
    "keywords": "Class FakeBillingReader<T> Namespace Billing.Fake.DataAccess Assembly Billing.Fake.DataAccess.dll public class FakeBillingReader<T> : IReader<T> where T : class Type Parameters T Inheritance object FakeBillingReader<T> Implements IReader<T> Derived FakeBillableServiceReader FakeFacilityReader FakePatientReader FakeProviderReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakeBillingReader(FakeBillingDataFactory) public FakeBillingReader(FakeBillingDataFactory fakeBillingDataFactory) Parameters fakeBillingDataFactory FakeBillingDataFactory Fields fakeBillingDataFactory protected readonly FakeBillingDataFactory fakeBillingDataFactory Field Value FakeBillingDataFactory Methods GetAllAsync(Filter?, int, int, OrderBy?) public Task<IReadOnlyCollection<T>> GetAllAsync(Filter? filter = null, int pageSize = 0, int pageNum = 0, OrderBy? orderBy = null) Parameters filter Filter pageSize int pageNum int orderBy OrderBy Returns Task<IReadOnlyCollection<T>> GetAllDynamicAsync(IReadOnlyCollection<string>, Filter?, int, int, OrderBy?) public Task<IReadOnlyCollection<dynamic>> GetAllDynamicAsync(IReadOnlyCollection<string> columns, Filter? filter = null, int pageSize = 0, int pageNum = 0, OrderBy? orderBy = null) Parameters columns IReadOnlyCollection<string> filter Filter pageSize int pageNum int orderBy OrderBy Returns Task<IReadOnlyCollection<dynamic>> GetByPkAsync(string) public Task<T?> GetByPkAsync(string pkValue) Parameters pkValue string Returns Task<T> GetByPkDynamicAsync(string, IReadOnlyCollection<string>) public Task<dynamic?> GetByPkDynamicAsync(string pkValue, IReadOnlyCollection<string> columns) Parameters pkValue string columns IReadOnlyCollection<string> Returns Task<dynamic> GetCountAsync(Filter?) public Task<int> GetCountAsync(Filter? filter = null) Parameters filter Filter Returns Task<int>"
  },
  "api/Billing.Fake.DataAccess.FakeBillingReaderFactory.html": {
    "href": "api/Billing.Fake.DataAccess.FakeBillingReaderFactory.html",
    "title": "Class FakeBillingReaderFactory | CumulusRCM",
    "keywords": "Class FakeBillingReaderFactory Namespace Billing.Fake.DataAccess Assembly Billing.Fake.DataAccess.dll public class FakeBillingReaderFactory : IReaderFactory Inheritance object FakeBillingReaderFactory Implements IReaderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakeBillingReaderFactory(int) public FakeBillingReaderFactory(int collectionSize = 10) Parameters collectionSize int Methods GetReader<T>() public IReader<T> GetReader<T>() where T : class Returns IReader<T> Type Parameters T"
  },
  "api/Billing.Fake.DataAccess.FakeFacilityReader.html": {
    "href": "api/Billing.Fake.DataAccess.FakeFacilityReader.html",
    "title": "Class FakeFacilityReader | CumulusRCM",
    "keywords": "Class FakeFacilityReader Namespace Billing.Fake.DataAccess Assembly Billing.Fake.DataAccess.dll public sealed class FakeFacilityReader : FakeBillingReader<Facility>, IFacilityReader, IReader<Facility>, ICustomReader Inheritance object FakeBillingReader<Facility> FakeFacilityReader Implements IFacilityReader IReader<Facility> ICustomReader Inherited Members FakeBillingReader<Facility>.GetAllAsync(Filter, int, int, OrderBy) FakeBillingReader<Facility>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) FakeBillingReader<Facility>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) FakeBillingReader<Facility>.GetByPkAsync(string) FakeBillingReader<Facility>.GetCountAsync(Filter) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakeFacilityReader(FakeBillingDataFactory) public FakeFacilityReader(FakeBillingDataFactory billingDataFactory) Parameters billingDataFactory FakeBillingDataFactory Methods GetFacilityProvidersAsync(long) public Task<IEnumerable<Provider>> GetFacilityProvidersAsync(long facilityId) Parameters facilityId long Returns Task<IEnumerable<Provider>>"
  },
  "api/Billing.Fake.DataAccess.FakePatientReader.html": {
    "href": "api/Billing.Fake.DataAccess.FakePatientReader.html",
    "title": "Class FakePatientReader | CumulusRCM",
    "keywords": "Class FakePatientReader Namespace Billing.Fake.DataAccess Assembly Billing.Fake.DataAccess.dll public sealed class FakePatientReader : FakeBillingReader<Patient>, IPatientReader, IReader<Patient>, ICustomReader Inheritance object FakeBillingReader<Patient> FakePatientReader Implements IPatientReader IReader<Patient> ICustomReader Inherited Members FakeBillingReader<Patient>.GetAllAsync(Filter, int, int, OrderBy) FakeBillingReader<Patient>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) FakeBillingReader<Patient>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) FakeBillingReader<Patient>.GetByPkAsync(string) FakeBillingReader<Patient>.GetCountAsync(Filter) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakePatientReader(FakeBillingDataFactory) public FakePatientReader(FakeBillingDataFactory billingDataFactory) Parameters billingDataFactory FakeBillingDataFactory Methods GetPatientPolicyAsync(long, long, string) public Task<IEnumerable<Policy>> GetPatientPolicyAsync(long patientId, long insuranceCompanyId, string policyNumber) Parameters patientId long insuranceCompanyId long policyNumber string Returns Task<IEnumerable<Policy>> GetPatientServiceLocationsAsync(long) public Task<IEnumerable<ServiceLocation>> GetPatientServiceLocationsAsync(long patientId) Parameters patientId long Returns Task<IEnumerable<ServiceLocation>>"
  },
  "api/Billing.Fake.DataAccess.FakeProviderReader.html": {
    "href": "api/Billing.Fake.DataAccess.FakeProviderReader.html",
    "title": "Class FakeProviderReader | CumulusRCM",
    "keywords": "Class FakeProviderReader Namespace Billing.Fake.DataAccess Assembly Billing.Fake.DataAccess.dll public sealed class FakeProviderReader : FakeBillingReader<Provider>, IProviderReader, IReader<Provider>, ICustomReader Inheritance object FakeBillingReader<Provider> FakeProviderReader Implements IProviderReader IReader<Provider> ICustomReader Inherited Members FakeBillingReader<Provider>.GetAllAsync(Filter, int, int, OrderBy) FakeBillingReader<Provider>.GetAllDynamicAsync(IReadOnlyCollection<string>, Filter, int, int, OrderBy) FakeBillingReader<Provider>.GetByPkDynamicAsync(string, IReadOnlyCollection<string>) FakeBillingReader<Provider>.GetByPkAsync(string) FakeBillingReader<Provider>.GetCountAsync(Filter) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakeProviderReader(FakeBillingDataFactory) public FakeProviderReader(FakeBillingDataFactory billingDataFactory) Parameters billingDataFactory FakeBillingDataFactory Methods GetProviderFacilitiesAsync(long) public Task<IEnumerable<Facility>> GetProviderFacilitiesAsync(long providerId) Parameters providerId long Returns Task<IEnumerable<Facility>> GetWithFacilitiesAsync(long) public Task<ProviderWithFacilities?> GetWithFacilitiesAsync(long providerId) Parameters providerId long Returns Task<ProviderWithFacilities>"
  },
  "api/Billing.Fake.DataAccess.html": {
    "href": "api/Billing.Fake.DataAccess.html",
    "title": "Namespace Billing.Fake.DataAccess | CumulusRCM",
    "keywords": "Namespace Billing.Fake.DataAccess Classes FakeBillableServiceReader FakeBillingDataFactory FakeBillingReaderFactory FakeBillingReader<T> FakeFacilityReader FakePatientReader FakeProviderReader"
  },
  "api/Billing.ViewModels.BillableServiceDataReader.html": {
    "href": "api/Billing.ViewModels.BillableServiceDataReader.html",
    "title": "Class BillableServiceDataReader | CumulusRCM",
    "keywords": "Class BillableServiceDataReader Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class BillableServiceDataReader : IViewModelDataReader<ProviderBillableServices> Inheritance object BillableServiceDataReader Implements IViewModelDataReader<ProviderBillableServices> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillableServiceDataReader(IBillingDataService) public BillableServiceDataReader(IBillingDataService dataService) Parameters dataService IBillingDataService Properties OrderBy public OrderBy? OrderBy { get; init; } Property Value OrderBy Methods GetDataAsync(Filter?, int, int, OrderBy?) public Task<Response<ProviderBillableServices>> GetDataAsync(Filter? searchFilter, int pageSize, int currentPage, OrderBy? orderBy = null) Parameters searchFilter Filter pageSize int currentPage int orderBy OrderBy Returns Task<Response<ProviderBillableServices>>"
  },
  "api/Billing.ViewModels.BillableServiceViewModel.html": {
    "href": "api/Billing.ViewModels.BillableServiceViewModel.html",
    "title": "Class BillableServiceViewModel | CumulusRCM",
    "keywords": "Class BillableServiceViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class BillableServiceViewModel : ViewModelIdBase<BillableServiceWithLookups>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<BillableServiceWithLookups> ViewModelIdBase<BillableServiceWithLookups> BillableServiceViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<BillableServiceWithLookups>.Id ViewModelBase<BillableServiceWithLookups>.Model ViewModelBase<BillableServiceWithLookups>.CancelChanges() ViewModelBase<BillableServiceWithLookups>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors BillableServiceViewModel(IBillingDataService, BillableServiceWithLookups) public BillableServiceViewModel(IBillingDataService billingDataService, BillableServiceWithLookups model) Parameters billingDataService IBillingDataService model BillableServiceWithLookups Properties BillableService [Reactive] public BillableService BillableService { get; } Property Value BillableService CptCode public CptCode CptCode { get; set; } Property Value CptCode Diagnoses public ICollection<Diagnosis> Diagnoses { get; } Property Value ICollection<Diagnosis> Patient public Patient Patient { get; set; } Property Value Patient Provider public Provider Provider { get; } Property Value Provider ServiceLocation public ServiceLocation? ServiceLocation { get; } Property Value ServiceLocation ServiceLocations public SelectedCache<ServiceLocation, long> ServiceLocations { get; } Property Value SelectedCache<ServiceLocation, long> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel() LoadServiceLocationsAsync() public Task LoadServiceLocationsAsync() Returns Task"
  },
  "api/Billing.ViewModels.ChooserViewModel-2.html": {
    "href": "api/Billing.ViewModels.ChooserViewModel-2.html",
    "title": "Class ChooserViewModel<T, TKey> | CumulusRCM",
    "keywords": "Class ChooserViewModel<T, TKey> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public abstract class ChooserViewModel<T, TKey> : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger where T : class where TKey : notnull Type Parameters T TKey Inheritance object ReactiveObject ChooserViewModel<T, TKey> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Derived CptCodeChooserViewModel DiagnosesChooserViewModel Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ChooserViewModel(Func<T, TKey>, bool) protected ChooserViewModel(Func<T, TKey> keySelector, bool isMultiSelect = true) Parameters keySelector Func<T, TKey> isMultiSelect bool Properties FavoriteItems public ReadOnlyObservableCollection<SelectableItem<T>> FavoriteItems { get; } Property Value ReadOnlyObservableCollection<SelectableItem<T>> SelectedItem [Reactive] public T? SelectedItem { get; set; } Property Value T SelectedItemChanged protected IObservable<T?> SelectedItemChanged { get; } Property Value IObservable<T> SelectedItems public ReadOnlyObservableCollection<T> SelectedItems { get; } Property Value ReadOnlyObservableCollection<T> Methods ChangeItemIsSelected(T, bool) public void ChangeItemIsSelected(T item, bool isSelected) Parameters item T isSelected bool ChooseItem(T) public void ChooseItem(T item) Parameters item T LoadFavorites(IEnumerable<T>) protected void LoadFavorites(IEnumerable<T> favorites) Parameters favorites IEnumerable<T> LoadSelected(IEnumerable<T>) protected void LoadSelected(IEnumerable<T> selected) Parameters selected IEnumerable<T> UnChooseItem(T) public void UnChooseItem(T item) Parameters item T"
  },
  "api/Billing.ViewModels.ClearinghouseViewModel.html": {
    "href": "api/Billing.ViewModels.ClearinghouseViewModel.html",
    "title": "Class ClearinghouseViewModel | CumulusRCM",
    "keywords": "Class ClearinghouseViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class ClearinghouseViewModel : ViewModelIdBase<Clearinghouse>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<Clearinghouse> ViewModelIdBase<Clearinghouse> ClearinghouseViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<Clearinghouse>.Id ViewModelBase<Clearinghouse>.Model ViewModelBase<Clearinghouse>.CancelChanges() ViewModelBase<Clearinghouse>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ClearinghouseViewModel(Clearinghouse) public ClearinghouseViewModel(Clearinghouse clearinghouse) Parameters clearinghouse Clearinghouse Properties Name [Reactive] public string Name { get; set; } Property Value string Validator public ValidatorBase<ClearinghouseViewModel> Validator { get; } Property Value ValidatorBase<ClearinghouseViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.ClearinghousesViewModel.html": {
    "href": "api/Billing.ViewModels.ClearinghousesViewModel.html",
    "title": "Class ClearinghousesViewModel | CumulusRCM",
    "keywords": "Class ClearinghousesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class ClearinghousesViewModel : CollectionViewModelBase<ClearinghouseViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<ClearinghouseViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<ClearinghouseViewModel, long> ClearinghousesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<ClearinghouseViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<ClearinghouseViewModel, long>.CurrentPage CollectionViewModelBase<ClearinghouseViewModel, long>.ItemsCount CollectionViewModelBase<ClearinghouseViewModel, long>.SelectedItem CollectionViewModelBase<ClearinghouseViewModel, long>.PageCount CollectionViewModelBase<ClearinghouseViewModel, long>.IsPagingRequired CollectionViewModelBase<ClearinghouseViewModel, long>.ItemsLoaded CollectionViewModelBase<ClearinghouseViewModel, long>.IsItemSelected CollectionViewModelBase<ClearinghouseViewModel, long>.ItemIsSelected CollectionViewModelBase<ClearinghouseViewModel, long>.Activator CollectionViewModelBase<ClearinghouseViewModel, long>.PageSize CollectionViewModelBase<ClearinghouseViewModel, long>.Edit CollectionViewModelBase<ClearinghouseViewModel, long>.EditInteraction CollectionViewModelBase<ClearinghouseViewModel, long>.SearchResults CollectionViewModelBase<ClearinghouseViewModel, long>.LoadItems() CollectionViewModelBase<ClearinghouseViewModel, long>.SelectItem(ClearinghouseViewModel) CollectionViewModelBase<ClearinghouseViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ClearinghousesViewModel(IBillingDataService) public ClearinghousesViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties ClearinghouseNameFilterExpression public ReactiveFilterExpression<Clearinghouse> ClearinghouseNameFilterExpression { get; } Property Value ReactiveFilterExpression<Clearinghouse> Methods AddNewItem() public override ClearinghouseViewModel AddNewItem() Returns ClearinghouseViewModel"
  },
  "api/Billing.ViewModels.CodeSearchViewModel-1.html": {
    "href": "api/Billing.ViewModels.CodeSearchViewModel-1.html",
    "title": "Class CodeSearchViewModel<T> | CumulusRCM",
    "keywords": "Class CodeSearchViewModel<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public abstract class CodeSearchViewModel<T> : CollectionViewModelBase<T, string>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<T>, IActivatableViewModel where T : class Type Parameters T Inheritance object ReactiveObject CollectionViewModelBase<T, string> CodeSearchViewModel<T> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<T> IActivatableViewModel Inherited Members CollectionViewModelBase<T, string>.CurrentPage CollectionViewModelBase<T, string>.ItemsCount CollectionViewModelBase<T, string>.SelectedItem CollectionViewModelBase<T, string>.PageCount CollectionViewModelBase<T, string>.IsPagingRequired CollectionViewModelBase<T, string>.ItemsLoaded CollectionViewModelBase<T, string>.IsItemSelected CollectionViewModelBase<T, string>.ItemIsSelected CollectionViewModelBase<T, string>.Activator CollectionViewModelBase<T, string>.PageSize CollectionViewModelBase<T, string>.Edit CollectionViewModelBase<T, string>.EditInteraction CollectionViewModelBase<T, string>.SearchResults CollectionViewModelBase<T, string>.ViewModelDataWriter CollectionViewModelBase<T, string>.ViewModelDataReader CollectionViewModelBase<T, string>.searchResultsCache CollectionViewModelBase<T, string>.dataService CollectionViewModelBase<T, string>.reactiveFilter CollectionViewModelBase<T, string>.loadData CollectionViewModelBase<T, string>.LoadResultCache(Response<T>, bool) CollectionViewModelBase<T, string>.LoadItems() CollectionViewModelBase<T, string>.getItemsAsync(int, Filter) CollectionViewModelBase<T, string>.SelectItem(T) CollectionViewModelBase<T, string>.AddNewItem() CollectionViewModelBase<T, string>.UpdateItemAsync(T, bool) CollectionViewModelBase<T, string>.AddReactiveFilterExpressions(IEnumerable<ReactiveFilterExpression>, bool) CollectionViewModelBase<T, string>.AddFilterExpressions(IEnumerable<ConnectedExpression>, bool) CollectionViewModelBase<T, string>.AddFilterExpressions(FilterExpression, bool) ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors CodeSearchViewModel(Func<T, string>, IBillingDataService) protected CodeSearchViewModel(Func<T, string> keySelector, IBillingDataService billingDataService) Parameters keySelector Func<T, string> billingDataService IBillingDataService Fields FILTER_EXPRESSION_NAME protected const string FILTER_EXPRESSION_NAME = \"SearchText\" Field Value string Methods SearchAsync(string) public Task<IEnumerable<T>> SearchAsync(string searchText) Parameters searchText string Returns Task<IEnumerable<T>>"
  },
  "api/Billing.ViewModels.CollectionViewModelBase-2.html": {
    "href": "api/Billing.ViewModels.CollectionViewModelBase-2.html",
    "title": "Class CollectionViewModelBase<T, TKey> | CumulusRCM",
    "keywords": "Class CollectionViewModelBase<T, TKey> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public abstract class CollectionViewModelBase<T, TKey> : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<T>, IActivatableViewModel where T : class where TKey : notnull Type Parameters T TKey Inheritance object ReactiveObject CollectionViewModelBase<T, TKey> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<T> IActivatableViewModel Derived ClearinghousesViewModel CodeSearchViewModel<T> CptCodesViewModel DiagnosesViewModel FacilitiesViewModel FacilityProvidersViewModel InsuranceCompaniesViewModel PatientAddressesViewModel PatientPhonesViewModel PatientPoliciesViewModel PatientsViewModel PracticeAddressesViewModel PracticePhonesViewModel PracticesViewModel ProviderBillableServicesViewModel ProvidersViewModel Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors CollectionViewModelBase(Func<T, TKey>, IBillingDataService) protected CollectionViewModelBase(Func<T, TKey> keySelector, IBillingDataService dataService) Parameters keySelector Func<T, TKey> dataService IBillingDataService Fields dataService protected readonly IBillingDataService dataService Field Value IBillingDataService loadData protected readonly IObservable<Response<T>> loadData Field Value IObservable<Response<T>> reactiveFilter protected readonly ReactiveFilter reactiveFilter Field Value ReactiveFilter searchResultsCache protected readonly SourceCache<T, TKey> searchResultsCache Field Value SourceCache<T, TKey> Properties Activator Gets the Activator which will be used by the View when Activation/Deactivation occurs. public ViewModelActivator Activator { get; } Property Value ViewModelActivator CurrentPage [Reactive] public int CurrentPage { get; set; } Property Value int Edit public ReactiveCommand<T, bool> Edit { get; } Property Value ReactiveCommand<T, bool> EditInteraction public Interaction<T, bool> EditInteraction { get; } Property Value Interaction<T, bool> IsItemSelected [ObservableAsProperty] public bool IsItemSelected { get; } Property Value bool IsPagingRequired [ObservableAsProperty] public bool IsPagingRequired { get; } Property Value bool ItemIsSelected public IObservable<bool> ItemIsSelected { get; } Property Value IObservable<bool> ItemsCount [Reactive] public int ItemsCount { get; set; } Property Value int ItemsLoaded public IObservable<Unit> ItemsLoaded { get; } Property Value IObservable<Unit> PageCount [ObservableAsProperty] public int PageCount { get; } Property Value int PageSize public int PageSize { get; set; } Property Value int SearchResults public ReadOnlyObservableCollection<T> SearchResults { get; } Property Value ReadOnlyObservableCollection<T> SelectedItem [Reactive] public T? SelectedItem { get; set; } Property Value T ViewModelDataReader protected IViewModelDataReader<T> ViewModelDataReader { get; init; } Property Value IViewModelDataReader<T> ViewModelDataWriter protected IViewModelDataWriter<T>? ViewModelDataWriter { get; init; } Property Value IViewModelDataWriter<T> Methods AddFilterExpressions(FilterExpression, bool) protected void AddFilterExpressions(FilterExpression filterExpression, bool isUseNewSegment = false) Parameters filterExpression FilterExpression isUseNewSegment bool AddFilterExpressions(IEnumerable<ConnectedExpression>, bool) protected void AddFilterExpressions(IEnumerable<ConnectedExpression> connectedExpressions, bool isUseNewSegment = false) Parameters connectedExpressions IEnumerable<ConnectedExpression> isUseNewSegment bool AddNewItem() public virtual T AddNewItem() Returns T AddReactiveFilterExpressions(IEnumerable<ReactiveFilterExpression>, bool) protected void AddReactiveFilterExpressions(IEnumerable<ReactiveFilterExpression> reactiveFilterExpressions, bool isUseNewSegment = false) Parameters reactiveFilterExpressions IEnumerable<ReactiveFilterExpression> isUseNewSegment bool LoadItems() public void LoadItems() LoadResultCache(Response<T>, bool) protected void LoadResultCache(Response<T> response, bool isResetPageCount) Parameters response Response<T> isResetPageCount bool SelectItem(T) public void SelectItem(T item) Parameters item T UpdateItemAsync(T, bool) protected Task<SaveResponse> UpdateItemAsync(T item, bool isNew) Parameters item T isNew bool Returns Task<SaveResponse> getItemsAsync(int, Filter?) protected Task<Response<T>> getItemsAsync(int pageNumber = 0, Filter? filter = null) Parameters pageNumber int filter Filter Returns Task<Response<T>>"
  },
  "api/Billing.ViewModels.Controls.MultiSelectCache-2.html": {
    "href": "api/Billing.ViewModels.Controls.MultiSelectCache-2.html",
    "title": "Class MultiSelectCache<T, TKey> | CumulusRCM",
    "keywords": "Class MultiSelectCache<T, TKey> Namespace Billing.ViewModels.Controls Assembly Billing.ViewModels.dll public class MultiSelectCache<T, TKey> : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, IDisposable where T : class where TKey : notnull Type Parameters T TKey Inheritance object ReactiveObject MultiSelectCache<T, TKey> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger IDisposable Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors MultiSelectCache(Func<T, TKey>, IComparer<T>?) public MultiSelectCache(Func<T, TKey> keyPropertyExpression, IComparer<T>? comparer = null) Parameters keyPropertyExpression Func<T, TKey> comparer IComparer<T> Properties Filter public Func<T, bool> Filter { get; set; } Property Value Func<T, bool> HasBeenLoaded [ObservableAsProperty] public bool HasBeenLoaded { get; } Property Value bool IsItemSelected [ObservableAsProperty] public bool IsItemSelected { get; } Property Value bool ItemIsSelected public IObservable<bool> ItemIsSelected { get; } Property Value IObservable<bool> Items public ReadOnlyObservableCollection<SelectableItem<T>> Items { get; } Property Value ReadOnlyObservableCollection<SelectableItem<T>> ItemsCount [ObservableAsProperty] public int ItemsCount { get; } Property Value int ItemsCountChanged public IObservable<int> ItemsCountChanged { get; } Property Value IObservable<int> Loaded public IObservable<ReadOnlyCollection<SelectableItem<T>>> Loaded { get; } Property Value IObservable<ReadOnlyCollection<SelectableItem<T>>> ReSort public Subject<Unit> ReSort { get; } Property Value Subject<Unit> Selected public IObservable<SelectableItem<T>?> Selected { get; } Property Value IObservable<SelectableItem<T>> SelectedItem [Reactive] public SelectableItem<T>? SelectedItem { get; set; } Property Value SelectableItem<T> SelectedItems public ReadOnlyObservableCollection<T> SelectedItems { get; } Property Value ReadOnlyObservableCollection<T> Methods AddOrUpdate(T, bool) public void AddOrUpdate(T item, bool selectAfterAdd = true) Parameters item T selectAfterAdd bool Clear() public void Clear() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Load(Response<T>) public void Load(Response<T> response) Parameters response Response<T> Load(IEnumerable<T>, TKey?, T?) public void Load(IEnumerable<T> newItems, TKey? initiallySelectedKey = default, T? initiallySelectedItem = null) Parameters newItems IEnumerable<T> initiallySelectedKey TKey initiallySelectedItem T Load(IObservable<Response<T>>) public void Load(IObservable<Response<T>> response) Parameters response IObservable<Response<T>> Load(IObservable<IEnumerable<T>>, TKey?, bool?) public void Load(IObservable<IEnumerable<T>> newItems, TKey? initiallySelectedKey = default, bool? isFirstItemSelected = false) Parameters newItems IObservable<IEnumerable<T>> initiallySelectedKey TKey isFirstItemSelected bool? Remove(T) public void Remove(T item) Parameters item T RemoveSelectedItem() public void RemoveSelectedItem() Update(T) public void Update(T item) Parameters item T"
  },
  "api/Billing.ViewModels.Controls.NavigationMenuItem.html": {
    "href": "api/Billing.ViewModels.Controls.NavigationMenuItem.html",
    "title": "Class NavigationMenuItem | CumulusRCM",
    "keywords": "Class NavigationMenuItem Namespace Billing.ViewModels.Controls Assembly Billing.ViewModels.dll public class NavigationMenuItem Inheritance object NavigationMenuItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors NavigationMenuItem(string, Func<ReactiveObject>) public NavigationMenuItem(string caption, Func<ReactiveObject> viewModelFactory) Parameters caption string viewModelFactory Func<ReactiveObject> Properties Caption public string Caption { get; } Property Value string ViewModelFactory public Func<ReactiveObject> ViewModelFactory { get; } Property Value Func<ReactiveObject>"
  },
  "api/Billing.ViewModels.Controls.SelectableItem-1.html": {
    "href": "api/Billing.ViewModels.Controls.SelectableItem-1.html",
    "title": "Class SelectableItem<T> | CumulusRCM",
    "keywords": "Class SelectableItem<T> Namespace Billing.ViewModels.Controls Assembly Billing.ViewModels.dll public class SelectableItem<T> : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Type Parameters T Inheritance object ReactiveObject SelectableItem<T> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SelectableItem(T, bool) public SelectableItem(T item, bool initialSelected = false) Parameters item T initialSelected bool Properties IsSelected public bool IsSelected { get; set; } Property Value bool Item public T Item { get; } Property Value T OnSelectedChanged public Action<T, bool>? OnSelectedChanged { get; set; } Property Value Action<T, bool>"
  },
  "api/Billing.ViewModels.Controls.SelectedCache-2.html": {
    "href": "api/Billing.ViewModels.Controls.SelectedCache-2.html",
    "title": "Class SelectedCache<T, TKey> | CumulusRCM",
    "keywords": "Class SelectedCache<T, TKey> Namespace Billing.ViewModels.Controls Assembly Billing.ViewModels.dll public class SelectedCache<T, TKey> : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, IDisposable where T : class where TKey : notnull Type Parameters T TKey Inheritance object ReactiveObject SelectedCache<T, TKey> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger IDisposable Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SelectedCache(Func<T, TKey>, IComparer<T>?) public SelectedCache(Func<T, TKey> keyPropertyExpression, IComparer<T>? comparer = null) Parameters keyPropertyExpression Func<T, TKey> comparer IComparer<T> Properties Filter public Func<T, bool> Filter { get; set; } Property Value Func<T, bool> HasBeenLoaded [ObservableAsProperty] public bool HasBeenLoaded { get; } Property Value bool IsItemSelected [ObservableAsProperty] public bool IsItemSelected { get; } Property Value bool ItemIsSelected public IObservable<bool> ItemIsSelected { get; } Property Value IObservable<bool> Items public ReadOnlyObservableCollection<T> Items { get; } Property Value ReadOnlyObservableCollection<T> ItemsCount [ObservableAsProperty] public int ItemsCount { get; } Property Value int ItemsCountChanged public IObservable<int> ItemsCountChanged { get; } Property Value IObservable<int> Loaded public IObservable<ReadOnlyCollection<T>> Loaded { get; } Property Value IObservable<ReadOnlyCollection<T>> ReSort public Subject<Unit> ReSort { get; } Property Value Subject<Unit> Selected public IObservable<T?> Selected { get; } Property Value IObservable<T> SelectedItem [Reactive] public T? SelectedItem { get; set; } Property Value T Methods AddOrUpdate(T, bool) public void AddOrUpdate(T item, bool selectAfterAdd = true) Parameters item T selectAfterAdd bool Clear() public void Clear() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Load(Response<T>) public void Load(Response<T> response) Parameters response Response<T> Load(IEnumerable<T>, TKey?, T?) public void Load(IEnumerable<T> newItems, TKey? initiallySelectedKey = default, T? initiallySelectedItem = null) Parameters newItems IEnumerable<T> initiallySelectedKey TKey initiallySelectedItem T Load(IObservable<Response<T>>) public void Load(IObservable<Response<T>> response) Parameters response IObservable<Response<T>> Load(IObservable<IEnumerable<T>>, TKey?, bool?) public void Load(IObservable<IEnumerable<T>> newItems, TKey? initiallySelectedKey = default, bool? isFirstItemSelected = false) Parameters newItems IObservable<IEnumerable<T>> initiallySelectedKey TKey isFirstItemSelected bool? LoadAsync(Func<Task<Response<T>>>) public Task LoadAsync(Func<Task<Response<T>>> loadAsync) Parameters loadAsync Func<Task<Response<T>>> Returns Task Remove(T) public void Remove(T item) Parameters item T RemoveSelectedItem() public void RemoveSelectedItem() Update(T) public void Update(T item) Parameters item T"
  },
  "api/Billing.ViewModels.Controls.SelectedList-1.html": {
    "href": "api/Billing.ViewModels.Controls.SelectedList-1.html",
    "title": "Class SelectedList<T> | CumulusRCM",
    "keywords": "Class SelectedList<T> Namespace Billing.ViewModels.Controls Assembly Billing.ViewModels.dll public class SelectedList<T> : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, IDisposable where T : class Type Parameters T Inheritance object ReactiveObject SelectedList<T> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger IDisposable Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SelectedList(IComparer<T>?) public SelectedList(IComparer<T>? comparer = null) Parameters comparer IComparer<T> Properties Filter public Func<T, bool> Filter { get; set; } Property Value Func<T, bool> HasBeenLoaded [ObservableAsProperty] public bool HasBeenLoaded { get; } Property Value bool IsItemSelected [ObservableAsProperty] public bool IsItemSelected { get; } Property Value bool ItemIsSelected public IObservable<bool> ItemIsSelected { get; } Property Value IObservable<bool> Items public ReadOnlyObservableCollection<T> Items { get; } Property Value ReadOnlyObservableCollection<T> ItemsCount [ObservableAsProperty] public int ItemsCount { get; } Property Value int ItemsCountChanged public IObservable<int> ItemsCountChanged { get; } Property Value IObservable<int> Loaded public IObservable<ReadOnlyCollection<T>> Loaded { get; } Property Value IObservable<ReadOnlyCollection<T>> OnItemAdded public Action<T>? OnItemAdded { get; set; } Property Value Action<T> OnItemRemoved public Action<T>? OnItemRemoved { get; set; } Property Value Action<T> ReSort public Subject<Unit> ReSort { get; } Property Value Subject<Unit> Selected public IObservable<T?> Selected { get; } Property Value IObservable<T> SelectedItem [Reactive] public T? SelectedItem { get; set; } Property Value T Methods Add(T, bool) public void Add(T item, bool selectAfterAdd = true) Parameters item T selectAfterAdd bool AddRange(IEnumerable<T>) public void AddRange(IEnumerable<T> newItems) Parameters newItems IEnumerable<T> Clear() public void Clear() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Load(Response<T>) public void Load(Response<T> response) Parameters response Response<T> Load(IEnumerable<T>, T?) public void Load(IEnumerable<T> newItems, T? initiallySelectedItem = null) Parameters newItems IEnumerable<T> initiallySelectedItem T Load(IObservable<Response<T>>) public void Load(IObservable<Response<T>> response) Parameters response IObservable<Response<T>> Load(IObservable<IEnumerable<T>>, bool?) public void Load(IObservable<IEnumerable<T>> newItems, bool? isFirstItemSelected = false) Parameters newItems IObservable<IEnumerable<T>> isFirstItemSelected bool? LoadAsync(Func<Task<Response<T>>>) public Task LoadAsync(Func<Task<Response<T>>> loadAsync) Parameters loadAsync Func<Task<Response<T>>> Returns Task Remove(T) public void Remove(T item) Parameters item T RemoveSelectedItem() public void RemoveSelectedItem() Update(T) public void Update(T item) Parameters item T"
  },
  "api/Billing.ViewModels.Controls.html": {
    "href": "api/Billing.ViewModels.Controls.html",
    "title": "Namespace Billing.ViewModels.Controls | CumulusRCM",
    "keywords": "Namespace Billing.ViewModels.Controls Classes MultiSelectCache<T, TKey> NavigationMenuItem SelectableItem<T> SelectedCache<T, TKey> SelectedList<T>"
  },
  "api/Billing.ViewModels.CptCodeChooserViewModel.html": {
    "href": "api/Billing.ViewModels.CptCodeChooserViewModel.html",
    "title": "Class CptCodeChooserViewModel | CumulusRCM",
    "keywords": "Class CptCodeChooserViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class CptCodeChooserViewModel : ChooserViewModel<CptCode, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject ChooserViewModel<CptCode, long> CptCodeChooserViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ChooserViewModel<CptCode, long>.SelectedItems ChooserViewModel<CptCode, long>.SelectedItem ChooserViewModel<CptCode, long>.SelectedItemChanged ChooserViewModel<CptCode, long>.FavoriteItems ChooserViewModel<CptCode, long>.LoadFavorites(IEnumerable<CptCode>) ChooserViewModel<CptCode, long>.LoadSelected(IEnumerable<CptCode>) ChooserViewModel<CptCode, long>.ChooseItem(CptCode) ChooserViewModel<CptCode, long>.UnChooseItem(CptCode) ChooserViewModel<CptCode, long>.ChangeItemIsSelected(CptCode, bool) ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors CptCodeChooserViewModel(IBillingDataService, Provider, CptCode?, Action<CptCode>?) public CptCodeChooserViewModel(IBillingDataService billingDataService, Provider provider, CptCode? cptCode, Action<CptCode>? updateAction = null) Parameters billingDataService IBillingDataService provider Provider cptCode CptCode updateAction Action<CptCode> CptCodeChooserViewModel(IBillingDataService, Provider, CptCode[]) public CptCodeChooserViewModel(IBillingDataService billingDataService, Provider provider, CptCode[] cptCodes) Parameters billingDataService IBillingDataService provider Provider cptCodes CptCode[] Properties CptCodeSearchViewModel public CptCodeSearchViewModel CptCodeSearchViewModel { get; } Property Value CptCodeSearchViewModel Methods LoadFavoritesAsync() public Task LoadFavoritesAsync() Returns Task"
  },
  "api/Billing.ViewModels.CptCodeSearchViewModel.html": {
    "href": "api/Billing.ViewModels.CptCodeSearchViewModel.html",
    "title": "Class CptCodeSearchViewModel | CumulusRCM",
    "keywords": "Class CptCodeSearchViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class CptCodeSearchViewModel : SearchViewModel<CptCode>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject SearchViewModel<CptCode> CptCodeSearchViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members SearchViewModel<CptCode>.SelectedItem SearchViewModel<CptCode>.ItemSelected SearchViewModel<CptCode>.IsItemSelected SearchViewModel<CptCode>.SearchOperatorSelector SearchViewModel<CptCode>.SearchAsync(string) SearchViewModel<CptCode>.SearchBaseAsync(string, Filter) SearchViewModel<CptCode>.Clear() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors CptCodeSearchViewModel(IBillingDataService) public CptCodeSearchViewModel(IBillingDataService billingDataService) Parameters billingDataService IBillingDataService Properties IsSearchByDescription public bool IsSearchByDescription { get; set; } Property Value bool Methods SearchAsync(string?, CancellationToken) public override Task<IEnumerable<CptCode>> SearchAsync(string? searchValue, CancellationToken cancellationToken) Parameters searchValue string cancellationToken CancellationToken Returns Task<IEnumerable<CptCode>>"
  },
  "api/Billing.ViewModels.CptCodeViewModel.html": {
    "href": "api/Billing.ViewModels.CptCodeViewModel.html",
    "title": "Class CptCodeViewModel | CumulusRCM",
    "keywords": "Class CptCodeViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class CptCodeViewModel : ViewModelIdBase<CptCode>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<CptCode> ViewModelIdBase<CptCode> CptCodeViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<CptCode>.Id ViewModelBase<CptCode>.Model ViewModelBase<CptCode>.CancelChanges() ViewModelBase<CptCode>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors CptCodeViewModel(CptCode) public CptCodeViewModel(CptCode cptCode) Parameters cptCode CptCode Properties Code [Reactive] public string Code { get; set; } Property Value string Description [Reactive] public string Description { get; set; } Property Value string RequiredWith [Reactive] public string RequiredWith { get; set; } Property Value string Validator public ValidatorBase<CptCodeViewModel> Validator { get; } Property Value ValidatorBase<CptCodeViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.CptCodesViewModel.html": {
    "href": "api/Billing.ViewModels.CptCodesViewModel.html",
    "title": "Class CptCodesViewModel | CumulusRCM",
    "keywords": "Class CptCodesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class CptCodesViewModel : CollectionViewModelBase<CptCodeViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<CptCodeViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<CptCodeViewModel, long> CptCodesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<CptCodeViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<CptCodeViewModel, long>.CurrentPage CollectionViewModelBase<CptCodeViewModel, long>.ItemsCount CollectionViewModelBase<CptCodeViewModel, long>.SelectedItem CollectionViewModelBase<CptCodeViewModel, long>.PageCount CollectionViewModelBase<CptCodeViewModel, long>.IsPagingRequired CollectionViewModelBase<CptCodeViewModel, long>.ItemsLoaded CollectionViewModelBase<CptCodeViewModel, long>.IsItemSelected CollectionViewModelBase<CptCodeViewModel, long>.ItemIsSelected CollectionViewModelBase<CptCodeViewModel, long>.Activator CollectionViewModelBase<CptCodeViewModel, long>.PageSize CollectionViewModelBase<CptCodeViewModel, long>.Edit CollectionViewModelBase<CptCodeViewModel, long>.EditInteraction CollectionViewModelBase<CptCodeViewModel, long>.SearchResults CollectionViewModelBase<CptCodeViewModel, long>.LoadItems() CollectionViewModelBase<CptCodeViewModel, long>.SelectItem(CptCodeViewModel) CollectionViewModelBase<CptCodeViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors CptCodesViewModel(IBillingDataService) public CptCodesViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties SearchExpression public ReactiveFilterExpression<CptCode> SearchExpression { get; } Property Value ReactiveFilterExpression<CptCode> Methods AddNewItem() public override CptCodeViewModel AddNewItem() Returns CptCodeViewModel"
  },
  "api/Billing.ViewModels.DiagnosesChooserViewModel.html": {
    "href": "api/Billing.ViewModels.DiagnosesChooserViewModel.html",
    "title": "Class DiagnosesChooserViewModel | CumulusRCM",
    "keywords": "Class DiagnosesChooserViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class DiagnosesChooserViewModel : ChooserViewModel<Diagnosis, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject ChooserViewModel<Diagnosis, long> DiagnosesChooserViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ChooserViewModel<Diagnosis, long>.SelectedItems ChooserViewModel<Diagnosis, long>.SelectedItem ChooserViewModel<Diagnosis, long>.SelectedItemChanged ChooserViewModel<Diagnosis, long>.FavoriteItems ChooserViewModel<Diagnosis, long>.LoadFavorites(IEnumerable<Diagnosis>) ChooserViewModel<Diagnosis, long>.LoadSelected(IEnumerable<Diagnosis>) ChooserViewModel<Diagnosis, long>.ChooseItem(Diagnosis) ChooserViewModel<Diagnosis, long>.UnChooseItem(Diagnosis) ChooserViewModel<Diagnosis, long>.ChangeItemIsSelected(Diagnosis, bool) ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DiagnosesChooserViewModel(IBillingDataService, Provider, ICollection<Diagnosis>?, bool) public DiagnosesChooserViewModel(IBillingDataService billingDataService, Provider provider, ICollection<Diagnosis>? diagnoses = null, bool isMultiSelect = false) Parameters billingDataService IBillingDataService provider Provider diagnoses ICollection<Diagnosis> isMultiSelect bool Properties DiagnosisSearchViewModel public DiagnosisSearchViewModel DiagnosisSearchViewModel { get; } Property Value DiagnosisSearchViewModel Methods LoadFavoritesAsync() public Task LoadFavoritesAsync() Returns Task"
  },
  "api/Billing.ViewModels.DiagnosesViewModel.html": {
    "href": "api/Billing.ViewModels.DiagnosesViewModel.html",
    "title": "Class DiagnosesViewModel | CumulusRCM",
    "keywords": "Class DiagnosesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class DiagnosesViewModel : CollectionViewModelBase<DiagnosisViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<DiagnosisViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<DiagnosisViewModel, long> DiagnosesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<DiagnosisViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<DiagnosisViewModel, long>.CurrentPage CollectionViewModelBase<DiagnosisViewModel, long>.ItemsCount CollectionViewModelBase<DiagnosisViewModel, long>.SelectedItem CollectionViewModelBase<DiagnosisViewModel, long>.PageCount CollectionViewModelBase<DiagnosisViewModel, long>.IsPagingRequired CollectionViewModelBase<DiagnosisViewModel, long>.ItemsLoaded CollectionViewModelBase<DiagnosisViewModel, long>.IsItemSelected CollectionViewModelBase<DiagnosisViewModel, long>.ItemIsSelected CollectionViewModelBase<DiagnosisViewModel, long>.Activator CollectionViewModelBase<DiagnosisViewModel, long>.PageSize CollectionViewModelBase<DiagnosisViewModel, long>.Edit CollectionViewModelBase<DiagnosisViewModel, long>.EditInteraction CollectionViewModelBase<DiagnosisViewModel, long>.SearchResults CollectionViewModelBase<DiagnosisViewModel, long>.ViewModelDataWriter CollectionViewModelBase<DiagnosisViewModel, long>.ViewModelDataReader CollectionViewModelBase<DiagnosisViewModel, long>.searchResultsCache CollectionViewModelBase<DiagnosisViewModel, long>.dataService CollectionViewModelBase<DiagnosisViewModel, long>.reactiveFilter CollectionViewModelBase<DiagnosisViewModel, long>.loadData CollectionViewModelBase<DiagnosisViewModel, long>.LoadResultCache(Response<DiagnosisViewModel>, bool) CollectionViewModelBase<DiagnosisViewModel, long>.LoadItems() CollectionViewModelBase<DiagnosisViewModel, long>.getItemsAsync(int, Filter) CollectionViewModelBase<DiagnosisViewModel, long>.SelectItem(DiagnosisViewModel) CollectionViewModelBase<DiagnosisViewModel, long>.AddNewItem() CollectionViewModelBase<DiagnosisViewModel, long>.UpdateItemAsync(DiagnosisViewModel, bool) CollectionViewModelBase<DiagnosisViewModel, long>.AddReactiveFilterExpressions(IEnumerable<ReactiveFilterExpression>, bool) CollectionViewModelBase<DiagnosisViewModel, long>.AddFilterExpressions(IEnumerable<ConnectedExpression>, bool) CollectionViewModelBase<DiagnosisViewModel, long>.AddFilterExpressions(FilterExpression, bool) ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DiagnosesViewModel(IBillingDataService) public DiagnosesViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties SearchExpression public ReactiveFilterExpression<Diagnosis> SearchExpression { get; } Property Value ReactiveFilterExpression<Diagnosis> Methods AddNewItem() public override DiagnosisViewModel AddNewItem() Returns DiagnosisViewModel"
  },
  "api/Billing.ViewModels.DiagnosisSearchViewModel.html": {
    "href": "api/Billing.ViewModels.DiagnosisSearchViewModel.html",
    "title": "Class DiagnosisSearchViewModel | CumulusRCM",
    "keywords": "Class DiagnosisSearchViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class DiagnosisSearchViewModel : SearchViewModel<Diagnosis>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject SearchViewModel<Diagnosis> DiagnosisSearchViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members SearchViewModel<Diagnosis>.SelectedItem SearchViewModel<Diagnosis>.ItemSelected SearchViewModel<Diagnosis>.IsItemSelected SearchViewModel<Diagnosis>.SearchOperatorSelector SearchViewModel<Diagnosis>.SearchAsync(string) SearchViewModel<Diagnosis>.SearchBaseAsync(string, Filter) SearchViewModel<Diagnosis>.Clear() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DiagnosisSearchViewModel(IBillingDataService) public DiagnosisSearchViewModel(IBillingDataService billingDataService) Parameters billingDataService IBillingDataService Properties IsSearchByDescription public bool IsSearchByDescription { get; set; } Property Value bool Methods SearchAsync(string?, CancellationToken) public override Task<IEnumerable<Diagnosis>> SearchAsync(string? searchValue, CancellationToken cancellationToken) Parameters searchValue string cancellationToken CancellationToken Returns Task<IEnumerable<Diagnosis>>"
  },
  "api/Billing.ViewModels.DiagnosisViewModel.html": {
    "href": "api/Billing.ViewModels.DiagnosisViewModel.html",
    "title": "Class DiagnosisViewModel | CumulusRCM",
    "keywords": "Class DiagnosisViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class DiagnosisViewModel : ViewModelIdBase<Diagnosis>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<Diagnosis> ViewModelIdBase<Diagnosis> DiagnosisViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<Diagnosis>.Id ViewModelBase<Diagnosis>.Model ViewModelBase<Diagnosis>.CancelChanges() ViewModelBase<Diagnosis>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DiagnosisViewModel(Diagnosis) public DiagnosisViewModel(Diagnosis diagnosis) Parameters diagnosis Diagnosis Properties Description [Reactive] public string Description { get; set; } Property Value string IcdCode [Reactive] public string IcdCode { get; set; } Property Value string Validator public ValidatorBase<DiagnosisViewModel> Validator { get; } Property Value ValidatorBase<DiagnosisViewModel> Version [Reactive] public int Version { get; set; } Property Value int Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.DynamicFilterExpression.html": {
    "href": "api/Billing.ViewModels.DynamicFilterExpression.html",
    "title": "Class DynamicFilterExpression | CumulusRCM",
    "keywords": "Class DynamicFilterExpression Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public record DynamicFilterExpression : IEquatable<DynamicFilterExpression> Inheritance object DynamicFilterExpression Implements IEquatable<DynamicFilterExpression> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DynamicFilterExpression(FilterExpression, AndOr, bool) public DynamicFilterExpression(FilterExpression FilterExpression, AndOr AndOr, bool IsCleared) Parameters FilterExpression FilterExpression AndOr AndOr IsCleared bool Properties AndOr public AndOr AndOr { get; init; } Property Value AndOr FilterExpression public FilterExpression FilterExpression { get; init; } Property Value FilterExpression IsCleared public bool IsCleared { get; init; } Property Value bool"
  },
  "api/Billing.ViewModels.FacilitiesViewModel.html": {
    "href": "api/Billing.ViewModels.FacilitiesViewModel.html",
    "title": "Class FacilitiesViewModel | CumulusRCM",
    "keywords": "Class FacilitiesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class FacilitiesViewModel : CollectionViewModelBase<FacilityViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<FacilityViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<FacilityViewModel, long> FacilitiesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<FacilityViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<FacilityViewModel, long>.CurrentPage CollectionViewModelBase<FacilityViewModel, long>.ItemsCount CollectionViewModelBase<FacilityViewModel, long>.SelectedItem CollectionViewModelBase<FacilityViewModel, long>.PageCount CollectionViewModelBase<FacilityViewModel, long>.IsPagingRequired CollectionViewModelBase<FacilityViewModel, long>.ItemsLoaded CollectionViewModelBase<FacilityViewModel, long>.IsItemSelected CollectionViewModelBase<FacilityViewModel, long>.ItemIsSelected CollectionViewModelBase<FacilityViewModel, long>.Activator CollectionViewModelBase<FacilityViewModel, long>.PageSize CollectionViewModelBase<FacilityViewModel, long>.Edit CollectionViewModelBase<FacilityViewModel, long>.EditInteraction CollectionViewModelBase<FacilityViewModel, long>.SearchResults CollectionViewModelBase<FacilityViewModel, long>.LoadItems() CollectionViewModelBase<FacilityViewModel, long>.SelectItem(FacilityViewModel) CollectionViewModelBase<FacilityViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilitiesViewModel(IBillingDataService) public FacilitiesViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties FilterExpression public ReactiveFilterExpression<Facility> FilterExpression { get; } Property Value ReactiveFilterExpression<Facility> Methods AddNewItem() public override FacilityViewModel AddNewItem() Returns FacilityViewModel"
  },
  "api/Billing.ViewModels.FacilityProviderViewModel.html": {
    "href": "api/Billing.ViewModels.FacilityProviderViewModel.html",
    "title": "Class FacilityProviderViewModel | CumulusRCM",
    "keywords": "Class FacilityProviderViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class FacilityProviderViewModel : ViewModelIdBase<ProviderFacility>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges, IEquatable<FacilityProviderViewModel> Inheritance object ReactiveObject ViewModelBase ViewModelBase<ProviderFacility> ViewModelIdBase<ProviderFacility> FacilityProviderViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges IEquatable<FacilityProviderViewModel> Inherited Members ViewModelIdBase<ProviderFacility>.Id ViewModelBase<ProviderFacility>.Model ViewModelBase<ProviderFacility>.CancelChanges() ViewModelBase<ProviderFacility>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilityProviderViewModel(ProviderFacility) public FacilityProviderViewModel(ProviderFacility providerFacility) Parameters providerFacility ProviderFacility Properties Facility [Reactive] public Facility? Facility { get; set; } Property Value Facility Facility_Id [ObservableAsProperty] public long Facility_Id { get; } Property Value long Provider [Reactive] public Provider? Provider { get; set; } Property Value Provider ProviderFacility public ProviderFacility ProviderFacility { get; } Property Value ProviderFacility Provider_Id [ObservableAsProperty] public long Provider_Id { get; } Property Value long Methods ApplyChangesToModel() public override void ApplyChangesToModel() CreateNew(Provider?, Facility?) public static FacilityProviderViewModel CreateNew(Provider? provider = null, Facility? facility = null) Parameters provider Provider facility Facility Returns FacilityProviderViewModel Equals(FacilityProviderViewModel?) Indicates whether the current object is equal to another object of the same type. public bool Equals(FacilityProviderViewModel? other) Parameters other FacilityProviderViewModel An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. LoadFromModel() protected override void LoadFromModel() Operators operator ==(FacilityProviderViewModel?, FacilityProviderViewModel?) public static bool operator ==(FacilityProviderViewModel? left, FacilityProviderViewModel? right) Parameters left FacilityProviderViewModel right FacilityProviderViewModel Returns bool operator !=(FacilityProviderViewModel?, FacilityProviderViewModel?) public static bool operator !=(FacilityProviderViewModel? left, FacilityProviderViewModel? right) Parameters left FacilityProviderViewModel right FacilityProviderViewModel Returns bool"
  },
  "api/Billing.ViewModels.FacilityProvidersViewModel.html": {
    "href": "api/Billing.ViewModels.FacilityProvidersViewModel.html",
    "title": "Class FacilityProvidersViewModel | CumulusRCM",
    "keywords": "Class FacilityProvidersViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class FacilityProvidersViewModel : CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<FacilityProviderViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)> FacilityProvidersViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<FacilityProviderViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.CurrentPage CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.ItemsCount CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.SelectedItem CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.PageCount CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.IsPagingRequired CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.ItemsLoaded CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.IsItemSelected CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.ItemIsSelected CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.Activator CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.PageSize CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.Edit CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.EditInteraction CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.SearchResults CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.LoadItems() CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.SelectItem(FacilityProviderViewModel) CollectionViewModelBase<FacilityProviderViewModel, (long facilityId, long providerId)>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilityProvidersViewModel(FacilityViewModel, IBillingDataService) public FacilityProvidersViewModel(FacilityViewModel facilityViewModel, IBillingDataService dataService) Parameters facilityViewModel FacilityViewModel dataService IBillingDataService Properties AvailableProviders public IReadOnlyCollection<Provider> AvailableProviders { get; } Property Value IReadOnlyCollection<Provider> Facility public Facility Facility { get; } Property Value Facility Methods AddNewItem() public override FacilityProviderViewModel AddNewItem() Returns FacilityProviderViewModel AddNewProvider(Provider) public Task AddNewProvider(Provider provider) Parameters provider Provider Returns Task LoadProviders() public void LoadProviders() RemoveFacilityProvider(FacilityProviderViewModel) public Task RemoveFacilityProvider(FacilityProviderViewModel facilityProviderViewModel) Parameters facilityProviderViewModel FacilityProviderViewModel Returns Task"
  },
  "api/Billing.ViewModels.FacilityProvidersViewModelDataReader.html": {
    "href": "api/Billing.ViewModels.FacilityProvidersViewModelDataReader.html",
    "title": "Class FacilityProvidersViewModelDataReader | CumulusRCM",
    "keywords": "Class FacilityProvidersViewModelDataReader Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class FacilityProvidersViewModelDataReader : IViewModelDataReader<FacilityProviderViewModel> Inheritance object FacilityProvidersViewModelDataReader Implements IViewModelDataReader<FacilityProviderViewModel> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilityProvidersViewModelDataReader(IBillingDataService, Facility) public FacilityProvidersViewModelDataReader(IBillingDataService billingDataService, Facility facility) Parameters billingDataService IBillingDataService facility Facility Properties OrderBy public OrderBy? OrderBy { get; init; } Property Value OrderBy Methods GetDataAsync(Filter?, int, int, OrderBy?) public Task<Response<FacilityProviderViewModel>> GetDataAsync(Filter? searchFilter, int pageSize, int currentPage, OrderBy? orderBy = null) Parameters searchFilter Filter pageSize int currentPage int orderBy OrderBy Returns Task<Response<FacilityProviderViewModel>>"
  },
  "api/Billing.ViewModels.FacilityProvidersViewModelDataWriter.html": {
    "href": "api/Billing.ViewModels.FacilityProvidersViewModelDataWriter.html",
    "title": "Class FacilityProvidersViewModelDataWriter | CumulusRCM",
    "keywords": "Class FacilityProvidersViewModelDataWriter Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class FacilityProvidersViewModelDataWriter : ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel>, IViewModelDataWriter<FacilityProviderViewModel> Inheritance object ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel> FacilityProvidersViewModelDataWriter Implements IViewModelDataWriter<FacilityProviderViewModel> Inherited Members ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel>.BillingDataService ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel>.GetModel ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel>.ModelViewModelDataWriter ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel>.UpdateItemAsync(FacilityProviderViewModel) ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel>.CreateItemAsync(FacilityProviderViewModel) ViewModelDataWriter<ProviderFacility, FacilityProviderViewModel>.DeleteItemAsync(FacilityProviderViewModel) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilityProvidersViewModelDataWriter(IBillingDataService) public FacilityProvidersViewModelDataWriter(IBillingDataService billingDataService) Parameters billingDataService IBillingDataService Methods DeleteItemAsync(FacilityProviderViewModel) public Task<SaveResponse> DeleteItemAsync(FacilityProviderViewModel item) Parameters item FacilityProviderViewModel Returns Task<SaveResponse> UpdateItemAsync(FacilityProviderViewModel) public Task<SaveResponse> UpdateItemAsync(FacilityProviderViewModel item) Parameters item FacilityProviderViewModel Returns Task<SaveResponse>"
  },
  "api/Billing.ViewModels.FacilityViewModel.html": {
    "href": "api/Billing.ViewModels.FacilityViewModel.html",
    "title": "Class FacilityViewModel | CumulusRCM",
    "keywords": "Class FacilityViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class FacilityViewModel : ViewModelIdBase<Facility>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<Facility> ViewModelIdBase<Facility> FacilityViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<Facility>.Id ViewModelBase<Facility>.Model ViewModelBase<Facility>.CancelChanges() ViewModelBase<Facility>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FacilityViewModel(Facility, IBillingDataService) public FacilityViewModel(Facility facility, IBillingDataService dataService) Parameters facility Facility dataService IBillingDataService Properties City [Reactive] public string City { get; set; } Property Value string Description [Reactive] public string Description { get; set; } Property Value string FacilityProvidersViewModel public FacilityProvidersViewModel FacilityProvidersViewModel { get; } Property Value FacilityProvidersViewModel PlaceOfService [Reactive] public string PlaceOfService { get; set; } Property Value string State [Reactive] public string State { get; set; } Property Value string Street1 [Reactive] public string Street1 { get; set; } Property Value string Street2 [Reactive] public string Street2 { get; set; } Property Value string Validator public ValidatorBase<FacilityViewModel> Validator { get; } Property Value ValidatorBase<FacilityViewModel> ZipCode [Reactive] public string ZipCode { get; set; } Property Value string Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.Helpers.CollectionHelpers.html": {
    "href": "api/Billing.ViewModels.Helpers.CollectionHelpers.html",
    "title": "Class CollectionHelpers | CumulusRCM",
    "keywords": "Class CollectionHelpers Namespace Billing.ViewModels.Helpers Assembly Billing.ViewModels.dll public static class CollectionHelpers Inheritance object CollectionHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AreCollectionsEqual<T>(ICollection<T>, ICollection<T>) public static bool AreCollectionsEqual<T>(ICollection<T> collection1, ICollection<T> collection2) Parameters collection1 ICollection<T> collection2 ICollection<T> Returns bool Type Parameters T AreEqual<T>(ICollection<T>, ICollection<T>) public static bool AreEqual<T>(this ICollection<T> collection1, ICollection<T> collection2) Parameters collection1 ICollection<T> collection2 ICollection<T> Returns bool Type Parameters T AreNotEqual<T>(ICollection<T>, ICollection<T>) public static bool AreNotEqual<T>(this ICollection<T> collection1, ICollection<T> collection2) Parameters collection1 ICollection<T> collection2 ICollection<T> Returns bool Type Parameters T"
  },
  "api/Billing.ViewModels.Helpers.CptCodeHelpers.html": {
    "href": "api/Billing.ViewModels.Helpers.CptCodeHelpers.html",
    "title": "Class CptCodeHelpers | CumulusRCM",
    "keywords": "Class CptCodeHelpers Namespace Billing.ViewModels.Helpers Assembly Billing.ViewModels.dll public class CptCodeHelpers Inheritance object CptCodeHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetProceduresFromCodesAsync(IBillingDataService, IEnumerable<string>) public Task<Response<CptCode>> GetProceduresFromCodesAsync(IBillingDataService billingDataService, IEnumerable<string> cptCodeKeys) Parameters billingDataService IBillingDataService cptCodeKeys IEnumerable<string> Returns Task<Response<CptCode>>"
  },
  "api/Billing.ViewModels.Helpers.PatientHelpers.html": {
    "href": "api/Billing.ViewModels.Helpers.PatientHelpers.html",
    "title": "Class PatientHelpers | CumulusRCM",
    "keywords": "Class PatientHelpers Namespace Billing.ViewModels.Helpers Assembly Billing.ViewModels.dll public class PatientHelpers Inheritance object PatientHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods LoadServiceLocationsAsync(IBillingDataService, long) public static Task<Response<ServiceLocation>> LoadServiceLocationsAsync(IBillingDataService billingDataService, long patientId) Parameters billingDataService IBillingDataService patientId long Returns Task<Response<ServiceLocation>>"
  },
  "api/Billing.ViewModels.Helpers.ProviderHelpers.html": {
    "href": "api/Billing.ViewModels.Helpers.ProviderHelpers.html",
    "title": "Class ProviderHelpers | CumulusRCM",
    "keywords": "Class ProviderHelpers Namespace Billing.ViewModels.Helpers Assembly Billing.ViewModels.dll public static class ProviderHelpers Inheritance object ProviderHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields favoriteCpts public static readonly Dictionary<long, IReadOnlyCollection<CptCode>> favoriteCpts Field Value Dictionary<long, IReadOnlyCollection<CptCode>> favoriteDiagnoses public static readonly Dictionary<long, IReadOnlyCollection<Diagnosis>> favoriteDiagnoses Field Value Dictionary<long, IReadOnlyCollection<Diagnosis>> Methods GetProviderCptCodesFavoritesAsync(Provider, IBillingDataService) public static Task<IReadOnlyCollection<CptCode>> GetProviderCptCodesFavoritesAsync(this Provider provider, IBillingDataService billingDataService) Parameters provider Provider billingDataService IBillingDataService Returns Task<IReadOnlyCollection<CptCode>> GetProviderDiagnosisFavoritesAsync(Provider, IBillingDataService) public static Task<IReadOnlyCollection<Diagnosis>> GetProviderDiagnosisFavoritesAsync(this Provider provider, IBillingDataService billingDataService) Parameters provider Provider billingDataService IBillingDataService Returns Task<IReadOnlyCollection<Diagnosis>>"
  },
  "api/Billing.ViewModels.Helpers.html": {
    "href": "api/Billing.ViewModels.Helpers.html",
    "title": "Namespace Billing.ViewModels.Helpers | CumulusRCM",
    "keywords": "Namespace Billing.ViewModels.Helpers Classes CollectionHelpers CptCodeHelpers PatientHelpers ProviderHelpers"
  },
  "api/Billing.ViewModels.InsuranceCompaniesViewModel.html": {
    "href": "api/Billing.ViewModels.InsuranceCompaniesViewModel.html",
    "title": "Class InsuranceCompaniesViewModel | CumulusRCM",
    "keywords": "Class InsuranceCompaniesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class InsuranceCompaniesViewModel : CollectionViewModelBase<InsuranceCompanyViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<InsuranceCompanyViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<InsuranceCompanyViewModel, long> InsuranceCompaniesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<InsuranceCompanyViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<InsuranceCompanyViewModel, long>.CurrentPage CollectionViewModelBase<InsuranceCompanyViewModel, long>.ItemsCount CollectionViewModelBase<InsuranceCompanyViewModel, long>.SelectedItem CollectionViewModelBase<InsuranceCompanyViewModel, long>.PageCount CollectionViewModelBase<InsuranceCompanyViewModel, long>.IsPagingRequired CollectionViewModelBase<InsuranceCompanyViewModel, long>.ItemsLoaded CollectionViewModelBase<InsuranceCompanyViewModel, long>.IsItemSelected CollectionViewModelBase<InsuranceCompanyViewModel, long>.ItemIsSelected CollectionViewModelBase<InsuranceCompanyViewModel, long>.Activator CollectionViewModelBase<InsuranceCompanyViewModel, long>.PageSize CollectionViewModelBase<InsuranceCompanyViewModel, long>.Edit CollectionViewModelBase<InsuranceCompanyViewModel, long>.EditInteraction CollectionViewModelBase<InsuranceCompanyViewModel, long>.SearchResults CollectionViewModelBase<InsuranceCompanyViewModel, long>.LoadItems() CollectionViewModelBase<InsuranceCompanyViewModel, long>.SelectItem(InsuranceCompanyViewModel) CollectionViewModelBase<InsuranceCompanyViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors InsuranceCompaniesViewModel(IBillingDataService) public InsuranceCompaniesViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties FilterExpression public ReactiveFilterExpression<InsuranceCompany> FilterExpression { get; } Property Value ReactiveFilterExpression<InsuranceCompany> Methods AddNewItem() public override InsuranceCompanyViewModel AddNewItem() Returns InsuranceCompanyViewModel"
  },
  "api/Billing.ViewModels.InsuranceCompanyViewModel.InsuranceValidator.html": {
    "href": "api/Billing.ViewModels.InsuranceCompanyViewModel.InsuranceValidator.html",
    "title": "Class InsuranceCompanyViewModel.InsuranceValidator | CumulusRCM",
    "keywords": "Class InsuranceCompanyViewModel.InsuranceValidator Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class InsuranceCompanyViewModel.InsuranceValidator : AbstractValidator<InsuranceCompanyViewModel>, IValidator<InsuranceCompanyViewModel>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<InsuranceCompanyViewModel> InsuranceCompanyViewModel.InsuranceValidator Implements IValidator<InsuranceCompanyViewModel> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<InsuranceCompanyViewModel>.Validate(InsuranceCompanyViewModel) AbstractValidator<InsuranceCompanyViewModel>.ValidateAsync(InsuranceCompanyViewModel, CancellationToken) AbstractValidator<InsuranceCompanyViewModel>.Validate(ValidationContext<InsuranceCompanyViewModel>) AbstractValidator<InsuranceCompanyViewModel>.ValidateAsync(ValidationContext<InsuranceCompanyViewModel>, CancellationToken) AbstractValidator<InsuranceCompanyViewModel>.CreateDescriptor() AbstractValidator<InsuranceCompanyViewModel>.RuleFor<TProperty>(Expression<Func<InsuranceCompanyViewModel, TProperty>>) AbstractValidator<InsuranceCompanyViewModel>.Transform<TProperty, TTransformed>(Expression<Func<InsuranceCompanyViewModel, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<InsuranceCompanyViewModel>.Transform<TProperty, TTransformed>(Expression<Func<InsuranceCompanyViewModel, TProperty>>, Func<InsuranceCompanyViewModel, TProperty, TTransformed>) AbstractValidator<InsuranceCompanyViewModel>.RuleForEach<TElement>(Expression<Func<InsuranceCompanyViewModel, IEnumerable<TElement>>>) AbstractValidator<InsuranceCompanyViewModel>.TransformForEach<TElement, TTransformed>(Expression<Func<InsuranceCompanyViewModel, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<InsuranceCompanyViewModel>.TransformForEach<TElement, TTransformed>(Expression<Func<InsuranceCompanyViewModel, IEnumerable<TElement>>>, Func<InsuranceCompanyViewModel, TElement, TTransformed>) AbstractValidator<InsuranceCompanyViewModel>.RuleSet(string, Action) AbstractValidator<InsuranceCompanyViewModel>.When(Func<InsuranceCompanyViewModel, bool>, Action) AbstractValidator<InsuranceCompanyViewModel>.When(Func<InsuranceCompanyViewModel, ValidationContext<InsuranceCompanyViewModel>, bool>, Action) AbstractValidator<InsuranceCompanyViewModel>.Unless(Func<InsuranceCompanyViewModel, bool>, Action) AbstractValidator<InsuranceCompanyViewModel>.Unless(Func<InsuranceCompanyViewModel, ValidationContext<InsuranceCompanyViewModel>, bool>, Action) AbstractValidator<InsuranceCompanyViewModel>.WhenAsync(Func<InsuranceCompanyViewModel, CancellationToken, Task<bool>>, Action) AbstractValidator<InsuranceCompanyViewModel>.WhenAsync(Func<InsuranceCompanyViewModel, ValidationContext<InsuranceCompanyViewModel>, CancellationToken, Task<bool>>, Action) AbstractValidator<InsuranceCompanyViewModel>.UnlessAsync(Func<InsuranceCompanyViewModel, CancellationToken, Task<bool>>, Action) AbstractValidator<InsuranceCompanyViewModel>.UnlessAsync(Func<InsuranceCompanyViewModel, ValidationContext<InsuranceCompanyViewModel>, CancellationToken, Task<bool>>, Action) AbstractValidator<InsuranceCompanyViewModel>.Include(IValidator<InsuranceCompanyViewModel>) AbstractValidator<InsuranceCompanyViewModel>.Include<TValidator>(Func<InsuranceCompanyViewModel, TValidator>) AbstractValidator<InsuranceCompanyViewModel>.GetEnumerator() AbstractValidator<InsuranceCompanyViewModel>.EnsureInstanceNotNull(object) AbstractValidator<InsuranceCompanyViewModel>.PreValidate(ValidationContext<InsuranceCompanyViewModel>, ValidationResult) AbstractValidator<InsuranceCompanyViewModel>.RaiseValidationException(ValidationContext<InsuranceCompanyViewModel>, ValidationResult) AbstractValidator<InsuranceCompanyViewModel>.OnRuleAdded(IValidationRule<InsuranceCompanyViewModel>) AbstractValidator<InsuranceCompanyViewModel>.CascadeMode AbstractValidator<InsuranceCompanyViewModel>.ClassLevelCascadeMode AbstractValidator<InsuranceCompanyViewModel>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Pager.Page<T>(IEnumerable<T>, int, int) Constructors InsuranceValidator() public InsuranceValidator()"
  },
  "api/Billing.ViewModels.InsuranceCompanyViewModel.html": {
    "href": "api/Billing.ViewModels.InsuranceCompanyViewModel.html",
    "title": "Class InsuranceCompanyViewModel | CumulusRCM",
    "keywords": "Class InsuranceCompanyViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class InsuranceCompanyViewModel : ViewModelIdBase<InsuranceCompany>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<InsuranceCompany> ViewModelIdBase<InsuranceCompany> InsuranceCompanyViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<InsuranceCompany>.Id ViewModelBase<InsuranceCompany>.Model ViewModelBase<InsuranceCompany>.CancelChanges() ViewModelBase<InsuranceCompany>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors InsuranceCompanyViewModel(InsuranceCompany) public InsuranceCompanyViewModel(InsuranceCompany insuranceCompany) Parameters insuranceCompany InsuranceCompany Properties CompanyName [Reactive] public string CompanyName { get; set; } Property Value string PayorIds [Reactive] public string PayorIds { get; set; } Property Value string RequiresPreAuth [Reactive] public bool RequiresPreAuth { get; set; } Property Value bool Validator public ValidatorBase<InsuranceCompanyViewModel> Validator { get; } Property Value ValidatorBase<InsuranceCompanyViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.Interfaces.ICollectionViewModel-1.html": {
    "href": "api/Billing.ViewModels.Interfaces.ICollectionViewModel-1.html",
    "title": "Interface ICollectionViewModel<T> | CumulusRCM",
    "keywords": "Interface ICollectionViewModel<T> Namespace Billing.ViewModels.Interfaces Assembly Billing.ViewModels.dll public interface ICollectionViewModel<T> : IActivatableViewModel where T : class Type Parameters T Inherited Members IActivatableViewModel.Activator Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties CurrentPage int CurrentPage { get; set; } Property Value int Edit ReactiveCommand<T, bool> Edit { get; } Property Value ReactiveCommand<T, bool> EditInteraction Interaction<T, bool> EditInteraction { get; } Property Value Interaction<T, bool> IsPagingRequired bool IsPagingRequired { get; } Property Value bool ItemsCount int ItemsCount { get; set; } Property Value int ItemsLoaded IObservable<Unit> ItemsLoaded { get; } Property Value IObservable<Unit> PageCount int PageCount { get; } Property Value int PageSize int PageSize { get; } Property Value int SearchResults ReadOnlyObservableCollection<T> SearchResults { get; } Property Value ReadOnlyObservableCollection<T> SelectedItem T? SelectedItem { get; set; } Property Value T Methods AddNewItem() T AddNewItem() Returns T LoadItems() void LoadItems() SelectItem(T) void SelectItem(T item) Parameters item T"
  },
  "api/Billing.ViewModels.Interfaces.ITrackModelChanges.html": {
    "href": "api/Billing.ViewModels.Interfaces.ITrackModelChanges.html",
    "title": "Interface ITrackModelChanges | CumulusRCM",
    "keywords": "Interface ITrackModelChanges Namespace Billing.ViewModels.Interfaces Assembly Billing.ViewModels.dll public interface ITrackModelChanges : ITrackChanges Inherited Members ITrackChanges.IsNew ITrackChanges.ApplyChanges() ITrackChanges.CancelChanges() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods ApplyChangesToModel() void ApplyChangesToModel()"
  },
  "api/Billing.ViewModels.Interfaces.IViewModelDataReader-1.html": {
    "href": "api/Billing.ViewModels.Interfaces.IViewModelDataReader-1.html",
    "title": "Interface IViewModelDataReader<T> | CumulusRCM",
    "keywords": "Interface IViewModelDataReader<T> Namespace Billing.ViewModels.Interfaces Assembly Billing.ViewModels.dll public interface IViewModelDataReader<T> Type Parameters T Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties OrderBy OrderBy? OrderBy { get; init; } Property Value OrderBy Methods GetDataAsync(Filter?, int, int, OrderBy?) Task<Response<T>> GetDataAsync(Filter? searchFilter, int pageSize, int currentPage, OrderBy? orderBy = null) Parameters searchFilter Filter pageSize int currentPage int orderBy OrderBy Returns Task<Response<T>>"
  },
  "api/Billing.ViewModels.Interfaces.IViewModelDataWriter-1.html": {
    "href": "api/Billing.ViewModels.Interfaces.IViewModelDataWriter-1.html",
    "title": "Interface IViewModelDataWriter<T> | CumulusRCM",
    "keywords": "Interface IViewModelDataWriter<T> Namespace Billing.ViewModels.Interfaces Assembly Billing.ViewModels.dll public interface IViewModelDataWriter<T> Type Parameters T Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods CreateItemAsync(T) Task<SaveResponse> CreateItemAsync(T item) Parameters item T Returns Task<SaveResponse> DeleteItemAsync(T) Task<SaveResponse> DeleteItemAsync(T item) Parameters item T Returns Task<SaveResponse> UpdateItemAsync(T) Task<SaveResponse> UpdateItemAsync(T item) Parameters item T Returns Task<SaveResponse>"
  },
  "api/Billing.ViewModels.Interfaces.html": {
    "href": "api/Billing.ViewModels.Interfaces.html",
    "title": "Namespace Billing.ViewModels.Interfaces | CumulusRCM",
    "keywords": "Namespace Billing.ViewModels.Interfaces Interfaces ICollectionViewModel<T> ITrackModelChanges IViewModelDataReader<T> IViewModelDataWriter<T>"
  },
  "api/Billing.ViewModels.PatientAddressViewModel.html": {
    "href": "api/Billing.ViewModels.PatientAddressViewModel.html",
    "title": "Class PatientAddressViewModel | CumulusRCM",
    "keywords": "Class PatientAddressViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PatientAddressViewModel : ViewModelIdBase<PatientAddress>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<PatientAddress> ViewModelIdBase<PatientAddress> PatientAddressViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<PatientAddress>.Id ViewModelBase<PatientAddress>.Model ViewModelBase<PatientAddress>.CancelChanges() ViewModelBase<PatientAddress>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientAddressViewModel(PatientAddress) public PatientAddressViewModel(PatientAddress patientAddress) Parameters patientAddress PatientAddress Properties AddressKind [Reactive] public AddressKind AddressKind { get; set; } Property Value AddressKind City [Reactive] public string City { get; set; } Property Value string Patient_Id [Reactive] public long Patient_Id { get; set; } Property Value long Priority [Reactive] public int Priority { get; set; } Property Value int State [Reactive] public State State { get; set; } Property Value State Street1 [Reactive] public string Street1 { get; set; } Property Value string Street2 [Reactive] public string Street2 { get; set; } Property Value string Validator public ValidatorBase<PatientAddressViewModel> Validator { get; } Property Value ValidatorBase<PatientAddressViewModel> ZipCode [Reactive] public string ZipCode { get; set; } Property Value string Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Billing.ViewModels.PatientAddressesViewModel.html": {
    "href": "api/Billing.ViewModels.PatientAddressesViewModel.html",
    "title": "Class PatientAddressesViewModel | CumulusRCM",
    "keywords": "Class PatientAddressesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PatientAddressesViewModel : CollectionViewModelBase<PatientAddressViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<PatientAddressViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<PatientAddressViewModel, long> PatientAddressesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<PatientAddressViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<PatientAddressViewModel, long>.CurrentPage CollectionViewModelBase<PatientAddressViewModel, long>.ItemsCount CollectionViewModelBase<PatientAddressViewModel, long>.SelectedItem CollectionViewModelBase<PatientAddressViewModel, long>.PageCount CollectionViewModelBase<PatientAddressViewModel, long>.IsPagingRequired CollectionViewModelBase<PatientAddressViewModel, long>.ItemsLoaded CollectionViewModelBase<PatientAddressViewModel, long>.IsItemSelected CollectionViewModelBase<PatientAddressViewModel, long>.ItemIsSelected CollectionViewModelBase<PatientAddressViewModel, long>.Activator CollectionViewModelBase<PatientAddressViewModel, long>.PageSize CollectionViewModelBase<PatientAddressViewModel, long>.Edit CollectionViewModelBase<PatientAddressViewModel, long>.EditInteraction CollectionViewModelBase<PatientAddressViewModel, long>.SearchResults CollectionViewModelBase<PatientAddressViewModel, long>.LoadItems() CollectionViewModelBase<PatientAddressViewModel, long>.SelectItem(PatientAddressViewModel) CollectionViewModelBase<PatientAddressViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientAddressesViewModel(IBillingDataService, long) public PatientAddressesViewModel(IBillingDataService dataService, long patientId) Parameters dataService IBillingDataService patientId long Methods AddNewItem() public override PatientAddressViewModel AddNewItem() Returns PatientAddressViewModel"
  },
  "api/Billing.ViewModels.PatientBillableServicesViewModel.html": {
    "href": "api/Billing.ViewModels.PatientBillableServicesViewModel.html",
    "title": "Class PatientBillableServicesViewModel | CumulusRCM",
    "keywords": "Class PatientBillableServicesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PatientBillableServicesViewModel : ViewModelBase, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackChanges Inheritance object ReactiveObject ViewModelBase PatientBillableServicesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackChanges Inherited Members ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientBillableServicesViewModel(IBillingDataService, Patient, ICollection<BillableServiceViewModel>) public PatientBillableServicesViewModel(IBillingDataService billingDataService, Patient patient, ICollection<BillableServiceViewModel> billableServices) Parameters billingDataService IBillingDataService patient Patient billableServices ICollection<BillableServiceViewModel> Properties BillableServices public SelectedList<BillableServiceViewModel> BillableServices { get; } Property Value SelectedList<BillableServiceViewModel> Edit public ReactiveCommand<BillableServiceViewModel, bool> Edit { get; } Property Value ReactiveCommand<BillableServiceViewModel, bool> EditBillableServiceInteraction public Interaction<BillableServiceViewModel, bool> EditBillableServiceInteraction { get; } Property Value Interaction<BillableServiceViewModel, bool> Patient public Patient Patient { get; } Property Value Patient Methods ApplyChanges() public override void ApplyChanges() CancelChanges() public override void CancelChanges()"
  },
  "api/Billing.ViewModels.PatientPhoneViewModel.html": {
    "href": "api/Billing.ViewModels.PatientPhoneViewModel.html",
    "title": "Class PatientPhoneViewModel | CumulusRCM",
    "keywords": "Class PatientPhoneViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PatientPhoneViewModel : ViewModelIdBase<PatientPhone>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<PatientPhone> ViewModelIdBase<PatientPhone> PatientPhoneViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<PatientPhone>.Id ViewModelBase<PatientPhone>.Model ViewModelBase<PatientPhone>.CancelChanges() ViewModelBase<PatientPhone>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientPhoneViewModel(PatientPhone) public PatientPhoneViewModel(PatientPhone patientPhone) Parameters patientPhone PatientPhone Properties Patient_Id [Reactive] public long Patient_Id { get; set; } Property Value long PhoneKind [Reactive] public PhoneKind PhoneKind { get; set; } Property Value PhoneKind PhoneNumber [Reactive] public string PhoneNumber { get; set; } Property Value string Priority [Reactive] public int Priority { get; set; } Property Value int Validator public ValidatorBase<PatientPhoneViewModel> Validator { get; } Property Value ValidatorBase<PatientPhoneViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.PatientPhonesViewModel.html": {
    "href": "api/Billing.ViewModels.PatientPhonesViewModel.html",
    "title": "Class PatientPhonesViewModel | CumulusRCM",
    "keywords": "Class PatientPhonesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PatientPhonesViewModel : CollectionViewModelBase<PatientPhoneViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<PatientPhoneViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<PatientPhoneViewModel, long> PatientPhonesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<PatientPhoneViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<PatientPhoneViewModel, long>.CurrentPage CollectionViewModelBase<PatientPhoneViewModel, long>.ItemsCount CollectionViewModelBase<PatientPhoneViewModel, long>.SelectedItem CollectionViewModelBase<PatientPhoneViewModel, long>.PageCount CollectionViewModelBase<PatientPhoneViewModel, long>.IsPagingRequired CollectionViewModelBase<PatientPhoneViewModel, long>.ItemsLoaded CollectionViewModelBase<PatientPhoneViewModel, long>.IsItemSelected CollectionViewModelBase<PatientPhoneViewModel, long>.ItemIsSelected CollectionViewModelBase<PatientPhoneViewModel, long>.Activator CollectionViewModelBase<PatientPhoneViewModel, long>.PageSize CollectionViewModelBase<PatientPhoneViewModel, long>.Edit CollectionViewModelBase<PatientPhoneViewModel, long>.EditInteraction CollectionViewModelBase<PatientPhoneViewModel, long>.SearchResults CollectionViewModelBase<PatientPhoneViewModel, long>.LoadItems() CollectionViewModelBase<PatientPhoneViewModel, long>.SelectItem(PatientPhoneViewModel) CollectionViewModelBase<PatientPhoneViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientPhonesViewModel(IBillingDataService, long) public PatientPhonesViewModel(IBillingDataService dataService, long patientId) Parameters dataService IBillingDataService patientId long Methods AddNewItem() public override PatientPhoneViewModel AddNewItem() Returns PatientPhoneViewModel"
  },
  "api/Billing.ViewModels.PatientPoliciesViewModel.html": {
    "href": "api/Billing.ViewModels.PatientPoliciesViewModel.html",
    "title": "Class PatientPoliciesViewModel | CumulusRCM",
    "keywords": "Class PatientPoliciesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PatientPoliciesViewModel : CollectionViewModelBase<PolicyViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<PolicyViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<PolicyViewModel, long> PatientPoliciesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<PolicyViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<PolicyViewModel, long>.CurrentPage CollectionViewModelBase<PolicyViewModel, long>.ItemsCount CollectionViewModelBase<PolicyViewModel, long>.SelectedItem CollectionViewModelBase<PolicyViewModel, long>.PageCount CollectionViewModelBase<PolicyViewModel, long>.IsPagingRequired CollectionViewModelBase<PolicyViewModel, long>.ItemsLoaded CollectionViewModelBase<PolicyViewModel, long>.IsItemSelected CollectionViewModelBase<PolicyViewModel, long>.ItemIsSelected CollectionViewModelBase<PolicyViewModel, long>.Activator CollectionViewModelBase<PolicyViewModel, long>.PageSize CollectionViewModelBase<PolicyViewModel, long>.Edit CollectionViewModelBase<PolicyViewModel, long>.EditInteraction CollectionViewModelBase<PolicyViewModel, long>.SearchResults CollectionViewModelBase<PolicyViewModel, long>.LoadItems() CollectionViewModelBase<PolicyViewModel, long>.SelectItem(PolicyViewModel) CollectionViewModelBase<PolicyViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientPoliciesViewModel(IBillingDataService, long) public PatientPoliciesViewModel(IBillingDataService dataService, long patientId) Parameters dataService IBillingDataService patientId long Properties InsuranceCompanySelectedCache public SelectedCache<InsuranceCompany, long> InsuranceCompanySelectedCache { get; } Property Value SelectedCache<InsuranceCompany, long> Methods AddNewItem() public override PolicyViewModel AddNewItem() Returns PolicyViewModel LoadInsuranceCompaniesAsync() public Task LoadInsuranceCompaniesAsync() Returns Task"
  },
  "api/Billing.ViewModels.PatientSearchViewModel.html": {
    "href": "api/Billing.ViewModels.PatientSearchViewModel.html",
    "title": "Class PatientSearchViewModel | CumulusRCM",
    "keywords": "Class PatientSearchViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PatientSearchViewModel : SearchViewModel<Patient>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject SearchViewModel<Patient> PatientSearchViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members SearchViewModel<Patient>.SelectedItem SearchViewModel<Patient>.ItemSelected SearchViewModel<Patient>.IsItemSelected SearchViewModel<Patient>.SearchOperatorSelector SearchViewModel<Patient>.SearchAsync(string) SearchViewModel<Patient>.SearchBaseAsync(string, Filter) SearchViewModel<Patient>.Clear() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientSearchViewModel(IBillingDataService) public PatientSearchViewModel(IBillingDataService billingDataService) Parameters billingDataService IBillingDataService Methods SearchAsync(string?, CancellationToken) public override Task<IEnumerable<Patient>> SearchAsync(string? searchValue, CancellationToken cancellationToken) Parameters searchValue string cancellationToken CancellationToken Returns Task<IEnumerable<Patient>>"
  },
  "api/Billing.ViewModels.PatientViewModel.PatientValidator.html": {
    "href": "api/Billing.ViewModels.PatientViewModel.PatientValidator.html",
    "title": "Class PatientViewModel.PatientValidator | CumulusRCM",
    "keywords": "Class PatientViewModel.PatientValidator Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PatientViewModel.PatientValidator : AbstractValidator<PatientViewModel>, IValidator<PatientViewModel>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<PatientViewModel> PatientViewModel.PatientValidator Implements IValidator<PatientViewModel> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<PatientViewModel>.Validate(PatientViewModel) AbstractValidator<PatientViewModel>.ValidateAsync(PatientViewModel, CancellationToken) AbstractValidator<PatientViewModel>.Validate(ValidationContext<PatientViewModel>) AbstractValidator<PatientViewModel>.ValidateAsync(ValidationContext<PatientViewModel>, CancellationToken) AbstractValidator<PatientViewModel>.CreateDescriptor() AbstractValidator<PatientViewModel>.RuleFor<TProperty>(Expression<Func<PatientViewModel, TProperty>>) AbstractValidator<PatientViewModel>.Transform<TProperty, TTransformed>(Expression<Func<PatientViewModel, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<PatientViewModel>.Transform<TProperty, TTransformed>(Expression<Func<PatientViewModel, TProperty>>, Func<PatientViewModel, TProperty, TTransformed>) AbstractValidator<PatientViewModel>.RuleForEach<TElement>(Expression<Func<PatientViewModel, IEnumerable<TElement>>>) AbstractValidator<PatientViewModel>.TransformForEach<TElement, TTransformed>(Expression<Func<PatientViewModel, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<PatientViewModel>.TransformForEach<TElement, TTransformed>(Expression<Func<PatientViewModel, IEnumerable<TElement>>>, Func<PatientViewModel, TElement, TTransformed>) AbstractValidator<PatientViewModel>.RuleSet(string, Action) AbstractValidator<PatientViewModel>.When(Func<PatientViewModel, bool>, Action) AbstractValidator<PatientViewModel>.When(Func<PatientViewModel, ValidationContext<PatientViewModel>, bool>, Action) AbstractValidator<PatientViewModel>.Unless(Func<PatientViewModel, bool>, Action) AbstractValidator<PatientViewModel>.Unless(Func<PatientViewModel, ValidationContext<PatientViewModel>, bool>, Action) AbstractValidator<PatientViewModel>.WhenAsync(Func<PatientViewModel, CancellationToken, Task<bool>>, Action) AbstractValidator<PatientViewModel>.WhenAsync(Func<PatientViewModel, ValidationContext<PatientViewModel>, CancellationToken, Task<bool>>, Action) AbstractValidator<PatientViewModel>.UnlessAsync(Func<PatientViewModel, CancellationToken, Task<bool>>, Action) AbstractValidator<PatientViewModel>.UnlessAsync(Func<PatientViewModel, ValidationContext<PatientViewModel>, CancellationToken, Task<bool>>, Action) AbstractValidator<PatientViewModel>.Include(IValidator<PatientViewModel>) AbstractValidator<PatientViewModel>.Include<TValidator>(Func<PatientViewModel, TValidator>) AbstractValidator<PatientViewModel>.GetEnumerator() AbstractValidator<PatientViewModel>.EnsureInstanceNotNull(object) AbstractValidator<PatientViewModel>.PreValidate(ValidationContext<PatientViewModel>, ValidationResult) AbstractValidator<PatientViewModel>.RaiseValidationException(ValidationContext<PatientViewModel>, ValidationResult) AbstractValidator<PatientViewModel>.OnRuleAdded(IValidationRule<PatientViewModel>) AbstractValidator<PatientViewModel>.CascadeMode AbstractValidator<PatientViewModel>.ClassLevelCascadeMode AbstractValidator<PatientViewModel>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Pager.Page<T>(IEnumerable<T>, int, int) Constructors PatientValidator() public PatientValidator() Properties ValidateValue public Func<PatientViewModel, string, Task<IEnumerable<string>>> ValidateValue { get; } Property Value Func<PatientViewModel, string, Task<IEnumerable<string>>>"
  },
  "api/Billing.ViewModels.PatientViewModel.html": {
    "href": "api/Billing.ViewModels.PatientViewModel.html",
    "title": "Class PatientViewModel | CumulusRCM",
    "keywords": "Class PatientViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PatientViewModel : ViewModelIdBase<Patient>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<Patient> ViewModelIdBase<Patient> PatientViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<Patient>.Id ViewModelBase<Patient>.Model ViewModelBase<Patient>.CancelChanges() ViewModelBase<Patient>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientViewModel(Patient, IBillingDataService) public PatientViewModel(Patient patient, IBillingDataService dataService) Parameters patient Patient dataService IBillingDataService Properties Birthdate [Reactive] public DateTime? Birthdate { get; set; } Property Value DateTime? DeathDate [Reactive] public DateTime? DeathDate { get; set; } Property Value DateTime? FirstName [Reactive] public string FirstName { get; set; } Property Value string Gender [Reactive] public string Gender { get; set; } Property Value string LastName [Reactive] public string LastName { get; set; } Property Value string MedicareId [Reactive] public string MedicareId { get; set; } Property Value string MiddleName [Reactive] public string MiddleName { get; set; } Property Value string PatientAddressesViewModel public PatientAddressesViewModel PatientAddressesViewModel { get; } Property Value PatientAddressesViewModel PatientPhonesViewModel public PatientPhonesViewModel PatientPhonesViewModel { get; } Property Value PatientPhonesViewModel PatientPoliciesViewModel public PatientPoliciesViewModel PatientPoliciesViewModel { get; } Property Value PatientPoliciesViewModel ServiceLocation_Id [Reactive] public long? ServiceLocation_Id { get; set; } Property Value long? Validator public ValidatorBase<PatientViewModel> Validator { get; } Property Value ValidatorBase<PatientViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.PatientsViewModel.html": {
    "href": "api/Billing.ViewModels.PatientsViewModel.html",
    "title": "Class PatientsViewModel | CumulusRCM",
    "keywords": "Class PatientsViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PatientsViewModel : CollectionViewModelBase<PatientViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<PatientViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<PatientViewModel, long> PatientsViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<PatientViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<PatientViewModel, long>.CurrentPage CollectionViewModelBase<PatientViewModel, long>.ItemsCount CollectionViewModelBase<PatientViewModel, long>.SelectedItem CollectionViewModelBase<PatientViewModel, long>.PageCount CollectionViewModelBase<PatientViewModel, long>.IsPagingRequired CollectionViewModelBase<PatientViewModel, long>.ItemsLoaded CollectionViewModelBase<PatientViewModel, long>.IsItemSelected CollectionViewModelBase<PatientViewModel, long>.ItemIsSelected CollectionViewModelBase<PatientViewModel, long>.Activator CollectionViewModelBase<PatientViewModel, long>.PageSize CollectionViewModelBase<PatientViewModel, long>.Edit CollectionViewModelBase<PatientViewModel, long>.EditInteraction CollectionViewModelBase<PatientViewModel, long>.SearchResults CollectionViewModelBase<PatientViewModel, long>.LoadItems() CollectionViewModelBase<PatientViewModel, long>.SelectItem(PatientViewModel) CollectionViewModelBase<PatientViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PatientsViewModel(IBillingDataService) public PatientsViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties LastNameFilterExpression public ReactiveFilterExpression<Patient> LastNameFilterExpression { get; } Property Value ReactiveFilterExpression<Patient> Methods AddNewItem() public override PatientViewModel AddNewItem() Returns PatientViewModel"
  },
  "api/Billing.ViewModels.PolicyViewModel.html": {
    "href": "api/Billing.ViewModels.PolicyViewModel.html",
    "title": "Class PolicyViewModel | CumulusRCM",
    "keywords": "Class PolicyViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PolicyViewModel : ViewModelIdBase<Policy>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<Policy> ViewModelIdBase<Policy> PolicyViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<Policy>.Id ViewModelBase<Policy>.Model ViewModelBase<Policy>.CancelChanges() ViewModelBase<Policy>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PolicyViewModel(Policy, IReadOnlyCollection<InsuranceCompany>) public PolicyViewModel(Policy policy, IReadOnlyCollection<InsuranceCompany> insuranceCompanies) Parameters policy Policy insuranceCompanies IReadOnlyCollection<InsuranceCompany> Fields InsuranceCompanies public readonly IReadOnlyCollection<InsuranceCompany> InsuranceCompanies Field Value IReadOnlyCollection<InsuranceCompany> Properties ActiveDate [Reactive] public DateTime? ActiveDate { get; set; } Property Value DateTime? GroupNumber [Reactive] public string GroupNumber { get; set; } Property Value string InactiveDate [Reactive] public DateTime? InactiveDate { get; set; } Property Value DateTime? InsuranceCompany public InsuranceCompany? InsuranceCompany { get; set; } Property Value InsuranceCompany InsuranceCompany_Id [Reactive] public long InsuranceCompany_Id { get; set; } Property Value long Patient_Id [Reactive] public long Patient_Id { get; set; } Property Value long PolicyNumber [Reactive] public string PolicyNumber { get; set; } Property Value string Priority [Reactive] public int Priority { get; set; } Property Value int Validator public ValidatorBase<PolicyViewModel> Validator { get; } Property Value ValidatorBase<PolicyViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.PracticeAddressViewModel.html": {
    "href": "api/Billing.ViewModels.PracticeAddressViewModel.html",
    "title": "Class PracticeAddressViewModel | CumulusRCM",
    "keywords": "Class PracticeAddressViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class PracticeAddressViewModel : ViewModelIdBase<PracticeAddress>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<PracticeAddress> ViewModelIdBase<PracticeAddress> PracticeAddressViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<PracticeAddress>.Id ViewModelBase<PracticeAddress>.Model ViewModelBase<PracticeAddress>.CancelChanges() ViewModelBase<PracticeAddress>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PracticeAddressViewModel(PracticeAddress) public PracticeAddressViewModel(PracticeAddress practiceAddress) Parameters practiceAddress PracticeAddress Properties City [Reactive] public string City { get; set; } Property Value string Patient_Id [Reactive] public long Patient_Id { get; set; } Property Value long Priority [Reactive] public int Priority { get; set; } Property Value int State [Reactive] public State State { get; set; } Property Value State Street1 [Reactive] public string Street1 { get; set; } Property Value string Street2 [Reactive] public string Street2 { get; set; } Property Value string Validator public ValidatorBase<PracticeAddressViewModel> Validator { get; } Property Value ValidatorBase<PracticeAddressViewModel> ZipCode [Reactive] public string ZipCode { get; set; } Property Value string Methods ApplyChangesToModel() public override void ApplyChangesToModel() GetFormattedAddress() public string GetFormattedAddress() Returns string LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.PracticeAddressesViewModel.html": {
    "href": "api/Billing.ViewModels.PracticeAddressesViewModel.html",
    "title": "Class PracticeAddressesViewModel | CumulusRCM",
    "keywords": "Class PracticeAddressesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PracticeAddressesViewModel : CollectionViewModelBase<PracticeAddressViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<PracticeAddressViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<PracticeAddressViewModel, long> PracticeAddressesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<PracticeAddressViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<PracticeAddressViewModel, long>.CurrentPage CollectionViewModelBase<PracticeAddressViewModel, long>.ItemsCount CollectionViewModelBase<PracticeAddressViewModel, long>.SelectedItem CollectionViewModelBase<PracticeAddressViewModel, long>.PageCount CollectionViewModelBase<PracticeAddressViewModel, long>.IsPagingRequired CollectionViewModelBase<PracticeAddressViewModel, long>.ItemsLoaded CollectionViewModelBase<PracticeAddressViewModel, long>.IsItemSelected CollectionViewModelBase<PracticeAddressViewModel, long>.ItemIsSelected CollectionViewModelBase<PracticeAddressViewModel, long>.Activator CollectionViewModelBase<PracticeAddressViewModel, long>.PageSize CollectionViewModelBase<PracticeAddressViewModel, long>.Edit CollectionViewModelBase<PracticeAddressViewModel, long>.EditInteraction CollectionViewModelBase<PracticeAddressViewModel, long>.SearchResults CollectionViewModelBase<PracticeAddressViewModel, long>.LoadItems() CollectionViewModelBase<PracticeAddressViewModel, long>.SelectItem(PracticeAddressViewModel) CollectionViewModelBase<PracticeAddressViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PracticeAddressesViewModel(IBillingDataService, long) public PracticeAddressesViewModel(IBillingDataService dataService, long practiceId) Parameters dataService IBillingDataService practiceId long Methods AddNewItem() public override PracticeAddressViewModel AddNewItem() Returns PracticeAddressViewModel"
  },
  "api/Billing.ViewModels.PracticePhoneViewModel.html": {
    "href": "api/Billing.ViewModels.PracticePhoneViewModel.html",
    "title": "Class PracticePhoneViewModel | CumulusRCM",
    "keywords": "Class PracticePhoneViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PracticePhoneViewModel : ViewModelIdBase<PracticePhone>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<PracticePhone> ViewModelIdBase<PracticePhone> PracticePhoneViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<PracticePhone>.Id ViewModelBase<PracticePhone>.Model ViewModelBase<PracticePhone>.CancelChanges() ViewModelBase<PracticePhone>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PracticePhoneViewModel(PracticePhone) public PracticePhoneViewModel(PracticePhone practicePhone) Parameters practicePhone PracticePhone Properties PhoneKind [Reactive] public PhoneKind PhoneKind { get; set; } Property Value PhoneKind PhoneNumber [Reactive] public string PhoneNumber { get; set; } Property Value string Practice_Id [Reactive] public long Practice_Id { get; set; } Property Value long Priority [Reactive] public int Priority { get; set; } Property Value int Validator public ValidatorBase<PracticePhoneViewModel> Validator { get; } Property Value ValidatorBase<PracticePhoneViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.PracticePhonesViewModel.html": {
    "href": "api/Billing.ViewModels.PracticePhonesViewModel.html",
    "title": "Class PracticePhonesViewModel | CumulusRCM",
    "keywords": "Class PracticePhonesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PracticePhonesViewModel : CollectionViewModelBase<PracticePhoneViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<PracticePhoneViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<PracticePhoneViewModel, long> PracticePhonesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<PracticePhoneViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<PracticePhoneViewModel, long>.CurrentPage CollectionViewModelBase<PracticePhoneViewModel, long>.ItemsCount CollectionViewModelBase<PracticePhoneViewModel, long>.SelectedItem CollectionViewModelBase<PracticePhoneViewModel, long>.PageCount CollectionViewModelBase<PracticePhoneViewModel, long>.IsPagingRequired CollectionViewModelBase<PracticePhoneViewModel, long>.ItemsLoaded CollectionViewModelBase<PracticePhoneViewModel, long>.IsItemSelected CollectionViewModelBase<PracticePhoneViewModel, long>.ItemIsSelected CollectionViewModelBase<PracticePhoneViewModel, long>.Activator CollectionViewModelBase<PracticePhoneViewModel, long>.PageSize CollectionViewModelBase<PracticePhoneViewModel, long>.Edit CollectionViewModelBase<PracticePhoneViewModel, long>.EditInteraction CollectionViewModelBase<PracticePhoneViewModel, long>.SearchResults CollectionViewModelBase<PracticePhoneViewModel, long>.LoadItems() CollectionViewModelBase<PracticePhoneViewModel, long>.SelectItem(PracticePhoneViewModel) CollectionViewModelBase<PracticePhoneViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PracticePhonesViewModel(IBillingDataService, long) public PracticePhonesViewModel(IBillingDataService dataService, long practiceId) Parameters dataService IBillingDataService practiceId long Methods AddNewItem() public override PracticePhoneViewModel AddNewItem() Returns PracticePhoneViewModel"
  },
  "api/Billing.ViewModels.PracticeViewModel.html": {
    "href": "api/Billing.ViewModels.PracticeViewModel.html",
    "title": "Class PracticeViewModel | CumulusRCM",
    "keywords": "Class PracticeViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PracticeViewModel : ViewModelIdBase<Practice>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<Practice> ViewModelIdBase<Practice> PracticeViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<Practice>.Id ViewModelBase<Practice>.Model ViewModelBase<Practice>.CancelChanges() ViewModelBase<Practice>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PracticeViewModel(Practice, IBillingDataService) public PracticeViewModel(Practice practice, IBillingDataService dataService) Parameters practice Practice dataService IBillingDataService Properties CompanyName [Reactive] public string CompanyName { get; set; } Property Value string DateOfEstablishment [Reactive] public DateTime? DateOfEstablishment { get; set; } Property Value DateTime? EIN [Reactive] public string EIN { get; set; } Property Value string Email [Reactive] public string Email { get; set; } Property Value string HIPAAContactEmail [Reactive] public string HIPAAContactEmail { get; set; } Property Value string HIPAAContactPhone [Reactive] public string HIPAAContactPhone { get; set; } Property Value string HIPAAPrivacyOfficer [Reactive] public string HIPAAPrivacyOfficer { get; set; } Property Value string HIPAASecurityOfficer [Reactive] public string HIPAASecurityOfficer { get; set; } Property Value string OwnershipType [Reactive] public string OwnershipType { get; set; } Property Value string PracticeAddressesViewModel public PracticeAddressesViewModel PracticeAddressesViewModel { get; } Property Value PracticeAddressesViewModel Specialty [Reactive] public string Specialty { get; set; } Property Value string TaxId [Reactive] public string TaxId { get; set; } Property Value string Validator public ValidatorBase<PracticeViewModel> Validator { get; } Property Value ValidatorBase<PracticeViewModel> Website [Reactive] public string Website { get; set; } Property Value string Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.PracticesViewModel.html": {
    "href": "api/Billing.ViewModels.PracticesViewModel.html",
    "title": "Class PracticesViewModel | CumulusRCM",
    "keywords": "Class PracticesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class PracticesViewModel : CollectionViewModelBase<PracticeViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<PracticeViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<PracticeViewModel, long> PracticesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<PracticeViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<PracticeViewModel, long>.CurrentPage CollectionViewModelBase<PracticeViewModel, long>.ItemsCount CollectionViewModelBase<PracticeViewModel, long>.SelectedItem CollectionViewModelBase<PracticeViewModel, long>.PageCount CollectionViewModelBase<PracticeViewModel, long>.IsPagingRequired CollectionViewModelBase<PracticeViewModel, long>.ItemsLoaded CollectionViewModelBase<PracticeViewModel, long>.IsItemSelected CollectionViewModelBase<PracticeViewModel, long>.ItemIsSelected CollectionViewModelBase<PracticeViewModel, long>.Activator CollectionViewModelBase<PracticeViewModel, long>.PageSize CollectionViewModelBase<PracticeViewModel, long>.Edit CollectionViewModelBase<PracticeViewModel, long>.EditInteraction CollectionViewModelBase<PracticeViewModel, long>.SearchResults CollectionViewModelBase<PracticeViewModel, long>.LoadItems() CollectionViewModelBase<PracticeViewModel, long>.SelectItem(PracticeViewModel) CollectionViewModelBase<PracticeViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors PracticesViewModel(IBillingDataService) public PracticesViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties FilterExpression public ReactiveFilterExpression<Practice> FilterExpression { get; } Property Value ReactiveFilterExpression<Practice> Methods AddNewItem() public override PracticeViewModel AddNewItem() Returns PracticeViewModel"
  },
  "api/Billing.ViewModels.ProviderBillableServices.html": {
    "href": "api/Billing.ViewModels.ProviderBillableServices.html",
    "title": "Class ProviderBillableServices | CumulusRCM",
    "keywords": "Class ProviderBillableServices Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public record ProviderBillableServices : IEquatable<ProviderBillableServices> Inheritance object ProviderBillableServices Implements IEquatable<ProviderBillableServices> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProviderBillableServices(Provider, PatientBillableServicesViewModel[]) public ProviderBillableServices(Provider Provider, PatientBillableServicesViewModel[] PatientBillableServices) Parameters Provider Provider PatientBillableServices PatientBillableServicesViewModel[] Properties PatientBillableServices public PatientBillableServicesViewModel[] PatientBillableServices { get; init; } Property Value PatientBillableServicesViewModel[] Provider public Provider Provider { get; init; } Property Value Provider"
  },
  "api/Billing.ViewModels.ProviderBillableServicesViewModel.html": {
    "href": "api/Billing.ViewModels.ProviderBillableServicesViewModel.html",
    "title": "Class ProviderBillableServicesViewModel | CumulusRCM",
    "keywords": "Class ProviderBillableServicesViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class ProviderBillableServicesViewModel : CollectionViewModelBase<ProviderBillableServices, Provider>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<ProviderBillableServices>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<ProviderBillableServices, Provider> ProviderBillableServicesViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<ProviderBillableServices> IActivatableViewModel Inherited Members CollectionViewModelBase<ProviderBillableServices, Provider>.CurrentPage CollectionViewModelBase<ProviderBillableServices, Provider>.ItemsCount CollectionViewModelBase<ProviderBillableServices, Provider>.SelectedItem CollectionViewModelBase<ProviderBillableServices, Provider>.PageCount CollectionViewModelBase<ProviderBillableServices, Provider>.IsPagingRequired CollectionViewModelBase<ProviderBillableServices, Provider>.ItemsLoaded CollectionViewModelBase<ProviderBillableServices, Provider>.IsItemSelected CollectionViewModelBase<ProviderBillableServices, Provider>.ItemIsSelected CollectionViewModelBase<ProviderBillableServices, Provider>.Activator CollectionViewModelBase<ProviderBillableServices, Provider>.PageSize CollectionViewModelBase<ProviderBillableServices, Provider>.Edit CollectionViewModelBase<ProviderBillableServices, Provider>.EditInteraction CollectionViewModelBase<ProviderBillableServices, Provider>.SearchResults CollectionViewModelBase<ProviderBillableServices, Provider>.LoadItems() CollectionViewModelBase<ProviderBillableServices, Provider>.SelectItem(ProviderBillableServices) CollectionViewModelBase<ProviderBillableServices, Provider>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProviderBillableServicesViewModel(IBillingDataService) public ProviderBillableServicesViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties EditPatientServices public ReactiveCommand<PatientBillableServicesViewModel, bool> EditPatientServices { get; } Property Value ReactiveCommand<PatientBillableServicesViewModel, bool> EditPatientServicesInteraction public Interaction<PatientBillableServicesViewModel, bool> EditPatientServicesInteraction { get; } Property Value Interaction<PatientBillableServicesViewModel, bool> ServiceDate [Reactive] public DateTime? ServiceDate { get; set; } Property Value DateTime?"
  },
  "api/Billing.ViewModels.ProviderViewModel.html": {
    "href": "api/Billing.ViewModels.ProviderViewModel.html",
    "title": "Class ProviderViewModel | CumulusRCM",
    "keywords": "Class ProviderViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class ProviderViewModel : ViewModelIdBase<Provider>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Inheritance object ReactiveObject ViewModelBase ViewModelBase<Provider> ViewModelIdBase<Provider> ProviderViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Inherited Members ViewModelIdBase<Provider>.Id ViewModelBase<Provider>.Model ViewModelBase<Provider>.CancelChanges() ViewModelBase<Provider>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProviderViewModel(Provider) public ProviderViewModel(Provider provider) Parameters provider Provider Properties CptFavorites [Reactive] public string CptFavorites { get; set; } Property Value string DiagnosisFavorites [Reactive] public string DiagnosisFavorites { get; set; } Property Value string FirstName [Reactive] public string FirstName { get; set; } Property Value string LastName [Reactive] public string LastName { get; set; } Property Value string Npi [Reactive] public string Npi { get; set; } Property Value string Validator public ValidatorBase<ProviderViewModel> Validator { get; } Property Value ValidatorBase<ProviderViewModel> Methods ApplyChangesToModel() public override void ApplyChangesToModel() LoadFromModel() protected override void LoadFromModel()"
  },
  "api/Billing.ViewModels.ProvidersViewModel.html": {
    "href": "api/Billing.ViewModels.ProvidersViewModel.html",
    "title": "Class ProvidersViewModel | CumulusRCM",
    "keywords": "Class ProvidersViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public sealed class ProvidersViewModel : CollectionViewModelBase<ProviderViewModel, long>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ICollectionViewModel<ProviderViewModel>, IActivatableViewModel Inheritance object ReactiveObject CollectionViewModelBase<ProviderViewModel, long> ProvidersViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ICollectionViewModel<ProviderViewModel> IActivatableViewModel Inherited Members CollectionViewModelBase<ProviderViewModel, long>.CurrentPage CollectionViewModelBase<ProviderViewModel, long>.ItemsCount CollectionViewModelBase<ProviderViewModel, long>.SelectedItem CollectionViewModelBase<ProviderViewModel, long>.PageCount CollectionViewModelBase<ProviderViewModel, long>.IsPagingRequired CollectionViewModelBase<ProviderViewModel, long>.ItemsLoaded CollectionViewModelBase<ProviderViewModel, long>.IsItemSelected CollectionViewModelBase<ProviderViewModel, long>.ItemIsSelected CollectionViewModelBase<ProviderViewModel, long>.Activator CollectionViewModelBase<ProviderViewModel, long>.PageSize CollectionViewModelBase<ProviderViewModel, long>.Edit CollectionViewModelBase<ProviderViewModel, long>.EditInteraction CollectionViewModelBase<ProviderViewModel, long>.SearchResults CollectionViewModelBase<ProviderViewModel, long>.LoadItems() CollectionViewModelBase<ProviderViewModel, long>.SelectItem(ProviderViewModel) CollectionViewModelBase<ProviderViewModel, long>.AddNewItem() ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ProvidersViewModel(IBillingDataService) public ProvidersViewModel(IBillingDataService dataService) Parameters dataService IBillingDataService Properties SearchExpression public ReactiveFilterExpression<Provider> SearchExpression { get; set; } Property Value ReactiveFilterExpression<Provider> Methods AddNewItem() public override ProviderViewModel AddNewItem() Returns ProviderViewModel"
  },
  "api/Billing.ViewModels.ReactiveFilter.html": {
    "href": "api/Billing.ViewModels.ReactiveFilter.html",
    "title": "Class ReactiveFilter | CumulusRCM",
    "keywords": "Class ReactiveFilter Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ReactiveFilter : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, IDisposable Inheritance object ReactiveObject ReactiveFilter Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger IDisposable Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReactiveFilter() public ReactiveFilter() ReactiveFilter(Filter) public ReactiveFilter(Filter filter) Parameters filter Filter ReactiveFilter(IEnumerable<ReactiveFilterExpression>) public ReactiveFilter(IEnumerable<ReactiveFilterExpression> expressions) Parameters expressions IEnumerable<ReactiveFilterExpression> Properties ChangeThrottle public int ChangeThrottle { get; set; } Property Value int Clear public IObservable<Unit> Clear { get; } Property Value IObservable<Unit> Filter public Filter Filter { get; } Property Value Filter FilterChanged public IObservable<Filter> FilterChanged { get; } Property Value IObservable<Filter> Methods AddFilterExpression(ReactiveFilterExpression, bool) public void AddFilterExpression(ReactiveFilterExpression reactiveFilterExpression, bool isNewSegment = false) Parameters reactiveFilterExpression ReactiveFilterExpression isNewSegment bool AddFilterExpressions(IEnumerable<ReactiveFilterExpression>, bool) public void AddFilterExpressions(IEnumerable<ReactiveFilterExpression> reactiveFilterExpressions, bool isNewSegment = false) Parameters reactiveFilterExpressions IEnumerable<ReactiveFilterExpression> isNewSegment bool AddFilterExpressions(IEnumerable<ConnectedExpression>, bool) public void AddFilterExpressions(IEnumerable<ConnectedExpression> connectedExpressions, bool isNewSegment = false) Parameters connectedExpressions IEnumerable<ConnectedExpression> isNewSegment bool Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Billing.ViewModels.ReactiveFilterExpression-1.html": {
    "href": "api/Billing.ViewModels.ReactiveFilterExpression-1.html",
    "title": "Class ReactiveFilterExpression<T> | CumulusRCM",
    "keywords": "Class ReactiveFilterExpression<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ReactiveFilterExpression<T> : ReactiveFilterExpression, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Type Parameters T Inheritance object ReactiveObject ReactiveFilterExpression ReactiveFilterExpression<T> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ReactiveFilterExpression.SelectedOperator ReactiveFilterExpression.Operators ReactiveFilterExpression.SelectedProperty ReactiveFilterExpression.Properties ReactiveFilterExpression.SearchTerm ReactiveFilterExpression.SearchTermType ReactiveFilterExpression.DynamicFilterExpression ReactiveFilterExpression.CurrentDynamicFilterExpression ReactiveFilterExpression.FilterExpressionName ReactiveFilterExpression.MinLength ReactiveFilterExpression.Throttle ReactiveFilterExpression.SetSelectedProperty(string) ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReactiveFilterExpression(string, string?, AndOr?) public ReactiveFilterExpression(string defaultSearchPropertyName, string? expressionName = null, AndOr? andOr = null) Parameters defaultSearchPropertyName string expressionName string andOr AndOr"
  },
  "api/Billing.ViewModels.ReactiveFilterExpression.html": {
    "href": "api/Billing.ViewModels.ReactiveFilterExpression.html",
    "title": "Class ReactiveFilterExpression | CumulusRCM",
    "keywords": "Class ReactiveFilterExpression Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ReactiveFilterExpression : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject ReactiveFilterExpression Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Derived ReactiveFilterExpression<T> Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReactiveFilterExpression(ICollection<SelectableProperty>, string?, string, AndOr?) public ReactiveFilterExpression(ICollection<SelectableProperty> searchablePropertyNames, string? defaultSearchPropertyName = null, string expressionName = \"\", AndOr? andOr = null) Parameters searchablePropertyNames ICollection<SelectableProperty> defaultSearchPropertyName string expressionName string andOr AndOr Properties CurrentDynamicFilterExpression public DynamicFilterExpression CurrentDynamicFilterExpression { get; } Property Value DynamicFilterExpression DynamicFilterExpression public IObservable<DynamicFilterExpression> DynamicFilterExpression { get; } Property Value IObservable<DynamicFilterExpression> FilterExpressionName public string FilterExpressionName { get; } Property Value string MinLength public int MinLength { get; init; } Property Value int Operators [ObservableAsProperty] public Operator[] Operators { get; } Property Value Operator[] Properties public ICollection<SelectableProperty> Properties { get; } Property Value ICollection<SelectableProperty> SearchTerm [Reactive] public string? SearchTerm { get; set; } Property Value string SearchTermType [ObservableAsProperty] public Type SearchTermType { get; } Property Value Type SelectedOperator [Reactive] public Operator SelectedOperator { get; set; } Property Value Operator SelectedProperty [Reactive] public SelectableProperty? SelectedProperty { get; set; } Property Value SelectableProperty Throttle public int Throttle { get; init; } Property Value int Methods SetSelectedProperty(string) public void SetSelectedProperty(string propertyName) Parameters propertyName string"
  },
  "api/Billing.ViewModels.ReadOnlyViewModelDataWriter-1.html": {
    "href": "api/Billing.ViewModels.ReadOnlyViewModelDataWriter-1.html",
    "title": "Class ReadOnlyViewModelDataWriter<T> | CumulusRCM",
    "keywords": "Class ReadOnlyViewModelDataWriter<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ReadOnlyViewModelDataWriter<T> : IViewModelDataWriter<T> Type Parameters T Inheritance object ReadOnlyViewModelDataWriter<T> Implements IViewModelDataWriter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods CreateItemAsync(T) public Task<SaveResponse> CreateItemAsync(T item) Parameters item T Returns Task<SaveResponse> DeleteItemAsync(T) public Task<SaveResponse> DeleteItemAsync(T item) Parameters item T Returns Task<SaveResponse> UpdateItemAsync(T) public Task<SaveResponse> UpdateItemAsync(T item) Parameters item T Returns Task<SaveResponse>"
  },
  "api/Billing.ViewModels.Reports.ReportParameterViewModel.html": {
    "href": "api/Billing.ViewModels.Reports.ReportParameterViewModel.html",
    "title": "Class ReportParameterViewModel | CumulusRCM",
    "keywords": "Class ReportParameterViewModel Namespace Billing.ViewModels.Reports Assembly Billing.ViewModels.dll public class ReportParameterViewModel : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject ReportParameterViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReportParameterViewModel(ReportParameter) public ReportParameterViewModel(ReportParameter reportParameter) Parameters reportParameter ReportParameter Properties DateValue [Reactive] public DateTime? DateValue { get; set; } Property Value DateTime? DecimalValue [Reactive] public decimal? DecimalValue { get; set; } Property Value decimal? InputFormat public string InputFormat { get; } Property Value string IntValue [Reactive] public int? IntValue { get; set; } Property Value int? ParameterName public string ParameterName { get; } Property Value string ParameterPrompt public string? ParameterPrompt { get; } Property Value string StringValue [Reactive] public string? StringValue { get; set; } Property Value string Type public Type Type { get; } Property Value Type"
  },
  "api/Billing.ViewModels.Reports.ReportViewerViewModel.html": {
    "href": "api/Billing.ViewModels.Reports.ReportViewerViewModel.html",
    "title": "Class ReportViewerViewModel | CumulusRCM",
    "keywords": "Class ReportViewerViewModel Namespace Billing.ViewModels.Reports Assembly Billing.ViewModels.dll public class ReportViewerViewModel : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject ReportViewerViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Fields ReactiveFilter public readonly ReactiveFilter ReactiveFilter Field Value ReactiveFilter ReactiveFilterExpression public readonly ReactiveFilterExpression ReactiveFilterExpression Field Value ReactiveFilterExpression ReportDefinition public readonly ReportDefinition ReportDefinition Field Value ReportDefinition Methods CreateAsync(IReportService, string) public static Task<ReportViewerViewModel?> CreateAsync(IReportService reportService, string reportName) Parameters reportService IReportService reportName string Returns Task<ReportViewerViewModel> RunReportAsync(int, int) public Task<Response<dynamic>> RunReportAsync(int pageNumber, int pageSize) Parameters pageNumber int pageSize int Returns Task<Response<dynamic>>"
  },
  "api/Billing.ViewModels.Reports.ReportsViewModel.html": {
    "href": "api/Billing.ViewModels.Reports.ReportsViewModel.html",
    "title": "Class ReportsViewModel | CumulusRCM",
    "keywords": "Class ReportsViewModel Namespace Billing.ViewModels.Reports Assembly Billing.ViewModels.dll public class ReportsViewModel : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject ReportsViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReportsViewModel(IReportService) public ReportsViewModel(IReportService reportService) Parameters reportService IReportService Methods GetReportsAsync() public Task<ICollection<(string reportName, string reportDescription)>> GetReportsAsync() Returns Task<ICollection<(string reportName, string reportDescription)>>"
  },
  "api/Billing.ViewModels.Reports.html": {
    "href": "api/Billing.ViewModels.Reports.html",
    "title": "Namespace Billing.ViewModels.Reports | CumulusRCM",
    "keywords": "Namespace Billing.ViewModels.Reports Classes ReportParameterViewModel ReportViewerViewModel ReportsViewModel"
  },
  "api/Billing.ViewModels.SearchOperatorSelectorViewModel.html": {
    "href": "api/Billing.ViewModels.SearchOperatorSelectorViewModel.html",
    "title": "Class SearchOperatorSelectorViewModel | CumulusRCM",
    "keywords": "Class SearchOperatorSelectorViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class SearchOperatorSelectorViewModel : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject SearchOperatorSelectorViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Operators public Operator[] Operators { get; } Property Value Operator[] SelectedOperator [Reactive] public Operator SelectedOperator { get; set; } Property Value Operator"
  },
  "api/Billing.ViewModels.SearchPropertyChooserViewModel.html": {
    "href": "api/Billing.ViewModels.SearchPropertyChooserViewModel.html",
    "title": "Class SearchPropertyChooserViewModel | CumulusRCM",
    "keywords": "Class SearchPropertyChooserViewModel Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class SearchPropertyChooserViewModel : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger Inheritance object ReactiveObject SearchPropertyChooserViewModel Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SearchPropertyChooserViewModel(ICollection<string>, string) public SearchPropertyChooserViewModel(ICollection<string> properties, string defaultProperty) Parameters properties ICollection<string> defaultProperty string Properties Properties public ICollection<string> Properties { get; } Property Value ICollection<string> SelectedProperty [Reactive] public string SelectedProperty { get; set; } Property Value string"
  },
  "api/Billing.ViewModels.SearchViewModel-1.html": {
    "href": "api/Billing.ViewModels.SearchViewModel-1.html",
    "title": "Class SearchViewModel<T> | CumulusRCM",
    "keywords": "Class SearchViewModel<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public abstract class SearchViewModel<T> : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger where T : class Type Parameters T Inheritance object ReactiveObject SearchViewModel<T> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger Derived CptCodeSearchViewModel DiagnosisSearchViewModel PatientSearchViewModel Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SearchViewModel(IBillingDataService) protected SearchViewModel(IBillingDataService billingDataService) Parameters billingDataService IBillingDataService Properties IsItemSelected [ObservableAsProperty] public bool IsItemSelected { get; } Property Value bool ItemSelected public IObservable<T?> ItemSelected { get; } Property Value IObservable<T> SearchOperatorSelector public SearchOperatorSelectorViewModel SearchOperatorSelector { get; } Property Value SearchOperatorSelectorViewModel SelectedItem [Reactive] public T? SelectedItem { get; set; } Property Value T Methods Clear() public void Clear() SearchAsync(string?) public Task<IEnumerable<T>> SearchAsync(string? searchValue) Parameters searchValue string Returns Task<IEnumerable<T>> SearchAsync(string?, CancellationToken) public abstract Task<IEnumerable<T>> SearchAsync(string? searchValue, CancellationToken cancellationToken) Parameters searchValue string cancellationToken CancellationToken Returns Task<IEnumerable<T>> SearchBaseAsync(string?, Filter?) protected Task<Response<T>> SearchBaseAsync(string? searchValue, Filter? filter = null) Parameters searchValue string filter Filter Returns Task<Response<T>>"
  },
  "api/Billing.ViewModels.SelectableProperty.html": {
    "href": "api/Billing.ViewModels.SelectableProperty.html",
    "title": "Class SelectableProperty | CumulusRCM",
    "keywords": "Class SelectableProperty Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public record SelectableProperty : IEquatable<SelectableProperty> Inheritance object SelectableProperty Implements IEquatable<SelectableProperty> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SelectableProperty(string, Type, string?) public SelectableProperty(string Name, Type Type, string? DisplayName = null) Parameters Name string Type Type DisplayName string Properties DisplayName public string DisplayName { get; } Property Value string Name public string Name { get; init; } Property Value string Type public Type Type { get; init; } Property Value Type"
  },
  "api/Billing.ViewModels.ValidatorBase-1.html": {
    "href": "api/Billing.ViewModels.ValidatorBase-1.html",
    "title": "Class ValidatorBase<T> | CumulusRCM",
    "keywords": "Class ValidatorBase<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ValidatorBase<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable Type Parameters T Inheritance object AbstractValidator<T> ValidatorBase<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.OnRuleAdded(IValidationRule<T>) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Pager.Page<T>(IEnumerable<T>, int, int) Properties ValidateValue public Func<T, string, Task<IEnumerable<string>>> ValidateValue { get; } Property Value Func<T, string, Task<IEnumerable<string>>>"
  },
  "api/Billing.ViewModels.ViewModelBase-1.html": {
    "href": "api/Billing.ViewModels.ViewModelBase-1.html",
    "title": "Class ViewModelBase<T> | CumulusRCM",
    "keywords": "Class ViewModelBase<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public abstract class ViewModelBase<T> : ViewModelBase, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges Type Parameters T Inheritance object ReactiveObject ViewModelBase ViewModelBase<T> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Derived ViewModelIdBase<T> Inherited Members ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ViewModelBase(T) protected ViewModelBase(T model) Parameters model T Properties Model public T Model { get; } Property Value T Methods ApplyChanges() public override void ApplyChanges() ApplyChangesToModel() public abstract void ApplyChangesToModel() CancelChanges() public override void CancelChanges() LoadFromModel() protected abstract void LoadFromModel()"
  },
  "api/Billing.ViewModels.ViewModelBase.html": {
    "href": "api/Billing.ViewModels.ViewModelBase.html",
    "title": "Class ViewModelBase | CumulusRCM",
    "keywords": "Class ViewModelBase Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public abstract class ViewModelBase : ReactiveObject, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackChanges Inheritance object ReactiveObject ViewModelBase Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackChanges Derived PatientBillableServicesViewModel ViewModelBase<T> Inherited Members ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties IsNew public bool IsNew { get; protected set; } Property Value bool Methods ApplyChanges() public abstract void ApplyChanges() CancelChanges() public abstract void CancelChanges()"
  },
  "api/Billing.ViewModels.ViewModelDataReader-1.html": {
    "href": "api/Billing.ViewModels.ViewModelDataReader-1.html",
    "title": "Class ViewModelDataReader<T> | CumulusRCM",
    "keywords": "Class ViewModelDataReader<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ViewModelDataReader<T> : IViewModelDataReader<T> where T : class Type Parameters T Inheritance object ViewModelDataReader<T> Implements IViewModelDataReader<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ViewModelDataReader(IBillingDataService) public ViewModelDataReader(IBillingDataService billingDataService) Parameters billingDataService IBillingDataService Properties OrderBy public OrderBy? OrderBy { get; init; } Property Value OrderBy Methods GetDataAsync(Filter?, int, int, OrderBy?) public Task<Response<T>> GetDataAsync(Filter? searchFilter, int pageSize, int currentPage, OrderBy? orderBy = null) Parameters searchFilter Filter pageSize int currentPage int orderBy OrderBy Returns Task<Response<T>>"
  },
  "api/Billing.ViewModels.ViewModelDataReader-2.html": {
    "href": "api/Billing.ViewModels.ViewModelDataReader-2.html",
    "title": "Class ViewModelDataReader<T, TViewModel> | CumulusRCM",
    "keywords": "Class ViewModelDataReader<T, TViewModel> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ViewModelDataReader<T, TViewModel> : IViewModelDataReader<TViewModel> where T : class Type Parameters T TViewModel Inheritance object ViewModelDataReader<T, TViewModel> Implements IViewModelDataReader<TViewModel> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ViewModelDataReader(IBillingDataService, Func<T, TViewModel>) public ViewModelDataReader(IBillingDataService dataService, Func<T, TViewModel> vmFactory) Parameters dataService IBillingDataService vmFactory Func<T, TViewModel> Properties OrderBy public OrderBy? OrderBy { get; init; } Property Value OrderBy Methods GetDataAsync(Filter?, int, int, OrderBy?) public Task<Response<TViewModel>> GetDataAsync(Filter? searchFilter, int pageSize, int currentPage, OrderBy? orderBy = null) Parameters searchFilter Filter pageSize int currentPage int orderBy OrderBy Returns Task<Response<TViewModel>>"
  },
  "api/Billing.ViewModels.ViewModelDataWriter-1.html": {
    "href": "api/Billing.ViewModels.ViewModelDataWriter-1.html",
    "title": "Class ViewModelDataWriter<T> | CumulusRCM",
    "keywords": "Class ViewModelDataWriter<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ViewModelDataWriter<T> : IViewModelDataWriter<T> where T : class, IIdPk Type Parameters T Inheritance object ViewModelDataWriter<T> Implements IViewModelDataWriter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ViewModelDataWriter(IUnitOfWork) public ViewModelDataWriter(IUnitOfWork dataService) Parameters dataService IUnitOfWork Methods CreateItemAsync(T) public Task<SaveResponse> CreateItemAsync(T item) Parameters item T Returns Task<SaveResponse> DeleteItemAsync(T) public Task<SaveResponse> DeleteItemAsync(T item) Parameters item T Returns Task<SaveResponse> UpdateItemAsync(T) public Task<SaveResponse> UpdateItemAsync(T item) Parameters item T Returns Task<SaveResponse>"
  },
  "api/Billing.ViewModels.ViewModelDataWriter-2.html": {
    "href": "api/Billing.ViewModels.ViewModelDataWriter-2.html",
    "title": "Class ViewModelDataWriter<T, TViewModel> | CumulusRCM",
    "keywords": "Class ViewModelDataWriter<T, TViewModel> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public class ViewModelDataWriter<T, TViewModel> : IViewModelDataWriter<TViewModel> where T : class, IIdPk Type Parameters T TViewModel Inheritance object ViewModelDataWriter<T, TViewModel> Implements IViewModelDataWriter<TViewModel> Derived FacilityProvidersViewModelDataWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ViewModelDataWriter(IBillingDataService, Func<TViewModel, T>) public ViewModelDataWriter(IBillingDataService billingDataService, Func<TViewModel, T> getModel) Parameters billingDataService IBillingDataService getModel Func<TViewModel, T> Fields BillingDataService protected readonly IBillingDataService BillingDataService Field Value IBillingDataService GetModel protected readonly Func<TViewModel, T> GetModel Field Value Func<TViewModel, T> ModelViewModelDataWriter protected readonly ViewModelDataWriter<T> ModelViewModelDataWriter Field Value ViewModelDataWriter<T> Methods CreateItemAsync(TViewModel) public Task<SaveResponse> CreateItemAsync(TViewModel viewModel) Parameters viewModel TViewModel Returns Task<SaveResponse> DeleteItemAsync(TViewModel) public virtual Task<SaveResponse> DeleteItemAsync(TViewModel item) Parameters item TViewModel Returns Task<SaveResponse> UpdateItemAsync(TViewModel) public Task<SaveResponse> UpdateItemAsync(TViewModel item) Parameters item TViewModel Returns Task<SaveResponse>"
  },
  "api/Billing.ViewModels.ViewModelIdBase-1.html": {
    "href": "api/Billing.ViewModels.ViewModelIdBase-1.html",
    "title": "Class ViewModelIdBase<T> | CumulusRCM",
    "keywords": "Class ViewModelIdBase<T> Namespace Billing.ViewModels Assembly Billing.ViewModels.dll public abstract class ViewModelIdBase<T> : ViewModelBase<T>, IReactiveNotifyPropertyChanged<IReactiveObject>, IHandleObservableErrors, IReactiveObject, INotifyPropertyChanged, INotifyPropertyChanging, IEnableLogger, ITrackModelChanges, ITrackChanges where T : IIdPk Type Parameters T Inheritance object ReactiveObject ViewModelBase ViewModelBase<T> ViewModelIdBase<T> Implements IReactiveNotifyPropertyChanged<IReactiveObject> IHandleObservableErrors IReactiveObject INotifyPropertyChanged INotifyPropertyChanging IEnableLogger ITrackModelChanges ITrackChanges Derived BillableServiceViewModel ClearinghouseViewModel CptCodeViewModel DiagnosisViewModel FacilityProviderViewModel FacilityViewModel InsuranceCompanyViewModel PatientAddressViewModel PatientPhoneViewModel PatientViewModel PolicyViewModel PracticeAddressViewModel PracticePhoneViewModel PracticeViewModel ProviderViewModel Inherited Members ViewModelBase<T>.Model ViewModelBase<T>.LoadFromModel() ViewModelBase<T>.ApplyChangesToModel() ViewModelBase<T>.CancelChanges() ViewModelBase<T>.ApplyChanges() ViewModelBase.IsNew ReactiveObject.SuppressChangeNotifications() ReactiveObject.AreChangeNotificationsEnabled() ReactiveObject.DelayChangeNotifications() ReactiveObject.Changing ReactiveObject.Changed ReactiveObject.ThrownExceptions ReactiveObject.PropertyChanging ReactiveObject.PropertyChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ViewModelIdBase(T) protected ViewModelIdBase(T model) Parameters model T Properties Id public long Id { get; protected set; } Property Value long"
  },
  "api/Billing.ViewModels.html": {
    "href": "api/Billing.ViewModels.html",
    "title": "Namespace Billing.ViewModels | CumulusRCM",
    "keywords": "Namespace Billing.ViewModels Classes BillableServiceDataReader BillableServiceViewModel ChooserViewModel<T, TKey> ClearinghouseViewModel ClearinghousesViewModel CodeSearchViewModel<T> CollectionViewModelBase<T, TKey> CptCodeChooserViewModel CptCodeSearchViewModel CptCodeViewModel CptCodesViewModel DiagnosesChooserViewModel DiagnosesViewModel DiagnosisSearchViewModel DiagnosisViewModel DynamicFilterExpression FacilitiesViewModel FacilityProviderViewModel FacilityProvidersViewModel FacilityProvidersViewModelDataReader FacilityProvidersViewModelDataWriter FacilityViewModel InsuranceCompaniesViewModel InsuranceCompanyViewModel InsuranceCompanyViewModel.InsuranceValidator PatientAddressViewModel PatientAddressesViewModel PatientBillableServicesViewModel PatientPhoneViewModel PatientPhonesViewModel PatientPoliciesViewModel PatientSearchViewModel PatientViewModel PatientViewModel.PatientValidator PatientsViewModel PolicyViewModel PracticeAddressViewModel PracticeAddressesViewModel PracticePhoneViewModel PracticePhonesViewModel PracticeViewModel PracticesViewModel ProviderBillableServices ProviderBillableServicesViewModel ProviderViewModel ProvidersViewModel ReactiveFilter ReactiveFilterExpression ReactiveFilterExpression<T> ReadOnlyViewModelDataWriter<T> SearchOperatorSelectorViewModel SearchPropertyChooserViewModel SearchViewModel<T> SelectableProperty ValidatorBase<T> ViewModelBase ViewModelBase<T> ViewModelDataReader<T> ViewModelDataReader<T, TViewModel> ViewModelDataWriter<T> ViewModelDataWriter<T, TViewModel> ViewModelIdBase<T>"
  },
  "api/BillingServerConsole.Startup.html": {
    "href": "api/BillingServerConsole.Startup.html",
    "title": "Class Startup | CumulusRCM",
    "keywords": "Class Startup Namespace BillingServerConsole Assembly BillingServerConsole.dll public class Startup Inheritance object Startup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods UpdateDatabaseAsync() public static Task UpdateDatabaseAsync() Returns Task"
  },
  "api/BillingServerConsole.html": {
    "href": "api/BillingServerConsole.html",
    "title": "Namespace BillingServerConsole | CumulusRCM",
    "keywords": "Namespace BillingServerConsole Classes Startup"
  },
  "api/DataAccess.ColumnInfo.html": {
    "href": "api/DataAccess.ColumnInfo.html",
    "title": "Class ColumnInfo | CumulusRCM",
    "keywords": "Class ColumnInfo Namespace DataAccess Assembly DataAccess.dll public class ColumnInfo : IColumnInfo Inheritance object ColumnInfo Implements IColumnInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ColumnInfo(string, string?, bool?, bool?, bool?, Type?) public ColumnInfo(string columnName, string? propertyName = null, bool? isIsSkipByDefault = false, bool? canWrite = true, bool? isPrimaryKey = false, Type? type = null) Parameters columnName string propertyName string isIsSkipByDefault bool? canWrite bool? isPrimaryKey bool? type Type Properties Alias public string Alias { get; } Property Value string CanWrite public bool CanWrite { get; init; } Property Value bool ColumnName public string ColumnName { get; init; } Property Value string IsPrimaryKey public bool IsPrimaryKey { get; init; } Property Value bool IsSkipByDefault public bool IsSkipByDefault { get; init; } Property Value bool PropertyName public string PropertyName { get; init; } Property Value string Type public Type Type { get; init; } Property Value Type Methods Combine(ColumnInfo?, ColumnInfo?) public static ColumnInfo Combine(ColumnInfo? first, ColumnInfo? second) Parameters first ColumnInfo second ColumnInfo Returns ColumnInfo FromAttribute(PropertyInfo) public static ColumnInfo? FromAttribute(PropertyInfo property) Parameters property PropertyInfo Returns ColumnInfo"
  },
  "api/DataAccess.DatabaseMap.html": {
    "href": "api/DataAccess.DatabaseMap.html",
    "title": "Class DatabaseMap | CumulusRCM",
    "keywords": "Class DatabaseMap Namespace DataAccess Assembly DataAccess.dll public abstract class DatabaseMap : IDatabaseMap Inheritance object DatabaseMap Implements IDatabaseMap Derived BillingDbMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DatabaseMap(ITableInfo[]?) protected DatabaseMap(ITableInfo[]? dbMap = null) Parameters dbMap ITableInfo[] Properties Map public ITableInfo[] Map { get; protected init; } Property Value ITableInfo[]"
  },
  "api/DataAccess.IColumnInfo.html": {
    "href": "api/DataAccess.IColumnInfo.html",
    "title": "Interface IColumnInfo | CumulusRCM",
    "keywords": "Interface IColumnInfo Namespace DataAccess Assembly DataAccess.Shared.dll public interface IColumnInfo Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Alias string Alias { get; } Property Value string CanWrite bool CanWrite { get; init; } Property Value bool ColumnName string ColumnName { get; init; } Property Value string IsPrimaryKey bool IsPrimaryKey { get; init; } Property Value bool IsSkipByDefault bool IsSkipByDefault { get; init; } Property Value bool PropertyName string PropertyName { get; init; } Property Value string Type Type Type { get; init; } Property Value Type"
  },
  "api/DataAccess.Queries-1.html": {
    "href": "api/DataAccess.Queries-1.html",
    "title": "Class Queries<T> | CumulusRCM",
    "keywords": "Class Queries<T> Namespace DataAccess Assembly DataAccess.dll public class Queries<T> : IQueries<T> where T : class Type Parameters T Inheritance object Queries<T> Implements IQueries<T> Derived BillableServiceQueries FacilityQueries PatientQueries ProviderQueries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Queries(IReader<T>) public Queries(IReader<T> reader) Parameters reader IReader<T> Methods GetAllAsync(string?, int, int, string?) public Task<Response<T>> GetAllAsync(string? filterJson = null, int pageSize = 0, int pageNumber = 1, string? orderByJson = null) Parameters filterJson string pageSize int pageNumber int orderByJson string Returns Task<Response<T>> GetAllDynamicAsync(IReadOnlyCollection<string>, string?, int, int, string?) public Task<Response<dynamic>> GetAllDynamicAsync(IReadOnlyCollection<string> columnNames, string? filterJson = null, int pageSize = 0, int pageNumber = 1, string? orderByJson = null) Parameters columnNames IReadOnlyCollection<string> filterJson string pageSize int pageNumber int orderByJson string Returns Task<Response<dynamic>> GetByModelAsync(T) public Task<Response<T>> GetByModelAsync(T item) Parameters item T Returns Task<Response<T>> GetByPkAsync(string) public Task<Response<T>> GetByPkAsync(string pk) Parameters pk string Returns Task<Response<T>> GetByPkDynamicAsync(string, IReadOnlyCollection<string>) public Task<Response<dynamic>> GetByPkDynamicAsync(string pk, IReadOnlyCollection<string> columnNames) Parameters pk string columnNames IReadOnlyCollection<string> Returns Task<Response<dynamic>> GetCountAsync(string?) public Task<int> GetCountAsync(string? filterJson = null) Parameters filterJson string Returns Task<int>"
  },
  "api/DataAccess.Reader-1.html": {
    "href": "api/DataAccess.Reader-1.html",
    "title": "Class Reader<T> | CumulusRCM",
    "keywords": "Class Reader<T> Namespace DataAccess Assembly DataAccess.dll public class Reader<T> : Reader, IReader<T> where T : class Type Parameters T Inheritance object Reader Reader<T> Implements IReader<T> Derived BillableServiceReader FacilityReader PatientReader ProviderReader Inherited Members Reader.getCountAsync(string, Filter) Reader.paramsToString(DynamicParameters) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Reader(IDbConnectionManager, IDatabaseMapper) public Reader(IDbConnectionManager dbConnectionService, IDatabaseMapper databaseMapper) Parameters dbConnectionService IDbConnectionManager databaseMapper IDatabaseMapper Fields TableSqlBuilder protected readonly TableSqlBuilder TableSqlBuilder Field Value TableSqlBuilder dbConnectionService protected readonly IDbConnectionManager dbConnectionService Field Value IDbConnectionManager Methods GetAllAsync(Filter?, int, int, OrderBy?) public virtual Task<IReadOnlyCollection<T>> GetAllAsync(Filter? filter = null, int pageSize = 0, int pageNum = 0, OrderBy? orderBy = null) Parameters filter Filter pageSize int pageNum int orderBy OrderBy Returns Task<IReadOnlyCollection<T>> GetAllByPkAsync(IEnumerable<string>) public virtual Task<IReadOnlyCollection<T>> GetAllByPkAsync(IEnumerable<string> pkValues) Parameters pkValues IEnumerable<string> Returns Task<IReadOnlyCollection<T>> GetAllDynamicAsync(IReadOnlyCollection<string>, Filter?, int, int, OrderBy?) public Task<IReadOnlyCollection<dynamic>> GetAllDynamicAsync(IReadOnlyCollection<string> columns, Filter? filter = null, int pageSize = 0, int pageNum = 0, OrderBy? orderBy = null) Parameters columns IReadOnlyCollection<string> filter Filter pageSize int pageNum int orderBy OrderBy Returns Task<IReadOnlyCollection<dynamic>> GetByPkAsync(string) public virtual Task<T?> GetByPkAsync(string pkValue) Parameters pkValue string Returns Task<T> GetByPkDynamicAsync(string, IReadOnlyCollection<string>) public virtual Task<dynamic?> GetByPkDynamicAsync(string pkValue, IReadOnlyCollection<string> columnNames) Parameters pkValue string columnNames IReadOnlyCollection<string> Returns Task<dynamic> GetCountAsync(Filter?) public override Task<int> GetCountAsync(Filter? filter = null) Parameters filter Filter Returns Task<int>"
  },
  "api/DataAccess.Reader.html": {
    "href": "api/DataAccess.Reader.html",
    "title": "Class Reader | CumulusRCM",
    "keywords": "Class Reader Namespace DataAccess Assembly DataAccess.dll public class Reader Inheritance object Reader Derived Reader<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Reader(IDbConnectionManager, string) public Reader(IDbConnectionManager dbConnectionService, string baseSql) Parameters dbConnectionService IDbConnectionManager baseSql string Methods GetAllAsync(Filter?, int, int, OrderBy?) public Task<IReadOnlyCollection<dynamic>> GetAllAsync(Filter? filter = null, int pageSize = 0, int pageNum = 1, OrderBy? orderBy = null) Parameters filter Filter pageSize int pageNum int orderBy OrderBy Returns Task<IReadOnlyCollection<dynamic>> GetCountAsync(Filter?) public virtual Task<int> GetCountAsync(Filter? filter = null) Parameters filter Filter Returns Task<int> getCountAsync(string, Filter?) protected Task<int> getCountAsync(string countSql, Filter? filter = null) Parameters countSql string filter Filter Returns Task<int> paramsToString(DynamicParameters?) protected string paramsToString(DynamicParameters? parms) Parameters parms DynamicParameters Returns string"
  },
  "api/DataAccess.SequenceGenerator.html": {
    "href": "api/DataAccess.SequenceGenerator.html",
    "title": "Class SequenceGenerator | CumulusRCM",
    "keywords": "Class SequenceGenerator Namespace DataAccess Assembly DataAccess.dll public class SequenceGenerator : ISequenceGenerator Inheritance object SequenceGenerator Implements ISequenceGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SequenceGenerator(IDatabaseMapper, IDbConnectionManager) public SequenceGenerator(IDatabaseMapper databaseMapper, IDbConnectionManager connectionManager) Parameters databaseMapper IDatabaseMapper connectionManager IDbConnectionManager Methods GetSequencesAsync(ITableInfo, int, IDbConnection?, IDbTransaction?) public Task<long> GetSequencesAsync(ITableInfo tableInfo, int cnt, IDbConnection? dbConnection = null, IDbTransaction? dbTransaction = null) Parameters tableInfo ITableInfo cnt int dbConnection IDbConnection dbTransaction IDbTransaction Returns Task<long> GetSequencesAsync<T>(int, IDbConnection?, IDbTransaction?) public Task<long> GetSequencesAsync<T>(int cnt, IDbConnection? dbConnection = null, IDbTransaction? dbTransaction = null) where T : class Parameters cnt int dbConnection IDbConnection dbTransaction IDbTransaction Returns Task<long> Type Parameters T"
  },
  "api/DataAccess.Services.DapperSqlDateOnlyTypeHandler.html": {
    "href": "api/DataAccess.Services.DapperSqlDateOnlyTypeHandler.html",
    "title": "Class DapperSqlDateOnlyTypeHandler | CumulusRCM",
    "keywords": "Class DapperSqlDateOnlyTypeHandler Namespace DataAccess.Services Assembly DataAccess.dll public class DapperSqlDateOnlyTypeHandler : SqlMapper.TypeHandler<DateOnly>, SqlMapper.ITypeHandler Inheritance object SqlMapper.TypeHandler<DateOnly> DapperSqlDateOnlyTypeHandler Implements SqlMapper.ITypeHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Parse(object) Parse a database value back to a typed value public override DateOnly Parse(object value) Parameters value object The value from the database Returns DateOnly The typed value SetValue(IDbDataParameter, DateOnly) Assign the value of a parameter before a command executes public override void SetValue(IDbDataParameter parameter, DateOnly date) Parameters parameter IDbDataParameter The parameter to configure date DateOnly"
  },
  "api/DataAccess.Services.DataServiceBase.html": {
    "href": "api/DataAccess.Services.DataServiceBase.html",
    "title": "Class DataServiceBase | CumulusRCM",
    "keywords": "Class DataServiceBase Namespace DataAccess.Services Assembly DataAccess.dll public abstract record DataServiceBase : DataServiceUnitOfWork, IEquatable<DataServiceUnitOfWork>, IDataService, IUnitOfWork, IEquatable<DataServiceBase> Inheritance object DataServiceUnitOfWork DataServiceBase Implements IEquatable<DataServiceUnitOfWork> IDataService IUnitOfWork IEquatable<DataServiceBase> Derived BillingDataService Inherited Members DataServiceUnitOfWork.QueuedItemsCount DataServiceUnitOfWork.SaveStrategy DataServiceUnitOfWork.DatabaseMapper DataServiceUnitOfWork.Reset() DataServiceUnitOfWork.Add<T>(DataChangeKind, T) DataServiceUnitOfWork.AddCollection<T>(DataChangeKind, ICollection<T>) DataServiceUnitOfWork.SaveAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DataServiceBase(IReaderFactory, ISaveStrategy, IDatabaseMapper) protected DataServiceBase(IReaderFactory ReaderFactory, ISaveStrategy SaveStrategy, IDatabaseMapper DatabaseMapper) Parameters ReaderFactory IReaderFactory SaveStrategy ISaveStrategy DatabaseMapper IDatabaseMapper Properties ReaderFactory public IReaderFactory ReaderFactory { get; init; } Property Value IReaderFactory Methods GetQueries<T>() public virtual IQueries<T> GetQueries<T>() where T : class Returns IQueries<T> Type Parameters T"
  },
  "api/DataAccess.Services.DatabaseMapper.html": {
    "href": "api/DataAccess.Services.DatabaseMapper.html",
    "title": "Class DatabaseMapper | CumulusRCM",
    "keywords": "Class DatabaseMapper Namespace DataAccess.Services Assembly DataAccess.dll public class DatabaseMapper : IDatabaseMapper Inheritance object DatabaseMapper Implements IDatabaseMapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DatabaseMapper(IDatabaseMap?) public DatabaseMapper(IDatabaseMap? dbMap = null) Parameters dbMap IDatabaseMap Methods GetTableInfo(Type) public ITableInfo GetTableInfo(Type type) Parameters type Type Returns ITableInfo GetTableInfo<T>() public ITableInfo GetTableInfo<T>() Returns ITableInfo Type Parameters T"
  },
  "api/DataAccess.Services.ReportService.html": {
    "href": "api/DataAccess.Services.ReportService.html",
    "title": "Class ReportService | CumulusRCM",
    "keywords": "Class ReportService Namespace DataAccess.Services Assembly DataAccess.dll public class ReportService : IReportService Inheritance object ReportService Implements IReportService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReportService(IDataService, IDbConnectionManager) public ReportService(IDataService dataService, IDbConnectionManager connectionManager) Parameters dataService IDataService connectionManager IDbConnectionManager Methods GetCountAsync(ReportDefinition) public Task<long> GetCountAsync(ReportDefinition reportDefinition) Parameters reportDefinition ReportDefinition Returns Task<long> GetReportDataAsync(ReportDefinition, int, int) public Task<Response<dynamic>> GetReportDataAsync(ReportDefinition reportDefinition, int pageSize = 0, int pageNum = 0) Parameters reportDefinition ReportDefinition pageSize int pageNum int Returns Task<Response<dynamic>> GetReportDefinitionAsync(string) public Task<Response<ReportDefinition>> GetReportDefinitionAsync(string reportName) Parameters reportName string Returns Task<Response<ReportDefinition>> GetReportsAsync(bool) public Task<Response<(string reportName, string reportDescription)>> GetReportsAsync(bool forceRefresh) Parameters forceRefresh bool Returns Task<Response<(string reportName, string reportDescription)>>"
  },
  "api/DataAccess.Services.SqlBuilders.FilterSqlBuilder.html": {
    "href": "api/DataAccess.Services.SqlBuilders.FilterSqlBuilder.html",
    "title": "Class FilterSqlBuilder | CumulusRCM",
    "keywords": "Class FilterSqlBuilder Namespace DataAccess.Services.SqlBuilders Assembly DataAccess.dll public static class FilterSqlBuilder Inheritance object FilterSqlBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToSqlClause(Filter, IReadOnlyCollection<IColumnInfo>?) public static (string whereClause, DynamicParameters dynamicParameters) ToSqlClause(this Filter filter, IReadOnlyCollection<IColumnInfo>? columnsMap) Parameters filter Filter columnsMap IReadOnlyCollection<IColumnInfo> Returns (string whereClause, DynamicParameters dynamicParameters)"
  },
  "api/DataAccess.Services.SqlBuilders.SqlBuilder.html": {
    "href": "api/DataAccess.Services.SqlBuilders.SqlBuilder.html",
    "title": "Class SqlBuilder | CumulusRCM",
    "keywords": "Class SqlBuilder Namespace DataAccess.Services.SqlBuilders Assembly DataAccess.dll public class SqlBuilder Inheritance object SqlBuilder Derived TableSqlBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Fields PREFIX_PARAMETER_NAME protected const string PREFIX_PARAMETER_NAME = \"@\" Field Value string Methods GetCountSql(string, Filter?) public static string GetCountSql(string baseSql, Filter? filter) Parameters baseSql string filter Filter Returns string OrderByToSqlClause(OrderBy, ITableInfo?) public static string OrderByToSqlClause(OrderBy orderBy, ITableInfo? tableInfo = null) Parameters orderBy OrderBy tableInfo ITableInfo Returns string"
  },
  "api/DataAccess.Services.SqlBuilders.TableSqlBuilder.html": {
    "href": "api/DataAccess.Services.SqlBuilders.TableSqlBuilder.html",
    "title": "Class TableSqlBuilder | CumulusRCM",
    "keywords": "Class TableSqlBuilder Namespace DataAccess.Services.SqlBuilders Assembly DataAccess.dll public class TableSqlBuilder : SqlBuilder Inheritance object SqlBuilder TableSqlBuilder Inherited Members SqlBuilder.PREFIX_PARAMETER_NAME SqlBuilder.OrderByToSqlClause(OrderBy, ITableInfo) SqlBuilder.GetCountSql(string, Filter) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors TableSqlBuilder(ITableInfo) public TableSqlBuilder(ITableInfo tableInfo) Parameters tableInfo ITableInfo Methods GetCountSql(Filter?) public string GetCountSql(Filter? filter = null) Parameters filter Filter Returns string GetReadSql(Filter?, int, int, OrderBy?, IReadOnlyCollection<string>?) public (string sql, DynamicParameters? dynamicParameters) GetReadSql(Filter? filter = null, int pageSize = 0, int pageNum = 1, OrderBy? orderBy = null, IReadOnlyCollection<string>? columnNames = null) Parameters filter Filter pageSize int pageNum int orderBy OrderBy columnNames IReadOnlyCollection<string> Returns (string whereClause, DynamicParameters dynamicParameters) GetWriteSql(IDataChange) public string GetWriteSql(IDataChange dataChange) Parameters dataChange IDataChange Returns string IsString(string) public bool IsString(string propertyName) Parameters propertyName string Returns bool"
  },
  "api/DataAccess.Services.SqlBuilders.TableSqlBuilderExtensions.html": {
    "href": "api/DataAccess.Services.SqlBuilders.TableSqlBuilderExtensions.html",
    "title": "Class TableSqlBuilderExtensions | CumulusRCM",
    "keywords": "Class TableSqlBuilderExtensions Namespace DataAccess.Services.SqlBuilders Assembly DataAccess.dll public static class TableSqlBuilderExtensions Inheritance object TableSqlBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCountSql(ITableInfo, Filter?) public static string GetCountSql(this ITableInfo tableInfo, Filter? filter = null) Parameters tableInfo ITableInfo filter Filter Returns string GetReadSql(ITableInfo, Filter?, int, int, OrderBy?, IReadOnlyCollection<string>?) public static (string sql, DynamicParameters? dynamicParameters) GetReadSql(this ITableInfo tableInfo, Filter? filter = null, int pageSize = 0, int pageNum = 1, OrderBy? orderBy = null, IReadOnlyCollection<string>? columnNames = null) Parameters tableInfo ITableInfo filter Filter pageSize int pageNum int orderBy OrderBy columnNames IReadOnlyCollection<string> Returns (string whereClause, DynamicParameters dynamicParameters) GetWriteSql(ITableInfo, IDataChange) public static string GetWriteSql(this ITableInfo tableInfo, IDataChange dataChange) Parameters tableInfo ITableInfo dataChange IDataChange Returns string"
  },
  "api/DataAccess.Services.SqlBuilders.html": {
    "href": "api/DataAccess.Services.SqlBuilders.html",
    "title": "Namespace DataAccess.Services.SqlBuilders | CumulusRCM",
    "keywords": "Namespace DataAccess.Services.SqlBuilders Classes FilterSqlBuilder SqlBuilder TableSqlBuilder TableSqlBuilderExtensions"
  },
  "api/DataAccess.Services.SqlTimeOnlyTypeHandler.html": {
    "href": "api/DataAccess.Services.SqlTimeOnlyTypeHandler.html",
    "title": "Class SqlTimeOnlyTypeHandler | CumulusRCM",
    "keywords": "Class SqlTimeOnlyTypeHandler Namespace DataAccess.Services Assembly DataAccess.dll public class SqlTimeOnlyTypeHandler : SqlMapper.TypeHandler<TimeOnly>, SqlMapper.ITypeHandler Inheritance object SqlMapper.TypeHandler<TimeOnly> SqlTimeOnlyTypeHandler Implements SqlMapper.ITypeHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Parse(object) Parse a database value back to a typed value public override TimeOnly Parse(object value) Parameters value object The value from the database Returns TimeOnly The typed value SetValue(IDbDataParameter, TimeOnly) Assign the value of a parameter before a command executes public override void SetValue(IDbDataParameter parameter, TimeOnly time) Parameters parameter IDbDataParameter The parameter to configure time TimeOnly"
  },
  "api/DataAccess.Services.html": {
    "href": "api/DataAccess.Services.html",
    "title": "Namespace DataAccess.Services | CumulusRCM",
    "keywords": "Namespace DataAccess.Services Classes DapperSqlDateOnlyTypeHandler DataServiceBase DatabaseMapper ReportService SqlTimeOnlyTypeHandler"
  },
  "api/DataAccess.Shared.AndOr.html": {
    "href": "api/DataAccess.Shared.AndOr.html",
    "title": "Class AndOr | CumulusRCM",
    "keywords": "Class AndOr Namespace DataAccess.Shared Assembly DataAccess.Shared.dll [JsonConverter(typeof(EnumerationJsonConverter<AndOr>))] public sealed record AndOr : Enumeration, IEquatable<Enumeration>, IEquatable<AndOr> Inheritance object Enumeration AndOr Implements IEquatable<Enumeration> IEquatable<AndOr> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors AndOr() public AndOr() AndOr(int, string) public AndOr(int value, string name) Parameters value int name string Fields And public static readonly AndOr And Field Value AndOr Or public static readonly AndOr Or Field Value AndOr"
  },
  "api/DataAccess.Shared.ColumnInfoAttribute.html": {
    "href": "api/DataAccess.Shared.ColumnInfoAttribute.html",
    "title": "Class ColumnInfoAttribute | CumulusRCM",
    "keywords": "Class ColumnInfoAttribute Namespace DataAccess.Shared Assembly DataAccess.Shared.dll [AttributeUsage(AttributeTargets.Property)] public sealed class ColumnInfoAttribute : Attribute Inheritance object Attribute ColumnInfoAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ColumnInfoAttribute(string?, bool, bool, bool, Type?) public ColumnInfoAttribute(string? columnName = null, bool isSkipByDefault = false, bool canWrite = true, bool isPrimaryKey = false, Type? type = null) Parameters columnName string isSkipByDefault bool canWrite bool isPrimaryKey bool type Type Properties CanWrite public bool CanWrite { get; } Property Value bool ColumnName public string? ColumnName { get; } Property Value string IsPrimaryKey public bool IsPrimaryKey { get; } Property Value bool IsSkipByDefault public bool IsSkipByDefault { get; } Property Value bool Type public Type Type { get; } Property Value Type"
  },
  "api/DataAccess.Shared.ConnectedExpression-1.html": {
    "href": "api/DataAccess.Shared.ConnectedExpression-1.html",
    "title": "Class ConnectedExpression<T> | CumulusRCM",
    "keywords": "Class ConnectedExpression<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record ConnectedExpression<T> : ConnectedExpression, IEquatable<ConnectedExpression>, IEquatable<ConnectedExpression<T>> Type Parameters T Inheritance object ConnectedExpression ConnectedExpression<T> Implements IEquatable<ConnectedExpression> IEquatable<ConnectedExpression<T>> Inherited Members ConnectedExpression.FilterExpression ConnectedExpression.AndOr ConnectedExpression.TryParse(string, out ConnectedExpression) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ConnectedExpression(FilterExpression<T>, AndOr, object?) public ConnectedExpression(FilterExpression<T> filterExpression, AndOr andOr, object? value = null) Parameters filterExpression FilterExpression<T> andOr AndOr value object ConnectedExpression(Expression<Func<T, object>>, Operator, AndOr, object?) public ConnectedExpression(Expression<Func<T, object>> propertyNameExpression, Operator op, AndOr andOr, object? value = null) Parameters propertyNameExpression Expression<Func<T, object>> op Operator andOr AndOr value object ConnectedExpression(string, Operator, AndOr, object?) public ConnectedExpression(string propertyName, Operator op, AndOr andOr, object? value = null) Parameters propertyName string op Operator andOr AndOr value object"
  },
  "api/DataAccess.Shared.ConnectedExpression.html": {
    "href": "api/DataAccess.Shared.ConnectedExpression.html",
    "title": "Class ConnectedExpression | CumulusRCM",
    "keywords": "Class ConnectedExpression Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record ConnectedExpression : IEquatable<ConnectedExpression> Inheritance object ConnectedExpression Implements IEquatable<ConnectedExpression> Derived ConnectedExpression<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ConnectedExpression() public ConnectedExpression() ConnectedExpression(FilterExpression, AndOr?) public ConnectedExpression(FilterExpression filterExpression, AndOr? andOr = null) Parameters filterExpression FilterExpression andOr AndOr ConnectedExpression(string, Operator, AndOr?, object?) public ConnectedExpression(string propertyName, Operator op, AndOr? andOr = null, object? value = null) Parameters propertyName string op Operator andOr AndOr value object Properties AndOr public AndOr AndOr { get; init; } Property Value AndOr FilterExpression public FilterExpression FilterExpression { get; set; } Property Value FilterExpression Methods TryParse(string, out ConnectedExpression?) public static bool TryParse(string json, out ConnectedExpression? filterSegment) Parameters json string filterSegment ConnectedExpression Returns bool"
  },
  "api/DataAccess.Shared.DataChange-1.html": {
    "href": "api/DataAccess.Shared.DataChange-1.html",
    "title": "Class DataChange<T> | CumulusRCM",
    "keywords": "Class DataChange<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class DataChange<T> : IDataChange Type Parameters T Inheritance object DataChange<T> Implements IDataChange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties DataChangeKind public DataChangeKind DataChangeKind { get; init; } Property Value DataChangeKind Entity public object Entity { get; } Property Value object EntityType public Type EntityType { get; } Property Value Type IsCollection public bool IsCollection { get; init; } Property Value bool TableInfo public ITableInfo TableInfo { get; } Property Value ITableInfo"
  },
  "api/DataAccess.Shared.DataChangeComparer.html": {
    "href": "api/DataAccess.Shared.DataChangeComparer.html",
    "title": "Class DataChangeComparer | CumulusRCM",
    "keywords": "Class DataChangeComparer Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class DataChangeComparer : IEqualityComparer<IDataChange> Inheritance object DataChangeComparer Implements IEqualityComparer<IDataChange> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Equals(IDataChange?, IDataChange?) Determines whether the specified objects are equal. public bool Equals(IDataChange? x, IDataChange? y) Parameters x IDataChange The first object of type T to compare. y IDataChange The second object of type T to compare. Returns bool true if the specified objects are equal; otherwise, false. GetHashCode(IDataChange?) Returns a hash code for the specified object. public int GetHashCode(IDataChange? dataChange) Parameters dataChange IDataChange Returns int A hash code for the specified object. Exceptions ArgumentNullException The type of obj is a reference type and obj is null."
  },
  "api/DataAccess.Shared.DataChangeFactory.html": {
    "href": "api/DataAccess.Shared.DataChangeFactory.html",
    "title": "Class DataChangeFactory | CumulusRCM",
    "keywords": "Class DataChangeFactory Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class DataChangeFactory Inheritance object DataChangeFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DataChangeFactory(IDatabaseMapper) public DataChangeFactory(IDatabaseMapper databaseMapper) Parameters databaseMapper IDatabaseMapper Methods Create<T>(DataChangeKind, T, bool) public IDataChange Create<T>(DataChangeKind dataChangeKind, T entity, bool isCollection = false) Parameters dataChangeKind DataChangeKind entity T isCollection bool Returns IDataChange Type Parameters T"
  },
  "api/DataAccess.Shared.DataChangeKind.html": {
    "href": "api/DataAccess.Shared.DataChangeKind.html",
    "title": "Class DataChangeKind | CumulusRCM",
    "keywords": "Class DataChangeKind Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public sealed record DataChangeKind : Enumeration, IEquatable<Enumeration>, IEquatable<DataChangeKind> Inheritance object Enumeration DataChangeKind Implements IEquatable<Enumeration> IEquatable<DataChangeKind> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DataChangeKind() public DataChangeKind() DataChangeKind(int, string) public DataChangeKind(int value, string name) Parameters value int name string Fields DELETE public const int DELETE = 3 Field Value int Delete public static readonly DataChangeKind Delete Field Value DataChangeKind INSERT public const int INSERT = 1 Field Value int Insert public static readonly DataChangeKind Insert Field Value DataChangeKind STORED_PROCEDURE public const int STORED_PROCEDURE = 4 Field Value int StoredProcedure public static readonly DataChangeKind StoredProcedure Field Value DataChangeKind UPDATE public const int UPDATE = 2 Field Value int Update public static readonly DataChangeKind Update Field Value DataChangeKind"
  },
  "api/DataAccess.Shared.DataServiceUnitOfWork.html": {
    "href": "api/DataAccess.Shared.DataServiceUnitOfWork.html",
    "title": "Class DataServiceUnitOfWork | CumulusRCM",
    "keywords": "Class DataServiceUnitOfWork Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record DataServiceUnitOfWork : IUnitOfWork, IEquatable<DataServiceUnitOfWork> Inheritance object DataServiceUnitOfWork Implements IUnitOfWork IEquatable<DataServiceUnitOfWork> Derived DataServiceBase ClaimsAuthenticationTests.FakeBillingDataService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors DataServiceUnitOfWork(ISaveStrategy, IDatabaseMapper) public DataServiceUnitOfWork(ISaveStrategy SaveStrategy, IDatabaseMapper DatabaseMapper) Parameters SaveStrategy ISaveStrategy DatabaseMapper IDatabaseMapper Properties DatabaseMapper public IDatabaseMapper DatabaseMapper { get; init; } Property Value IDatabaseMapper QueuedItemsCount public int QueuedItemsCount { get; } Property Value int SaveStrategy public ISaveStrategy SaveStrategy { get; } Property Value ISaveStrategy Methods AddCollection<T>(DataChangeKind, ICollection<T>) public void AddCollection<T>(DataChangeKind dataChangeKind, ICollection<T> entities) where T : class Parameters dataChangeKind DataChangeKind entities ICollection<T> Type Parameters T Add<T>(DataChangeKind, T) public void Add<T>(DataChangeKind dataChangeKind, T entity) where T : class Parameters dataChangeKind DataChangeKind entity T Type Parameters T Reset() public void Reset() SaveAsync() public Task<SaveResponse> SaveAsync() Returns Task<SaveResponse>"
  },
  "api/DataAccess.Shared.Filter.html": {
    "href": "api/DataAccess.Shared.Filter.html",
    "title": "Class Filter | CumulusRCM",
    "keywords": "Class Filter Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class Filter Inheritance object Filter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) FilterSqlBuilder.ToSqlClause(Filter, IReadOnlyCollection<IColumnInfo>?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Filter() public Filter() Properties Segments public List<FilterSegment> Segments { get; init; } Property Value List<FilterSegment> Methods AddSegment(FilterSegment) public void AddSegment(FilterSegment filterSegment) Parameters filterSegment FilterSegment AsJson() public string AsJson() Returns string Create(FilterExpression) public static Filter Create(FilterExpression filterExpression) Parameters filterExpression FilterExpression Returns Filter Create<T>(FilterExpression<T>, AndOr?) public static Filter Create<T>(FilterExpression<T> filterExpression, AndOr? andOr = null) where T : class Parameters filterExpression FilterExpression<T> andOr AndOr Returns Filter Type Parameters T Create<T>(IEnumerable<ConnectedExpression<T>>) public static Filter Create<T>(IEnumerable<ConnectedExpression<T>> filterExpressions) Parameters filterExpressions IEnumerable<ConnectedExpression<T>> Returns Filter Type Parameters T Create<T>(IEnumerable<FilterSegment<T>>) public static Filter Create<T>(IEnumerable<FilterSegment<T>> filterSegments) Parameters filterSegments IEnumerable<FilterSegment<T>> Returns Filter Type Parameters T FromEntity<T>(T) public static Filter FromEntity<T>(T item) where T : class Parameters item T Returns Filter Type Parameters T FromJson(string?) public static Filter? FromJson(string? json) Parameters json string Returns Filter Merge(Filter?) public Filter Merge(Filter? filter) Parameters filter Filter Returns Filter PrimaryExpressionPropertyName() public string PrimaryExpressionPropertyName() Returns string SetParameterValue<T>(string?, T) public void SetParameterValue<T>(string? expressionName, T value) Parameters expressionName string value T Type Parameters T ToLinqExpression<T>() public Func<T, bool> ToLinqExpression<T>() Returns Func<T, bool> Type Parameters T TryParse(string, out Filter?) public static bool TryParse(string json, out Filter? filter) Parameters json string filter Filter Returns bool"
  },
  "api/DataAccess.Shared.FilterExpression-1.html": {
    "href": "api/DataAccess.Shared.FilterExpression-1.html",
    "title": "Class FilterExpression<T> | CumulusRCM",
    "keywords": "Class FilterExpression<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record FilterExpression<T> : FilterExpression, IEquatable<FilterExpression>, IEquatable<FilterExpression<T>> Type Parameters T Inheritance object FilterExpression FilterExpression<T> Implements IEquatable<FilterExpression> IEquatable<FilterExpression<T>> Inherited Members FilterExpression.PropertyName FilterExpression.Operator FilterExpression.Value FilterExpression.ValueTypeName FilterExpression.Name FilterExpression.TryParse(string, out FilterExpression) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FilterExpression() public FilterExpression() FilterExpression(Expression<Func<T, object>>, Operator, object?) public FilterExpression(Expression<Func<T, object>> propertyNameExpression, Operator op, object? value = null) Parameters propertyNameExpression Expression<Func<T, object>> op Operator value object FilterExpression(string, Operator, object?) public FilterExpression(string propertyName, Operator op, object? value = null) Parameters propertyName string op Operator value object Methods TryParse(string, out FilterExpression<T>?) public static bool TryParse(string value, out FilterExpression<T>? result) Parameters value string result FilterExpression<T> Returns bool"
  },
  "api/DataAccess.Shared.FilterExpression.html": {
    "href": "api/DataAccess.Shared.FilterExpression.html",
    "title": "Class FilterExpression | CumulusRCM",
    "keywords": "Class FilterExpression Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record FilterExpression : IEquatable<FilterExpression> Inheritance object FilterExpression Implements IEquatable<FilterExpression> Derived FilterExpression<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FilterExpression() protected FilterExpression() FilterExpression(string, Operator) public FilterExpression(string PropertyName, Operator Operator) Parameters PropertyName string Operator Operator Properties Name public string Name { get; init; } Property Value string Operator public Operator Operator { get; init; } Property Value Operator PropertyName public string PropertyName { get; init; } Property Value string Value public object? Value { get; set; } Property Value object ValueTypeName public string ValueTypeName { get; set; } Property Value string Methods TryParse(string, out FilterExpression?) public static bool TryParse(string value, out FilterExpression? result) Parameters value string result FilterExpression Returns bool"
  },
  "api/DataAccess.Shared.FilterSegment-1.html": {
    "href": "api/DataAccess.Shared.FilterSegment-1.html",
    "title": "Class FilterSegment<T> | CumulusRCM",
    "keywords": "Class FilterSegment<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record FilterSegment<T> : FilterSegment, IEquatable<FilterSegment>, IEquatable<FilterSegment<T>> Type Parameters T Inheritance object FilterSegment FilterSegment<T> Implements IEquatable<FilterSegment> IEquatable<FilterSegment<T>> Inherited Members FilterSegment.AndOr FilterSegment.FilterExpressions FilterSegment.AddExpression(FilterExpression, AndOr) FilterSegment.AddExpression(ConnectedExpression) FilterSegment.TryParse(string, out FilterSegment) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FilterSegment(AndOr?) public FilterSegment(AndOr? andOr = null) Parameters andOr AndOr FilterSegment(FilterExpression<T>, AndOr?) public FilterSegment(FilterExpression<T> filterExpression, AndOr? andOr = null) Parameters filterExpression FilterExpression<T> andOr AndOr FilterSegment(IEnumerable<ConnectedExpression<T>>, AndOr?) public FilterSegment(IEnumerable<ConnectedExpression<T>> filterExpressions, AndOr? andOr = null) Parameters filterExpressions IEnumerable<ConnectedExpression<T>> andOr AndOr Methods AddExpression(ConnectedExpression<T>) public void AddExpression(ConnectedExpression<T> filterExpression) Parameters filterExpression ConnectedExpression<T> TryParse(string, out FilterSegment<T>?) public static bool TryParse(string json, out FilterSegment<T>? filterSegment) Parameters json string filterSegment FilterSegment<T> Returns bool"
  },
  "api/DataAccess.Shared.FilterSegment.html": {
    "href": "api/DataAccess.Shared.FilterSegment.html",
    "title": "Class FilterSegment | CumulusRCM",
    "keywords": "Class FilterSegment Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record FilterSegment : IEquatable<FilterSegment> Inheritance object FilterSegment Implements IEquatable<FilterSegment> Derived FilterSegment<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FilterSegment() public FilterSegment() FilterSegment(FilterExpression, AndOr?) public FilterSegment(FilterExpression filterExpression, AndOr? andOr = null) Parameters filterExpression FilterExpression andOr AndOr Properties AndOr public AndOr AndOr { get; set; } Property Value AndOr FilterExpressions public Dictionary<string, ConnectedExpression> FilterExpressions { get; set; } Property Value Dictionary<string, ConnectedExpression> Methods AddExpression(ConnectedExpression) public void AddExpression(ConnectedExpression connectedExpression) Parameters connectedExpression ConnectedExpression AddExpression(FilterExpression, AndOr?) public void AddExpression(FilterExpression filterExpression, AndOr? andOr = null) Parameters filterExpression FilterExpression andOr AndOr TryParse(string, out FilterSegment?) public static bool TryParse(string json, out FilterSegment? filterSegment) Parameters json string filterSegment FilterSegment Returns bool"
  },
  "api/DataAccess.Shared.ICustomQueries.html": {
    "href": "api/DataAccess.Shared.ICustomQueries.html",
    "title": "Interface ICustomQueries | CumulusRCM",
    "keywords": "Interface ICustomQueries Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface ICustomQueries Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetEndPoints() IEnumerable<(string endPoint, Delegate handler, string name)> GetEndPoints() Returns IEnumerable<(string endPoint, Delegate handler, string name)>"
  },
  "api/DataAccess.Shared.ICustomReader.html": {
    "href": "api/DataAccess.Shared.ICustomReader.html",
    "title": "Interface ICustomReader | CumulusRCM",
    "keywords": "Interface ICustomReader Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface ICustomReader Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T)"
  },
  "api/DataAccess.Shared.IDataChange.html": {
    "href": "api/DataAccess.Shared.IDataChange.html",
    "title": "Interface IDataChange | CumulusRCM",
    "keywords": "Interface IDataChange Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IDataChange Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Count int Count { get; } Property Value int DataChangeKind DataChangeKind DataChangeKind { get; } Property Value DataChangeKind Entity object Entity { get; } Property Value object EntityType Type EntityType { get; } Property Value Type IsCollection bool IsCollection { get; } Property Value bool SqlShouldGenPk bool SqlShouldGenPk { get; } Property Value bool SqlShouldReturnPk bool SqlShouldReturnPk { get; } Property Value bool TableInfo ITableInfo TableInfo { get; } Property Value ITableInfo"
  },
  "api/DataAccess.Shared.IDataService.html": {
    "href": "api/DataAccess.Shared.IDataService.html",
    "title": "Interface IDataService | CumulusRCM",
    "keywords": "Interface IDataService Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IDataService : IUnitOfWork Inherited Members IUnitOfWork.QueuedItemsCount IUnitOfWork.Reset() IUnitOfWork.Add<T>(DataChangeKind, T) IUnitOfWork.AddCollection<T>(DataChangeKind, ICollection<T>) IUnitOfWork.SaveAsync() IUnitOfWork.AddForUpdate<T>(T) IUnitOfWork.AddForUpdate<T>(ICollection<T>) IUnitOfWork.AddForDelete<T>(T) IUnitOfWork.AddForDelete<T>(ICollection<T>) IUnitOfWork.AddForInsert<T>(T) IUnitOfWork.AddCollectionForInsert<T>(ICollection<T>) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetQueries<T>() IQueries<T> GetQueries<T>() where T : class Returns IQueries<T> Type Parameters T"
  },
  "api/DataAccess.Shared.IDatabaseMap.html": {
    "href": "api/DataAccess.Shared.IDatabaseMap.html",
    "title": "Interface IDatabaseMap | CumulusRCM",
    "keywords": "Interface IDatabaseMap Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IDatabaseMap Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Map ITableInfo[] Map { get; } Property Value ITableInfo[]"
  },
  "api/DataAccess.Shared.IDatabaseMapper.html": {
    "href": "api/DataAccess.Shared.IDatabaseMapper.html",
    "title": "Interface IDatabaseMapper | CumulusRCM",
    "keywords": "Interface IDatabaseMapper Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IDatabaseMapper Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetTableInfo(Type) ITableInfo GetTableInfo(Type entityType) Parameters entityType Type Returns ITableInfo GetTableInfo<T>() ITableInfo GetTableInfo<T>() Returns ITableInfo Type Parameters T"
  },
  "api/DataAccess.Shared.IQueries-1.html": {
    "href": "api/DataAccess.Shared.IQueries-1.html",
    "title": "Interface IQueries<T> | CumulusRCM",
    "keywords": "Interface IQueries<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IQueries<T> Type Parameters T Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetAll(Filter?, int, int, OrderBy?) IObservable<Response<T>> GetAll(Filter? filterJson = null, int pageSize = 0, int pageNumber = 1, OrderBy? orderBy = null) Parameters filterJson Filter pageSize int pageNumber int orderBy OrderBy Returns IObservable<Response<T>> GetAllAsync(Filter?, int, int, OrderBy?) Task<Response<T>> GetAllAsync(Filter? filter, int pageSize = 0, int pageNumber = 1, OrderBy? orderBy = null) Parameters filter Filter pageSize int pageNumber int orderBy OrderBy Returns Task<Response<T>> GetAllAsync(string?, int, int, string?) [Get(\"/\")] Task<Response<T>> GetAllAsync(string? filterJson = null, int pageSize = 0, int pageNumber = 1, string? orderByJson = null) Parameters filterJson string pageSize int pageNumber int orderByJson string Returns Task<Response<T>> GetAllDynamic(IReadOnlyCollection<string>, string?, int, int, string?) IObservable<Response<dynamic>> GetAllDynamic(IReadOnlyCollection<string> columnNames, string? filterJson = null, int pageSize = 0, int pageNumber = 1, string? orderByJson = null) Parameters columnNames IReadOnlyCollection<string> filterJson string pageSize int pageNumber int orderByJson string Returns IObservable<Response<dynamic>> GetAllDynamicAsync(IReadOnlyCollection<string>, string?, int, int, string?) [Get(\"/Dynamic\")] Task<Response<dynamic>> GetAllDynamicAsync(IReadOnlyCollection<string> columnNames, string? filterJson = null, int pageSize = 0, int pageNumber = 1, string? orderByJson = null) Parameters columnNames IReadOnlyCollection<string> filterJson string pageSize int pageNumber int orderByJson string Returns Task<Response<dynamic>> GetByPkAsync(string) [Get(\"/{pkValue}\")] Task<Response<T>> GetByPkAsync(string pkValue) Parameters pkValue string Returns Task<Response<T>> GetByPkAsync<TKey>(TKey) Task<Response<T>> GetByPkAsync<TKey>(TKey pk) where TKey : notnull Parameters pk TKey Returns Task<Response<T>> Type Parameters TKey GetByPkDynamicAsync(string, IReadOnlyCollection<string>) [Get(\"/{pkValue}/{columnNames}\")] Task<Response<dynamic>> GetByPkDynamicAsync(string pkValue, IReadOnlyCollection<string> columnNames) Parameters pkValue string columnNames IReadOnlyCollection<string> Returns Task<Response<dynamic>> GetByPkDynamicAsync<TKey>(TKey, IReadOnlyCollection<string>) Task<Response<dynamic>> GetByPkDynamicAsync<TKey>(TKey pk, IReadOnlyCollection<string> columnNames) where TKey : notnull Parameters pk TKey columnNames IReadOnlyCollection<string> Returns Task<Response<dynamic>> Type Parameters TKey GetCountAsync(Filter?) Task<int> GetCountAsync(Filter? filter = null) Parameters filter Filter Returns Task<int> GetCountAsync(string?) [Get(\"/Count\")] Task<int> GetCountAsync(string? filterJson = null) Parameters filterJson string Returns Task<int>"
  },
  "api/DataAccess.Shared.IReader-1.html": {
    "href": "api/DataAccess.Shared.IReader-1.html",
    "title": "Interface IReader<T> | CumulusRCM",
    "keywords": "Interface IReader<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IReader<T> Type Parameters T Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetAllAsync(Filter?, int, int, OrderBy?) Task<IReadOnlyCollection<T>> GetAllAsync(Filter? filter = null, int pageSize = 0, int pageNum = 0, OrderBy? orderBy = null) Parameters filter Filter pageSize int pageNum int orderBy OrderBy Returns Task<IReadOnlyCollection<T>> GetAllDynamicAsync(IReadOnlyCollection<string>, Filter?, int, int, OrderBy?) Task<IReadOnlyCollection<dynamic>> GetAllDynamicAsync(IReadOnlyCollection<string> columns, Filter? filter = null, int pageSize = 0, int pageNum = 0, OrderBy? orderBy = null) Parameters columns IReadOnlyCollection<string> filter Filter pageSize int pageNum int orderBy OrderBy Returns Task<IReadOnlyCollection<dynamic>> GetByPkAsync(string) Task<T?> GetByPkAsync(string pk) Parameters pk string Returns Task<T> GetByPkDynamicAsync(string, IReadOnlyCollection<string>) Task<dynamic?> GetByPkDynamicAsync(string pkValue, IReadOnlyCollection<string> columnNames) Parameters pkValue string columnNames IReadOnlyCollection<string> Returns Task<dynamic> GetCountAsync(Filter?) Task<int> GetCountAsync(Filter? filter = null) Parameters filter Filter Returns Task<int>"
  },
  "api/DataAccess.Shared.IReaderFactory.html": {
    "href": "api/DataAccess.Shared.IReaderFactory.html",
    "title": "Interface IReaderFactory | CumulusRCM",
    "keywords": "Interface IReaderFactory Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IReaderFactory Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetReader<T>() IReader<T> GetReader<T>() where T : class Returns IReader<T> Type Parameters T"
  },
  "api/DataAccess.Shared.IReportService.html": {
    "href": "api/DataAccess.Shared.IReportService.html",
    "title": "Interface IReportService | CumulusRCM",
    "keywords": "Interface IReportService Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IReportService Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetCountAsync(ReportDefinition) Task<long> GetCountAsync(ReportDefinition reportDefinition) Parameters reportDefinition ReportDefinition Returns Task<long> GetReportDataAsync(ReportDefinition, int, int) Task<Response<dynamic>> GetReportDataAsync(ReportDefinition reportDefinition, int pageSize = 0, int pageNum = 0) Parameters reportDefinition ReportDefinition pageSize int pageNum int Returns Task<Response<dynamic>> GetReportDefinitionAsync(string) Task<Response<ReportDefinition>> GetReportDefinitionAsync(string reportName) Parameters reportName string Returns Task<Response<ReportDefinition>> GetReportsAsync(bool) Task<Response<(string reportName, string reportDescription)>> GetReportsAsync(bool forceRefresh = false) Parameters forceRefresh bool Returns Task<Response<(string reportName, string reportDescription)>>"
  },
  "api/DataAccess.Shared.ISaveStrategy.html": {
    "href": "api/DataAccess.Shared.ISaveStrategy.html",
    "title": "Interface ISaveStrategy | CumulusRCM",
    "keywords": "Interface ISaveStrategy Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface ISaveStrategy Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods SaveAsync(IEnumerable<IDataChange>) [Post(\"/Save\")] Task<SaveResponse> SaveAsync(IEnumerable<IDataChange> dataChanges) Parameters dataChanges IEnumerable<IDataChange> Returns Task<SaveResponse>"
  },
  "api/DataAccess.Shared.ISequenceGenerator.html": {
    "href": "api/DataAccess.Shared.ISequenceGenerator.html",
    "title": "Interface ISequenceGenerator | CumulusRCM",
    "keywords": "Interface ISequenceGenerator Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface ISequenceGenerator Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods GetSequencesAsync(ITableInfo, int, IDbConnection?, IDbTransaction?) Task<long> GetSequencesAsync(ITableInfo tableInfo, int cnt, IDbConnection? dbConnection = null, IDbTransaction? dbTransaction = null) Parameters tableInfo ITableInfo cnt int dbConnection IDbConnection dbTransaction IDbTransaction Returns Task<long> GetSequencesAsync<T>(int, IDbConnection?, IDbTransaction?) Task<long> GetSequencesAsync<T>(int cnt, IDbConnection? dbConnection = null, IDbTransaction? dbTransaction = null) where T : class Parameters cnt int dbConnection IDbConnection dbTransaction IDbTransaction Returns Task<long> Type Parameters T"
  },
  "api/DataAccess.Shared.ITableInfo.html": {
    "href": "api/DataAccess.Shared.ITableInfo.html",
    "title": "Interface ITableInfo | CumulusRCM",
    "keywords": "Interface ITableInfo Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface ITableInfo Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) TableSqlBuilderExtensions.GetCountSql(ITableInfo, Filter?) TableSqlBuilderExtensions.GetReadSql(ITableInfo, Filter?, int, int, OrderBy?, IReadOnlyCollection<string>?) TableSqlBuilderExtensions.GetWriteSql(ITableInfo, IDataChange) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties ColumnsMap IReadOnlyCollection<IColumnInfo> ColumnsMap { get; } Property Value IReadOnlyCollection<IColumnInfo> CustomDeleteSqlTemplate string? CustomDeleteSqlTemplate { get; } Property Value string CustomInsertSqlTemplate string? CustomInsertSqlTemplate { get; } Property Value string CustomSelectSqlTemplate string? CustomSelectSqlTemplate { get; } Property Value string CustomStoredProcedureSqlTemplate string? CustomStoredProcedureSqlTemplate { get; } Property Value string CustomUpdateSqlTemplate string? CustomUpdateSqlTemplate { get; } Property Value string EntityType Type EntityType { get; } Property Value Type IsIdentity bool IsIdentity { get; } Property Value bool IsSequencePk bool IsSequencePk { get; } Property Value bool PrimaryKeyName string PrimaryKeyName { get; } Property Value string PrimaryKeyType Type PrimaryKeyType { get; } Property Value Type Priority int Priority { get; } Property Value int SequenceName string SequenceName { get; } Property Value string TableName string TableName { get; } Property Value string Methods GetPrimaryKeyValue(object) object GetPrimaryKeyValue(object entity) Parameters entity object Returns object SetPrimaryKeyValue(object, long) void SetPrimaryKeyValue(object entity, long value) Parameters entity object value long"
  },
  "api/DataAccess.Shared.ITrackChanges.html": {
    "href": "api/DataAccess.Shared.ITrackChanges.html",
    "title": "Interface ITrackChanges | CumulusRCM",
    "keywords": "Interface ITrackChanges Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface ITrackChanges Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties IsNew bool IsNew { get; } Property Value bool Methods ApplyChanges() void ApplyChanges() CancelChanges() void CancelChanges()"
  },
  "api/DataAccess.Shared.IUnitOfWork.html": {
    "href": "api/DataAccess.Shared.IUnitOfWork.html",
    "title": "Interface IUnitOfWork | CumulusRCM",
    "keywords": "Interface IUnitOfWork Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public interface IUnitOfWork Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties QueuedItemsCount int QueuedItemsCount { get; } Property Value int Methods AddCollectionForInsert<T>(ICollection<T>) void AddCollectionForInsert<T>(ICollection<T> entities) where T : class Parameters entities ICollection<T> Type Parameters T AddCollection<T>(DataChangeKind, ICollection<T>) void AddCollection<T>(DataChangeKind dataChangeKind, ICollection<T> entities) where T : class Parameters dataChangeKind DataChangeKind entities ICollection<T> Type Parameters T AddForDelete<T>(ICollection<T>) void AddForDelete<T>(ICollection<T> entities) where T : class Parameters entities ICollection<T> Type Parameters T AddForDelete<T>(T) void AddForDelete<T>(T entity) where T : class Parameters entity T Type Parameters T AddForInsert<T>(T) void AddForInsert<T>(T entity) where T : class Parameters entity T Type Parameters T AddForUpdate<T>(ICollection<T>) void AddForUpdate<T>(ICollection<T> entities) where T : class Parameters entities ICollection<T> Type Parameters T AddForUpdate<T>(T) void AddForUpdate<T>(T entity) where T : class Parameters entity T Type Parameters T Add<T>(DataChangeKind, T) void Add<T>(DataChangeKind dataChangeKind, T entity) where T : class Parameters dataChangeKind DataChangeKind entity T Type Parameters T Reset() void Reset() SaveAsync() Task<SaveResponse> SaveAsync() Returns Task<SaveResponse>"
  },
  "api/DataAccess.Shared.NameReaderExtensions.html": {
    "href": "api/DataAccess.Shared.NameReaderExtensions.html",
    "title": "Class NameReaderExtensions | CumulusRCM",
    "keywords": "Class NameReaderExtensions Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public static class NameReaderExtensions Inheritance object NameReaderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMemberName<T>(T, Expression<Action<T>>) public static string GetMemberName<T>(this T instance, Expression<Action<T>> expression) Parameters instance T expression Expression<Action<T>> Returns string Type Parameters T GetMemberName<T>(T, Expression<Func<T, object>>) public static string GetMemberName<T>(this T instance, Expression<Func<T, object>> expression) Parameters instance T expression Expression<Func<T, object>> Returns string Type Parameters T GetMemberNames<T>(T, params Expression<Func<T, object>>[]) public static List<string> GetMemberNames<T>(this T instance, params Expression<Func<T, object>>[] expressions) Parameters instance T expressions Expression<Func<T, object>>[] Returns List<string> Type Parameters T GetMemberType<T>(T, Expression<Action<T>>) public static Type GetMemberType<T>(this T instance, Expression<Action<T>> expression) Parameters instance T expression Expression<Action<T>> Returns Type Type Parameters T GetMemberType<T>(T, Expression<Func<T, object>>) public static Type GetMemberType<T>(this T instance, Expression<Func<T, object>> expression) Parameters instance T expression Expression<Func<T, object>> Returns Type Type Parameters T GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) public static List<Type> GetMemberTypes<T>(this T instance, params Expression<Func<T, object>>[] expressions) Parameters instance T expressions Expression<Func<T, object>>[] Returns List<Type> Type Parameters T"
  },
  "api/DataAccess.Shared.Operator.html": {
    "href": "api/DataAccess.Shared.Operator.html",
    "title": "Class Operator | CumulusRCM",
    "keywords": "Class Operator Namespace DataAccess.Shared Assembly DataAccess.Shared.dll [JsonConverter(typeof(EnumerationJsonConverter<Operator>))] public sealed record Operator : Enumeration, IEquatable<Enumeration>, IEquatable<Operator> Inheritance object Enumeration Operator Implements IEquatable<Enumeration> IEquatable<Operator> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Operator() public Operator() Operator(int, string, string) public Operator(int value, string sqlOperator, string displayName) Parameters value int sqlOperator string displayName string Fields Contains public static readonly Operator Contains Field Value Operator EndsWith public static readonly Operator EndsWith Field Value Operator Equal public static readonly Operator Equal Field Value Operator GreaterThan public static readonly Operator GreaterThan Field Value Operator GreaterThanOrEqual public static readonly Operator GreaterThanOrEqual Field Value Operator In public static readonly Operator In Field Value Operator IsNotNull public static readonly Operator IsNotNull Field Value Operator IsNull public static readonly Operator IsNull Field Value Operator LessThan public static readonly Operator LessThan Field Value Operator LessThanOrEqual public static readonly Operator LessThanOrEqual Field Value Operator NotEqual public static readonly Operator NotEqual Field Value Operator StartsWith public static readonly Operator StartsWith Field Value Operator Properties PostTemplate [JsonIgnore] public string PostTemplate { get; } Property Value string PreTemplate [JsonIgnore] public string PreTemplate { get; } Property Value string SqlOperator [JsonIgnore] public string SqlOperator { get; } Property Value string UsesValue public bool UsesValue { get; } Property Value bool"
  },
  "api/DataAccess.Shared.OrderBy.html": {
    "href": "api/DataAccess.Shared.OrderBy.html",
    "title": "Class OrderBy | CumulusRCM",
    "keywords": "Class OrderBy Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class OrderBy Inheritance object OrderBy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors OrderBy() public OrderBy() OrderBy(OrderByExpression) public OrderBy(OrderByExpression orderByExpression) Parameters orderByExpression OrderByExpression OrderBy(IEnumerable<OrderByExpression>) public OrderBy(IEnumerable<OrderByExpression> orderByExpressions) Parameters orderByExpressions IEnumerable<OrderByExpression> OrderBy(string, OrderDirection?) public OrderBy(string propertyName, OrderDirection? orderDirection = null) Parameters propertyName string orderDirection OrderDirection Properties OrderByExpressions public List<OrderByExpression> OrderByExpressions { get; set; } Property Value List<OrderByExpression> Methods AsJson() public string AsJson() Returns string FromJson(string?) public static OrderBy? FromJson(string? json) Parameters json string Returns OrderBy TryParse(string, out OrderBy?) public static bool TryParse(string json, out OrderBy? orderBy) Parameters json string orderBy OrderBy Returns bool"
  },
  "api/DataAccess.Shared.OrderByExpression-1.html": {
    "href": "api/DataAccess.Shared.OrderByExpression-1.html",
    "title": "Class OrderByExpression<T> | CumulusRCM",
    "keywords": "Class OrderByExpression<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record OrderByExpression<T> : OrderByExpression, IEquatable<OrderByExpression>, IEquatable<OrderByExpression<T>> Type Parameters T Inheritance object OrderByExpression OrderByExpression<T> Implements IEquatable<OrderByExpression> IEquatable<OrderByExpression<T>> Inherited Members OrderByExpression.PropertyName OrderByExpression.OrderDirection OrderByExpression.AsJson() OrderByExpression.ToLinqExpression<T>() OrderByExpression.TryParse(string, out OrderByExpression) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors OrderByExpression(Expression<Func<T, object>>, OrderDirection?) public OrderByExpression(Expression<Func<T, object>> propertyNameExpression, OrderDirection? orderDirection = null) Parameters propertyNameExpression Expression<Func<T, object>> orderDirection OrderDirection OrderByExpression(string, OrderDirection?) public OrderByExpression(string propertyName, OrderDirection? dir = null) Parameters propertyName string dir OrderDirection Methods TryParse(string, out OrderByExpression<T>?) public static bool TryParse(string value, out OrderByExpression<T>? result) Parameters value string result OrderByExpression<T> Returns bool"
  },
  "api/DataAccess.Shared.OrderByExpression.html": {
    "href": "api/DataAccess.Shared.OrderByExpression.html",
    "title": "Class OrderByExpression | CumulusRCM",
    "keywords": "Class OrderByExpression Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record OrderByExpression : IEquatable<OrderByExpression> Inheritance object OrderByExpression Implements IEquatable<OrderByExpression> Derived OrderByExpression<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors OrderByExpression(string, OrderDirection?) public OrderByExpression(string propertyName, OrderDirection? orderDirection = null) Parameters propertyName string orderDirection OrderDirection Properties OrderDirection public OrderDirection OrderDirection { get; init; } Property Value OrderDirection PropertyName public string PropertyName { get; init; } Property Value string Methods AsJson() public string AsJson() Returns string ToLinqExpression<T>() public Func<T, object> ToLinqExpression<T>() Returns Func<T, object> Type Parameters T TryParse(string, out OrderByExpression?) public static bool TryParse(string json, out OrderByExpression? orderByExpression) Parameters json string orderByExpression OrderByExpression Returns bool"
  },
  "api/DataAccess.Shared.OrderDirection.html": {
    "href": "api/DataAccess.Shared.OrderDirection.html",
    "title": "Class OrderDirection | CumulusRCM",
    "keywords": "Class OrderDirection Namespace DataAccess.Shared Assembly DataAccess.Shared.dll [JsonConverter(typeof(EnumerationJsonConverter<OrderDirection>))] public record OrderDirection : Enumeration, IEquatable<Enumeration>, IEquatable<OrderDirection> Inheritance object Enumeration OrderDirection Implements IEquatable<Enumeration> IEquatable<OrderDirection> Inherited Members Enumeration.Code Enumeration.DisplayName Enumeration.Value Enumeration.CharValue Enumeration.SetDefaultValue<T>(T) Enumeration.ToString() Enumeration.GetAll<T>() Enumeration.GetDefault<T>() Enumeration.FromValue<T>(int) Enumeration.TryFromValue<T>(int) Enumeration.FromCode<T>(string) Enumeration.ContainsValue<T>(int) Enumeration.CompareTo(object) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors OrderDirection() public OrderDirection() OrderDirection(int, string) public OrderDirection(int value, string name) Parameters value int name string Fields Ascending public static readonly OrderDirection Ascending Field Value OrderDirection Descending public static readonly OrderDirection Descending Field Value OrderDirection"
  },
  "api/DataAccess.Shared.Pager.html": {
    "href": "api/DataAccess.Shared.Pager.html",
    "title": "Class Pager | CumulusRCM",
    "keywords": "Class Pager Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public static class Pager Inheritance object Pager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Page<T>(IEnumerable<T>, int, int) public static IEnumerable<T> Page<T>(this IEnumerable<T> source, int pageSize, int currentPage) Parameters source IEnumerable<T> pageSize int currentPage int Returns IEnumerable<T> Type Parameters T"
  },
  "api/DataAccess.Shared.ParameterValue.html": {
    "href": "api/DataAccess.Shared.ParameterValue.html",
    "title": "Class ParameterValue | CumulusRCM",
    "keywords": "Class ParameterValue Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class ParameterValue Inheritance object ParameterValue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ParameterValue() public ParameterValue() ParameterValue(string, string, string) public ParameterValue(string name, string value, string typeName) Parameters name string value string typeName string Properties Name public string Name { get; set; } Property Value string TypeName public string TypeName { get; set; } Property Value string Value public string Value { get; set; } Property Value string Methods TryParse(string, out ParameterValue?) public static bool TryParse(string json, out ParameterValue? parameterValue) Parameters json string parameterValue ParameterValue Returns bool"
  },
  "api/DataAccess.Shared.ParameterValues.html": {
    "href": "api/DataAccess.Shared.ParameterValues.html",
    "title": "Class ParameterValues | CumulusRCM",
    "keywords": "Class ParameterValues Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class ParameterValues Inheritance object ParameterValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ParameterValues() public ParameterValues() ParameterValues(ParameterValue) public ParameterValues(ParameterValue parameterValue) Parameters parameterValue ParameterValue ParameterValues(IEnumerable<ParameterValue>) public ParameterValues(IEnumerable<ParameterValue> parameterValues) Parameters parameterValues IEnumerable<ParameterValue> Properties Values public IEnumerable<ParameterValue> Values { get; } Property Value IEnumerable<ParameterValue> Methods Add(ParameterValue) public void Add(ParameterValue parameterValue) Parameters parameterValue ParameterValue AddRange(IEnumerable<ParameterValue>) public void AddRange(IEnumerable<ParameterValue> parameterValues) Parameters parameterValues IEnumerable<ParameterValue> ToDynamicParameters() public DynamicParameters ToDynamicParameters() Returns DynamicParameters TryParse(string, out ParameterValues?) public static bool TryParse(string json, out ParameterValues? parameterValues) Parameters json string parameterValues ParameterValues Returns bool"
  },
  "api/DataAccess.Shared.ReportService.ReportColumn.html": {
    "href": "api/DataAccess.Shared.ReportService.ReportColumn.html",
    "title": "Class ReportColumn | CumulusRCM",
    "keywords": "Class ReportColumn Namespace DataAccess.Shared.ReportService Assembly DataAccess.Shared.dll public record ReportColumn : IEquatable<ReportColumn> Inheritance object ReportColumn Implements IEquatable<ReportColumn> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReportColumn(string, string, string?, string?, bool) public ReportColumn(string ColumnName, string DataTypeName, string? ColumnFormat = null, string? ColumnTitle = null, bool IsFilterable = true) Parameters ColumnName string DataTypeName string ColumnFormat string ColumnTitle string IsFilterable bool Properties ColumnFormat public string? ColumnFormat { get; init; } Property Value string ColumnName public string ColumnName { get; init; } Property Value string ColumnTitle public string ColumnTitle { get; init; } Property Value string DataType public Type DataType { get; } Property Value Type DataTypeName public string DataTypeName { get; init; } Property Value string IsFilterable public bool IsFilterable { get; init; } Property Value bool"
  },
  "api/DataAccess.Shared.ReportService.ReportDefinition.html": {
    "href": "api/DataAccess.Shared.ReportService.ReportDefinition.html",
    "title": "Class ReportDefinition | CumulusRCM",
    "keywords": "Class ReportDefinition Namespace DataAccess.Shared.ReportService Assembly DataAccess.Shared.dll public record ReportDefinition : IEquatable<ReportDefinition> Inheritance object ReportDefinition Implements IEquatable<ReportDefinition> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors ReportDefinition(long, string, string, string, string, string) public ReportDefinition(long Id, string ReportName, string ReportDescription, string ReportSql, string ColumnsJson, string OrderByJson) Parameters Id long ReportName string ReportDescription string ReportSql string ColumnsJson string OrderByJson string Properties ColumnDefinitions [ColumnInfo(null, true, false, false, null)] public ICollection<ReportColumn> ColumnDefinitions { get; } Property Value ICollection<ReportColumn> ColumnsJson public string ColumnsJson { get; init; } Property Value string Filter [ColumnInfo(null, true, false, false, null)] public Filter? Filter { get; set; } Property Value Filter Id public long Id { get; init; } Property Value long OrderBy [ColumnInfo(null, true, false, false, null)] public OrderBy OrderBy { get; } Property Value OrderBy OrderByJson public string? OrderByJson { get; set; } Property Value string ReportDescription public string ReportDescription { get; init; } Property Value string ReportName public string ReportName { get; init; } Property Value string ReportSql public string ReportSql { get; init; } Property Value string"
  },
  "api/DataAccess.Shared.ReportService.ReportParameter.html": {
    "href": "api/DataAccess.Shared.ReportService.ReportParameter.html",
    "title": "Class ReportParameter | CumulusRCM",
    "keywords": "Class ReportParameter Namespace DataAccess.Shared.ReportService Assembly DataAccess.Shared.dll public record ReportParameter : IEquatable<ReportParameter> Inheritance object ReportParameter Implements IEquatable<ReportParameter> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties InputFormat public string InputFormat { get; init; } Property Value string ParameterName public required string ParameterName { get; init; } Property Value string ParameterPrompt public string? ParameterPrompt { get; } Property Value string ParameterTypeName public required string ParameterTypeName { get; init; } Property Value string Value public object? Value { get; set; } Property Value object"
  },
  "api/DataAccess.Shared.ReportService.html": {
    "href": "api/DataAccess.Shared.ReportService.html",
    "title": "Namespace DataAccess.Shared.ReportService | CumulusRCM",
    "keywords": "Namespace DataAccess.Shared.ReportService Classes ReportColumn ReportDefinition ReportParameter"
  },
  "api/DataAccess.Shared.Response-1.html": {
    "href": "api/DataAccess.Shared.Response-1.html",
    "title": "Class Response<T> | CumulusRCM",
    "keywords": "Class Response<T> Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record Response<T> : Response, IEquatable<Response>, IEquatable<Response<T>> Type Parameters T Inheritance object Response Response<T> Implements IEquatable<Response> IEquatable<Response<T>> Inherited Members Response.Exception Response.IsSuccess object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Response() public Response() Response(IReadOnlyCollection<T>, int, string?, Exception?) public Response(IReadOnlyCollection<T> items, int totalCount = 0, string? errorMessage = null, Exception? exception = null) Parameters items IReadOnlyCollection<T> totalCount int errorMessage string exception Exception Response(T) public Response(T value) Parameters value T Properties Items public IReadOnlyCollection<T> Items { get; init; } Property Value IReadOnlyCollection<T> TotalCount public int TotalCount { get; init; } Property Value int Methods Empty(string) public static Response<T> Empty(string errorMessage = \"\") Parameters errorMessage string Returns Response<T> Fail(Exception) public static Response<T> Fail(Exception ex) Parameters ex Exception Returns Response<T> Fail(string) public static Response<T> Fail(string errorMessage) Parameters errorMessage string Returns Response<T> GetItem() public T GetItem() Returns T"
  },
  "api/DataAccess.Shared.Response.html": {
    "href": "api/DataAccess.Shared.Response.html",
    "title": "Class Response | CumulusRCM",
    "keywords": "Class Response Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record Response : IEquatable<Response> Inheritance object Response Implements IEquatable<Response> Derived Response<T> SaveResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Response(Exception?) public Response(Exception? Exception = null) Parameters Exception Exception Properties Exception public Exception? Exception { get; init; } Property Value Exception IsSuccess public bool IsSuccess { get; } Property Value bool"
  },
  "api/DataAccess.Shared.ResponseExtensions.html": {
    "href": "api/DataAccess.Shared.ResponseExtensions.html",
    "title": "Class ResponseExtensions | CumulusRCM",
    "keywords": "Class ResponseExtensions Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public static class ResponseExtensions Inheritance object ResponseExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AsResponse<T>(T) public static Response<T> AsResponse<T>(this T value) Parameters value T Returns Response<T> Type Parameters T"
  },
  "api/DataAccess.Shared.SaveResponse.html": {
    "href": "api/DataAccess.Shared.SaveResponse.html",
    "title": "Class SaveResponse | CumulusRCM",
    "keywords": "Class SaveResponse Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record SaveResponse : Response, IEquatable<Response>, IEquatable<SaveResponse> Inheritance object Response SaveResponse Implements IEquatable<Response> IEquatable<SaveResponse> Inherited Members Response.Exception Response.IsSuccess object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SaveResponse(IReadOnlyCollection<SaveResult>) public SaveResponse(IReadOnlyCollection<SaveResult> SaveResults) Parameters SaveResults IReadOnlyCollection<SaveResult> Properties SaveResults public IReadOnlyCollection<SaveResult> SaveResults { get; init; } Property Value IReadOnlyCollection<SaveResult> Methods Empty() public static SaveResponse Empty() Returns SaveResponse Failed(string) public static SaveResponse Failed(string message) Parameters message string Returns SaveResponse ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/DataAccess.Shared.SaveResponseBuilder.html": {
    "href": "api/DataAccess.Shared.SaveResponseBuilder.html",
    "title": "Class SaveResponseBuilder | CumulusRCM",
    "keywords": "Class SaveResponseBuilder Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class SaveResponseBuilder Inheritance object SaveResponseBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Add(SaveResult) public SaveResponseBuilder Add(SaveResult saveResult) Parameters saveResult SaveResult Returns SaveResponseBuilder Add(string, int, int, IEnumerable<long>?, Exception?) public SaveResponseBuilder Add(string tableName, int updatedCount = 0, int deletedCount = 0, IEnumerable<long>? insertedIds = null, Exception? exception = null) Parameters tableName string updatedCount int deletedCount int insertedIds IEnumerable<long> exception Exception Returns SaveResponseBuilder Build() public SaveResponse Build() Returns SaveResponse"
  },
  "api/DataAccess.Shared.SaveResult.html": {
    "href": "api/DataAccess.Shared.SaveResult.html",
    "title": "Class SaveResult | CumulusRCM",
    "keywords": "Class SaveResult Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public record SaveResult : IEquatable<SaveResult> Inheritance object SaveResult Implements IEquatable<SaveResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SaveResult(string, int, int, IEnumerable<long>?, Exception?) public SaveResult(string TableName, int UpdatedCount = 0, int DeletedCount = 0, IEnumerable<long>? InsertedIds = null, Exception? Exception = null) Parameters TableName string UpdatedCount int DeletedCount int InsertedIds IEnumerable<long> Exception Exception SaveResult(string, long) public SaveResult(string tableName, long insertedId) Parameters tableName string insertedId long Properties DeletedCount public int DeletedCount { get; init; } Property Value int Exception public Exception? Exception { get; init; } Property Value Exception InsertedIds public IEnumerable<long>? InsertedIds { get; init; } Property Value IEnumerable<long> TableName public string TableName { get; init; } Property Value string UpdatedCount public int UpdatedCount { get; init; } Property Value int"
  },
  "api/DataAccess.Shared.TableInfoAttribute.html": {
    "href": "api/DataAccess.Shared.TableInfoAttribute.html",
    "title": "Class TableInfoAttribute | CumulusRCM",
    "keywords": "Class TableInfoAttribute Namespace DataAccess.Shared Assembly DataAccess.Shared.dll [AttributeUsage(AttributeTargets.Class, Inherited = false)] public sealed class TableInfoAttribute : Attribute Inheritance object Attribute TableInfoAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors TableInfoAttribute(string?, string?, string?, bool) public TableInfoAttribute(string? tableName = null, string? primaryKeyName = null, string? sequenceName = null, bool isIdentity = false) Parameters tableName string primaryKeyName string sequenceName string isIdentity bool Properties IsIdentity public bool IsIdentity { get; } Property Value bool PrimaryKeyName public string? PrimaryKeyName { get; } Property Value string SequenceName public string? SequenceName { get; } Property Value string TableName public string? TableName { get; } Property Value string"
  },
  "api/DataAccess.Shared.UnitOfWork.html": {
    "href": "api/DataAccess.Shared.UnitOfWork.html",
    "title": "Class UnitOfWork | CumulusRCM",
    "keywords": "Class UnitOfWork Namespace DataAccess.Shared Assembly DataAccess.Shared.dll public class UnitOfWork : IUnitOfWork Inheritance object UnitOfWork Implements IUnitOfWork Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors UnitOfWork(ISaveStrategy, IDatabaseMapper) public UnitOfWork(ISaveStrategy saveStrategy, IDatabaseMapper databaseMapper) Parameters saveStrategy ISaveStrategy databaseMapper IDatabaseMapper Properties QueuedItemsCount public int QueuedItemsCount { get; } Property Value int Methods AddCollection<T>(DataChangeKind, ICollection<T>) public void AddCollection<T>(DataChangeKind dataChangeKind, ICollection<T> entities) where T : class Parameters dataChangeKind DataChangeKind entities ICollection<T> Type Parameters T Add<T>(DataChangeKind, T) public void Add<T>(DataChangeKind dataChangeKind, T entity) where T : class Parameters dataChangeKind DataChangeKind entity T Type Parameters T GetQueuedInsertItems<T>() public IEnumerable<T> GetQueuedInsertItems<T>() where T : class Returns IEnumerable<T> Type Parameters T Reset() public void Reset() SaveAsync() public Task<SaveResponse> SaveAsync() Returns Task<SaveResponse>"
  },
  "api/DataAccess.Shared.html": {
    "href": "api/DataAccess.Shared.html",
    "title": "Namespace DataAccess.Shared | CumulusRCM",
    "keywords": "Namespace DataAccess.Shared Classes AndOr ColumnInfoAttribute ConnectedExpression ConnectedExpression<T> DataChangeComparer DataChangeFactory DataChangeKind DataChange<T> DataServiceUnitOfWork Filter FilterExpression FilterExpression<T> FilterSegment FilterSegment<T> NameReaderExtensions Operator OrderBy OrderByExpression OrderByExpression<T> OrderDirection Pager ParameterValue ParameterValues Response ResponseExtensions Response<T> SaveResponse SaveResponseBuilder SaveResult TableInfoAttribute UnitOfWork Interfaces ICustomQueries ICustomReader IDataChange IDataService IDatabaseMap IDatabaseMapper IQueries<T> IReaderFactory IReader<T> IReportService ISaveStrategy ISequenceGenerator ITableInfo ITrackChanges IUnitOfWork"
  },
  "api/DataAccess.SimpleSaveStrategy.html": {
    "href": "api/DataAccess.SimpleSaveStrategy.html",
    "title": "Class SimpleSaveStrategy | CumulusRCM",
    "keywords": "Class SimpleSaveStrategy Namespace DataAccess Assembly DataAccess.dll public class SimpleSaveStrategy : ISaveStrategy Inheritance object SimpleSaveStrategy Implements ISaveStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors SimpleSaveStrategy(IDbConnectionManager, ISequenceGenerator) public SimpleSaveStrategy(IDbConnectionManager connectionManager, ISequenceGenerator sequenceGenerator) Parameters connectionManager IDbConnectionManager sequenceGenerator ISequenceGenerator Methods SaveAsync(IEnumerable<IDataChange>) public Task<SaveResponse> SaveAsync(IEnumerable<IDataChange> dataChanges) Parameters dataChanges IEnumerable<IDataChange> Returns Task<SaveResponse>"
  },
  "api/DataAccess.TableInfo-1.html": {
    "href": "api/DataAccess.TableInfo-1.html",
    "title": "Class TableInfo<T> | CumulusRCM",
    "keywords": "Class TableInfo<T> Namespace DataAccess Assembly DataAccess.dll public sealed record TableInfo<T> : ITableInfo, IEquatable<TableInfo<T>> Type Parameters T Inheritance object TableInfo<T> Implements ITableInfo IEquatable<TableInfo<T>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods TableSqlBuilderExtensions.GetCountSql(ITableInfo, Filter?) TableSqlBuilderExtensions.GetReadSql(ITableInfo, Filter?, int, int, OrderBy?, IReadOnlyCollection<string>?) TableSqlBuilderExtensions.GetWriteSql(ITableInfo, IDataChange) EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors TableInfo() public TableInfo() TableInfo(string?, string?, bool, IEnumerable<ColumnInfo>?) public TableInfo(string? tableName = null, string? sequence = null, bool isIdentity = false, IEnumerable<ColumnInfo>? mappedColumnsInfos = null) Parameters tableName string sequence string isIdentity bool mappedColumnsInfos IEnumerable<ColumnInfo> Properties ColumnsMap public IReadOnlyCollection<IColumnInfo> ColumnsMap { get; } Property Value IReadOnlyCollection<IColumnInfo> CustomDeleteSqlTemplate public string? CustomDeleteSqlTemplate { get; init; } Property Value string CustomInsertSqlTemplate public string? CustomInsertSqlTemplate { get; init; } Property Value string CustomSelectSqlTemplate public string? CustomSelectSqlTemplate { get; init; } Property Value string CustomStoredProcedureSqlTemplate public string? CustomStoredProcedureSqlTemplate { get; init; } Property Value string CustomUpdateSqlTemplate public string? CustomUpdateSqlTemplate { get; init; } Property Value string EntityType public Type EntityType { get; } Property Value Type IsIdentity public bool IsIdentity { get; } Property Value bool IsSequencePk public bool IsSequencePk { get; } Property Value bool PrimaryKeyName public string PrimaryKeyName { get; } Property Value string PrimaryKeyType public Type PrimaryKeyType { get; } Property Value Type Priority public int Priority { get; init; } Property Value int SequenceName public string SequenceName { get; } Property Value string TableName public string TableName { get; } Property Value string Methods GetPrimaryKeyValue(object) public object GetPrimaryKeyValue(object entity) Parameters entity object Returns object SetPrimaryKeyValue(object, long) public void SetPrimaryKeyValue(object entity, long value) Parameters entity object value long"
  },
  "api/DataAccess.html": {
    "href": "api/DataAccess.html",
    "title": "Namespace DataAccess | CumulusRCM",
    "keywords": "Namespace DataAccess Classes ColumnInfo DatabaseMap Queries<T> Reader Reader<T> SequenceGenerator SimpleSaveStrategy TableInfo<T> Interfaces IColumnInfo"
  },
  "api/DataAccessTests.BillingClientTests.html": {
    "href": "api/DataAccessTests.BillingClientTests.html",
    "title": "Class BillingClientTests | CumulusRCM",
    "keywords": "Class BillingClientTests Namespace DataAccessTests Assembly DataAccessTests.dll public class BillingClientTests Inheritance object BillingClientTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods ClientSaveStrategy_Calls_Api_On_Save() [Fact] public Task ClientSaveStrategy_Calls_Api_On_Save() Returns Task"
  },
  "api/DataAccessTests.DataChangeComparerTests.html": {
    "href": "api/DataAccessTests.DataChangeComparerTests.html",
    "title": "Class DataChangeComparerTests | CumulusRCM",
    "keywords": "Class DataChangeComparerTests Namespace DataAccessTests Assembly DataAccessTests.dll public class DataChangeComparerTests Inheritance object DataChangeComparerTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Collection_DataChange_Test_SqlShouldGenPk_and_SqlShouldReturnPk(bool, int, bool, bool) [Theory] [InlineData(new object[] { true, 0, false, true })] [InlineData(new object[] { false, 0, false, false })] [InlineData(new object[] { false, 1, false, false })] public void Collection_DataChange_Test_SqlShouldGenPk_and_SqlShouldReturnPk(bool isIdentity, int id, bool expectedShouldGen, bool expectedShouldReturn) Parameters isIdentity bool id int expectedShouldGen bool expectedShouldReturn bool Equals_WhenBothObjectsAreNull_ReturnsTrue() [Fact] public void Equals_WhenBothObjectsAreNull_ReturnsTrue() Equals_WhenOneObjectIsNull_ReturnsFalse() [Fact] public void Equals_WhenOneObjectIsNull_ReturnsFalse() GetHashCode_WhenObjectIsNotNull_ReturnsExpectedHashCode(int) [Theory] [InlineData(new object[] { 1 })] [InlineData(new object[] { 5 })] public void GetHashCode_WhenObjectIsNotNull_ReturnsExpectedHashCode(int pk) Parameters pk int GetHashCode_WhenObjectIsNull_ReturnsZero() [Fact] public void GetHashCode_WhenObjectIsNull_ReturnsZero() Single_Object_DataChange_Test_SqlShouldGenPk_and_SqlShouldReturnPk(bool, int, bool, bool) [Theory] [InlineData(new object[] { true, 0, false, true })] [InlineData(new object[] { false, 0, true, true })] [InlineData(new object[] { false, 1, false, false })] public void Single_Object_DataChange_Test_SqlShouldGenPk_and_SqlShouldReturnPk(bool isIdentity, int id, bool expectedShouldGen, bool expectedShouldReturn) Parameters isIdentity bool id int expectedShouldGen bool expectedShouldReturn bool"
  },
  "api/DataAccessTests.TableSqlBuilderTests.html": {
    "href": "api/DataAccessTests.TableSqlBuilderTests.html",
    "title": "Class TableSqlBuilderTests | CumulusRCM",
    "keywords": "Class TableSqlBuilderTests Namespace DataAccessTests Assembly DataAccessTests.dll public class TableSqlBuilderTests Inheritance object TableSqlBuilderTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods Insert_On_Identity_Table_On_Collection_Generates_Identity_Get_And_Set(bool) [Theory] [InlineData(new object[] { true })] [InlineData(new object[] { false })] public void Insert_On_Identity_Table_On_Collection_Generates_Identity_Get_And_Set(bool isIdentity) Parameters isIdentity bool Insert_On_Identity_Table_On_SingleEntity_Does_Not_Set_PK_And_Returns_New_Identity_Value(bool) [Theory] [InlineData(new object[] { true })] [InlineData(new object[] { false })] public void Insert_On_Identity_Table_On_SingleEntity_Does_Not_Set_PK_And_Returns_New_Identity_Value(bool isIdentity) Parameters isIdentity bool Select_Using_Columns_generates_only_selected_columns() [Fact] public void Select_Using_Columns_generates_only_selected_columns() Select_generates_all_columns() [Fact] public void Select_generates_all_columns()"
  },
  "api/DataAccessTests.html": {
    "href": "api/DataAccessTests.html",
    "title": "Namespace DataAccessTests | CumulusRCM",
    "keywords": "Namespace DataAccessTests Classes BillingClientTests DataChangeComparerTests TableSqlBuilderTests"
  },
  "api/DatabaseMigrator.AppliedMigrationScript.html": {
    "href": "api/DatabaseMigrator.AppliedMigrationScript.html",
    "title": "Class AppliedMigrationScript | CumulusRCM",
    "keywords": "Class AppliedMigrationScript Namespace DatabaseMigrator Assembly DatabaseMigrator.dll public class AppliedMigrationScript Inheritance object AppliedMigrationScript Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Applied public DateTime Applied { get; set; } Property Value DateTime MigrationScript_Id public int MigrationScript_Id { get; set; } Property Value int"
  },
  "api/DatabaseMigrator.IMigrator.html": {
    "href": "api/DatabaseMigrator.IMigrator.html",
    "title": "Interface IMigrator | CumulusRCM",
    "keywords": "Interface IMigrator Namespace DatabaseMigrator Assembly DatabaseMigrator.dll public interface IMigrator Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods UpgradeDatabaseAsync() Task<bool> UpgradeDatabaseAsync() Returns Task<bool>"
  },
  "api/DatabaseMigrator.MigrationScript.html": {
    "href": "api/DatabaseMigrator.MigrationScript.html",
    "title": "Class MigrationScript | CumulusRCM",
    "keywords": "Class MigrationScript Namespace DatabaseMigrator Assembly DatabaseMigrator.dll public class MigrationScript Inheritance object MigrationScript Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Created public DateTime Created { get; set; } Property Value DateTime Description public string Description { get; set; } Property Value string Id public int Id { get; set; } Property Value int IsActive public bool IsActive { get; set; } Property Value bool Script public string[] Script { get; set; } Property Value string[] ScriptOrder public int ScriptOrder { get; set; } Property Value int"
  },
  "api/DatabaseMigrator.Migrator.html": {
    "href": "api/DatabaseMigrator.Migrator.html",
    "title": "Class Migrator | CumulusRCM",
    "keywords": "Class Migrator Namespace DatabaseMigrator Assembly DatabaseMigrator.dll public class Migrator : IMigrator Inheritance object Migrator Implements IMigrator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors Migrator(IDbConnectionManager) public Migrator(IDbConnectionManager manager) Parameters manager IDbConnectionManager Methods UpgradeDatabaseAsync() public Task<bool> UpgradeDatabaseAsync() Returns Task<bool>"
  },
  "api/DatabaseMigrator.html": {
    "href": "api/DatabaseMigrator.html",
    "title": "Namespace DatabaseMigrator | CumulusRCM",
    "keywords": "Namespace DatabaseMigrator Classes AppliedMigrationScript MigrationScript Migrator Interfaces IMigrator"
  },
  "api/EndpointMapper.EndpointMapperBase.html": {
    "href": "api/EndpointMapper.EndpointMapperBase.html",
    "title": "Class EndpointMapperBase | CumulusRCM",
    "keywords": "Class EndpointMapperBase Namespace EndpointMapper Assembly EndpointMapper.dll public abstract class EndpointMapperBase Inheritance object EndpointMapperBase Derived BillingEndpoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods MapCrudEndpoint<T>(IEndpointRouteBuilder, IDataService, IQueries<T>?) protected static IEndpointRouteBuilder MapCrudEndpoint<T>(IEndpointRouteBuilder routeBuilder, IDataService dataService, IQueries<T>? queries = null) where T : class Parameters routeBuilder IEndpointRouteBuilder dataService IDataService queries IQueries<T> Returns IEndpointRouteBuilder Type Parameters T"
  },
  "api/EndpointMapper.html": {
    "href": "api/EndpointMapper.html",
    "title": "Namespace EndpointMapper | CumulusRCM",
    "keywords": "Namespace EndpointMapper Classes EndpointMapperBase"
  },
  "api/FakeBillingDataTests.FakeBillingReaderTests.html": {
    "href": "api/FakeBillingDataTests.FakeBillingReaderTests.html",
    "title": "Class FakeBillingReaderTests | CumulusRCM",
    "keywords": "Class FakeBillingReaderTests Namespace FakeBillingDataTests Assembly FakeBillingDataTests.dll public class FakeBillingReaderTests Inheritance object FakeBillingReaderTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods FilterItems_Removes_UnmatchedItems() [Fact] public Task FilterItems_Removes_UnmatchedItems() Returns Task GetItems_PageSize_works() [Fact] public Task GetItems_PageSize_works() Returns Task GetItems_Returns_Data() [Fact] public Task GetItems_Returns_Data() Returns Task OrderByDescending_Sorts_Items() [Fact] public Task OrderByDescending_Sorts_Items() Returns Task OrderByItems_Sorts_Items() [Fact] public Task OrderByItems_Sorts_Items() Returns Task"
  },
  "api/FakeBillingDataTests.FakeWriterTests.html": {
    "href": "api/FakeBillingDataTests.FakeWriterTests.html",
    "title": "Class FakeWriterTests | CumulusRCM",
    "keywords": "Class FakeWriterTests Namespace FakeBillingDataTests Assembly FakeBillingDataTests.dll public class FakeWriterTests Inheritance object FakeWriterTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods UnitOfWork_Queues_Changes(int, int, int) [Theory] [InlineData(new object[] { 1, 1, 1 })] [InlineData(new object[] { 2, 0, 2 })] [InlineData(new object[] { 3, 1, 0 })] [InlineData(new object[] { 0, 4, 1 })] public void UnitOfWork_Queues_Changes(int updateCount, int insertCount, int deleteCount) Parameters updateCount int insertCount int deleteCount int UnitOfWork_Reset_Clears_Changes(int, int, int) [Theory] [InlineData(new object[] { 1, 1, 1 })] [InlineData(new object[] { 2, 0, 2 })] [InlineData(new object[] { 3, 1, 0 })] [InlineData(new object[] { 0, 4, 1 })] public void UnitOfWork_Reset_Clears_Changes(int updateCount, int insertCount, int deleteCount) Parameters updateCount int insertCount int deleteCount int"
  },
  "api/FakeBillingDataTests.html": {
    "href": "api/FakeBillingDataTests.html",
    "title": "Namespace FakeBillingDataTests | CumulusRCM",
    "keywords": "Namespace FakeBillingDataTests Classes FakeBillingReaderTests FakeWriterTests"
  },
  "api/Tests.OrderExpressionTests.html": {
    "href": "api/Tests.OrderExpressionTests.html",
    "title": "Class OrderExpressionTests | CumulusRCM",
    "keywords": "Class OrderExpressionTests Namespace Tests Assembly Tests.dll public class OrderExpressionTests Inheritance object OrderExpressionTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods FilterExpression_Serialize_Produces_Valid_Json() [Fact] public void FilterExpression_Serialize_Produces_Valid_Json() Filter_Serialize_Produces_Valid_Json() [Fact] public void Filter_Serialize_Produces_Valid_Json() OrderByExpression_Serialize_Produces_Valid_Json() [Fact] public void OrderByExpression_Serialize_Produces_Valid_Json() OrderBy_Serialize_Produces_Valid_Json() [Fact] public void OrderBy_Serialize_Produces_Valid_Json()"
  },
  "api/Tests.SampleData.TestObject.html": {
    "href": "api/Tests.SampleData.TestObject.html",
    "title": "Class TestObject | CumulusRCM",
    "keywords": "Class TestObject Namespace Tests.SampleData Assembly Tests.dll public class TestObject Inheritance object TestObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Properties Description public string? Description { get; set; } Property Value string Id public int Id { get; set; } Property Value int List public List<int> List { get; set; } Property Value List<int> Name public string Name { get; set; } Property Value string Methods TryParse(string, out TestObject?) public static bool TryParse(string json, out TestObject? testObject) Parameters json string testObject TestObject Returns bool"
  },
  "api/Tests.SampleData.html": {
    "href": "api/Tests.SampleData.html",
    "title": "Namespace Tests.SampleData | CumulusRCM",
    "keywords": "Namespace Tests.SampleData Classes TestObject"
  },
  "api/Tests.html": {
    "href": "api/Tests.html",
    "title": "Namespace Tests | CumulusRCM",
    "keywords": "Namespace Tests Classes OrderExpressionTests"
  },
  "api/ViewModelTests.ClaimsAuthenticationTests.FakeBillingDataService.html": {
    "href": "api/ViewModelTests.ClaimsAuthenticationTests.FakeBillingDataService.html",
    "title": "Class ClaimsAuthenticationTests.FakeBillingDataService | CumulusRCM",
    "keywords": "Class ClaimsAuthenticationTests.FakeBillingDataService Namespace ViewModelTests Assembly ViewModelTests.dll public record ClaimsAuthenticationTests.FakeBillingDataService : DataServiceUnitOfWork, IEquatable<DataServiceUnitOfWork>, IBillingDataService, IDataService, IUnitOfWork, IEquatable<ClaimsAuthenticationTests.FakeBillingDataService> Inheritance object DataServiceUnitOfWork ClaimsAuthenticationTests.FakeBillingDataService Implements IEquatable<DataServiceUnitOfWork> IBillingDataService IDataService IUnitOfWork IEquatable<ClaimsAuthenticationTests.FakeBillingDataService> Inherited Members DataServiceUnitOfWork.QueuedItemsCount DataServiceUnitOfWork.SaveStrategy DataServiceUnitOfWork.DatabaseMapper DataServiceUnitOfWork.Reset() DataServiceUnitOfWork.Add<T>(DataChangeKind, T) DataServiceUnitOfWork.AddCollection<T>(DataChangeKind, ICollection<T>) DataServiceUnitOfWork.SaveAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Constructors FakeBillingDataService(ISaveStrategy, IDatabaseMapper) public FakeBillingDataService(ISaveStrategy saveStrategy, IDatabaseMapper databaseMapper) Parameters saveStrategy ISaveStrategy databaseMapper IDatabaseMapper Methods GetQueries<T>() public IQueries<T> GetQueries<T>() where T : class Returns IQueries<T> Type Parameters T"
  },
  "api/ViewModelTests.ClaimsAuthenticationTests.html": {
    "href": "api/ViewModelTests.ClaimsAuthenticationTests.html",
    "title": "Class ClaimsAuthenticationTests | CumulusRCM",
    "keywords": "Class ClaimsAuthenticationTests Namespace ViewModelTests Assembly ViewModelTests.dll public class ClaimsAuthenticationTests Inheritance object ClaimsAuthenticationTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableExtensions.ItemAsEnumerable<T>(T?) EnumerableExtensions.ItemAsReadOnlyCollection<T>(T) TypeHelper.IsNullOrZero<T>(T?) NameReaderExtensions.GetMemberName<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberName<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberNames<T>(T, params Expression<Func<T, object>>[]) NameReaderExtensions.GetMemberType<T>(T, Expression<Action<T>>) NameReaderExtensions.GetMemberType<T>(T, Expression<Func<T, object>>) NameReaderExtensions.GetMemberTypes<T>(T, params Expression<Func<T, object>>[]) ResponseExtensions.AsResponse<T>(T) Methods IBillingDataService_GetAppUserIdAsync_Reads_Claim() [Fact] public Task IBillingDataService_GetAppUserIdAsync_Reads_Claim() Returns Task"
  },
  "api/ViewModelTests.html": {
    "href": "api/ViewModelTests.html",
    "title": "Namespace ViewModelTests | CumulusRCM",
    "keywords": "Namespace ViewModelTests Classes ClaimsAuthenticationTests ClaimsAuthenticationTests.FakeBillingDataService"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | CumulusRCM",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | CumulusRCM",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | CumulusRCM",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}